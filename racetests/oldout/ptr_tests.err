[Er]: Checkpoint: No left-over status file
[Er]: Checkpoint: No left-over status file
[Er]: Checkpoint: No left-over status file
[Er]: Multiple lock summaries for 271.f
[Er]: makeSimpleLock: Couldn't find global kernel_sem
[Er]: makeSimpleLock: Couldn't find global kernel_flag
[Er]: Multiple lock summaries for 726.f
[Er]: Multiple lock summaries for 727.f
[Er]: Multiple lock summaries for 725.f
[Er]: Multiple lock summaries for 270.f
[Er]: Checkpoint: No left-over status file
[Er]: combineVals: trying to unify different types of vals
[Er]: SS: modSumm is BOTTOM: 190.f
[Er]: SS call: *(dbc->c_am_close) returned 0 fun(s)
[Er]: call: *(dbc->c_am_close) returned 0 fun(s)
[Er]: SS call: *(__db_global_values.j_unlink) returned 0 fun(s)
[Er]: SS call: *(__db_global_values.j_unlink) returned 0 fun(s)
[Er]: call: *(__db_global_values.j_unlink) returned 0 fun(s)
[Er]: SS call: *(__db_global_values.j_free) returned 0 fun(s)
[Er]: call: *(__db_global_values.j_free) returned 0 fun(s)
[Er]: SS call: *(__db_global_values.j_close) returned 0 fun(s)
[Er]: SS call: *(__db_global_values.j_close) returned 0 fun(s)
[Er]: call: *(__db_global_values.j_close) returned 0 fun(s)
[Er]: eval PlusA, not used as pointer arith
[Er]: SS call: *(__db_global_values.j_unmap) returned 0 fun(s)
[Er]: call: *(__db_global_values.j_unmap) returned 0 fun(s)
[Er]: SS call: *(dbenv___0->db_free) returned 0 fun(s)
[Er]: SS call: *(__db_global_values.j_free) returned 0 fun(s)
[Er]: call: *(dbenv___0->db_free) returned 0 fun(s)
[Er]: call: *(__db_global_values.j_free) returned 0 fun(s)
[Er]: SS call: *(dbc_arg->c_am_writelock) returned 0 fun(s)
[Er]: SS call: *(opd->c_am_get) returned 0 fun(s)
[Er]: SS call: *(dbc_n->c_am_get) returned 0 fun(s)
[Er]: SS call: *((cp_n->opd)->c_am_get) returned 0 fun(s)
[Er]: handleCallArgs: unknownLoc for Vtop (*((void *)(& cp_n->page)))
[Er]: SS call: *(dbc_n->c_am_get) returned 0 fun(s)
[Er]: SS call: *(dbc_n->c_am_bulk) returned 0 fun(s)
[Er]: call: *(dbc_arg->c_am_writelock) returned 0 fun(s)
[Er]: call: *(opd->c_am_get) returned 0 fun(s)
[Er]: call: *(dbc_n->c_am_get) returned 0 fun(s)
[Er]: call: *((cp_n->opd)->c_am_get) returned 0 fun(s)
[Er]: call: *(dbc_n->c_am_get) returned 0 fun(s)
[Er]: call: *(dbc_n->c_am_bulk) returned 0 fun(s)
[Er]: SS: modSumm is BOTTOM: 652.f
[Er]: SS: modSumm is BOTTOM: 671.f
[Er]: SS call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: SS call: *(opd->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: call: *(opd->c_am_del) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: SS call: *(opd->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: call: *(opd->c_am_del) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: SS call: *(opd->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: call: *(opd->c_am_del) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: SS call: *(opd->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: call: *(opd->c_am_del) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: call: *((*sdbp__heapify__0)->s_callback) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: SS call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: SS call: *(opd->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_del) returned 0 fun(s)
[Er]: call: *(dbc->c_am_writelock) returned 0 fun(s)
[Er]: call: *(opd->c_am_del) returned 0 fun(s)
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_wait
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_spins
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_spin
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_nowait
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.locked
[Er]: handleCallArgs: unknownLoc for Vtop (((((DBC *)0)->dbp)->dbenv)->lk_handle)->mode
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_wait
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_spins
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_spin
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_nowait
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->locked
[Er]: handleCallArgs: unknownLoc for Vtop (((DBC *)0)->dbp)->s_refcnt
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_wait
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_spins
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_spin
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.mutex_set_nowait
[Er]: handleCallArgs: unknownLoc for Vtop ((((((DBC *)0)->dbp)->dbenv)->lk_handle)->reginfo.rp)->mutex.locked
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_wait
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_spins
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_spin
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->mutex_set_nowait
[Er]: handleCallArgs: unknownLoc for Vtop ((((DBC *)0)->dbp)->mutexp)->locked
[Er]: handleCallArgs: unknownLoc for Vtop (*((((DBC *)0)->dbp)->free_queue.tqh_last))
[Er]: handleCallArgs: unknownLoc for Vtop (((DBC *)0)->txn)->cursors
[Er]: handleCallArgs: unknownLoc for Vtop (*(((DBC *)0)->links.tqe_prev))
[Er]: handleCallArgs: unknownLoc for Vtop (((DBC *)0)->dbp)->free_queue.tqh_last
[Er]: handleCallArgs: unknownLoc for Vtop (((DBC *)0)->dbp)->active_queue.tqh_last
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: assuming exp may be null: (DBC *)0
[Er]: substLval: offset mismatch reiserfs_journal_list.j_commit_left(139) on list_head(135) 3
[Er]: substLval: offset mismatch reiserfs_journal_list.j_list(139) on list_head(135) 3
[Er]: substLval: offset mismatch reiserfs_journal_list.j_list(139) on list_head(135) 3
[Er]: substLval: offset mismatch reiserfs_journal_list.j_older_commits_done(139) on list_head(135) 3
[Er]: substLval: offset mismatch reiserfs_journal_list.j_trans_id(139) on list_head(135) 3
[Er]: RS: summary lock maps to multiple @ accList:sid: 6 instr: 2
[Er]: regenNodeinfo l:731:lock
[Er]: nodeInfo not found for: l:731:lock
[Er]: nodeInfo not found for: l:731:lock
[Er]: nodeInfo not found for: l:731:lock
[Er]: No entry-points file!
