Mon Oct 12 14:20:38 PDT 2009
incrementing generation number
incrementing value in gen_num.txt

running server on /home/jan/research/relay-race/racetests/thread_tests/ciltrees
Registered summary type: rs
Server ip is: 127.0.0.1
Loading Cil Varinfo ID ranges for lookup tables
Setting Cil Varinfo ID ranges
Finished parsing config group: DISTRIBUTED
Finished parsing config group: SERVER
Done reading config file
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: ENTRY_POINTS
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: SYM_EX
Done reading config file
Initializing Andersen's AA info
Loading function info
Loading tempVar info
Using old PTA results: /home/jan/research/relay-race/racetests/thread_tests/ciltrees/.pta_temp.anders
Old PTA results loaded
Entry points use roots: true
trying to clear logs
Callgraph, etc.
-----
Reached end of /home/jan/research/relay-race/racetests/thread_tests/ciltrees/calls.anders call graph file
Num funcs: 33
Scc_cg: Pruned 5 funcs w/out bodies for scc DAG
Starting server
-----
>>> PROGRESS 1/28 SCCs DONE!

>>> PROGRESS 2/28 SCCs DONE!

>>> PROGRESS 3/28 SCCs DONE!

>>> PROGRESS 4/28 SCCs DONE!

>>> PROGRESS 5/28 SCCs DONE!

>>> PROGRESS 6/28 SCCs DONE!

>>> PROGRESS 7/28 SCCs DONE!

>>> PROGRESS 8/28 SCCs DONE!

>>> PROGRESS 9/28 SCCs DONE!

>>> PROGRESS 10/28 SCCs DONE!

>>> PROGRESS 11/28 SCCs DONE!

>>> PROGRESS 12/28 SCCs DONE!

>>> PROGRESS 13/28 SCCs DONE!

>>> PROGRESS 14/28 SCCs DONE!

>>> PROGRESS 15/28 SCCs DONE!

>>> PROGRESS 16/28 SCCs DONE!

>>> PROGRESS 17/28 SCCs DONE!

>>> PROGRESS 18/28 SCCs DONE!

>>> PROGRESS 19/28 SCCs DONE!

>>> PROGRESS 20/28 SCCs DONE!

>>> PROGRESS 21/28 SCCs DONE!

>>> PROGRESS 22/28 SCCs DONE!

>>> PROGRESS 23/28 SCCs DONE!

>>> PROGRESS 24/28 SCCs DONE!

>>> PROGRESS 25/28 SCCs DONE!

>>> PROGRESS 26/28 SCCs DONE!

>>> PROGRESS 27/28 SCCs DONE!

>>> PROGRESS 28/28 SCCs DONE!

Finished all SCCs
Received warnings from worker. Status: 1/1
Sorting races

Printing races

****
Possible race between access to:

_a177_60167_threads_1.next @ threads.c:171 and
_a177_60167_threads_1.next @ threads.c:171
	Cluster ID: 12
	Escapes? true / true 
	Accessed at locs:
	[threads.c:123:(517.f), threads.c:134:(519.f), threads.c:135:(519.f)] and
	[threads.c:182:(528.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads.c:305 62430 w/ func: loopAndRecurse
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: threads.c:306 62501 w/ func: loopAndRecurse
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a177_60167_threads_1.next @ threads.c:171 and
_a177_60167_threads_1.next @ threads.c:171
	Cluster ID: 7
	Escapes? true / true 
	Accessed at locs:
	[threads.c:152:(522.f)] and
	[threads.c:182:(528.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads.c:315 62760 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a177_60167_threads_1.obj @ threads.c:171 and
_a177_60167_threads_1.obj @ threads.c:171
	Cluster ID: 9
	Escapes? true / true 
	Accessed at locs:
	[threads.c:192:(536.f)] and
	[threads.c:181:(528.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads.c:322 62930 w/ func: racyGetterUse
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a263_61428_threads_1.l @ threads.c:251 and
_a263_61428_threads_1.l @ threads.c:251
	Cluster ID: 6
	Escapes? true / true 
	Accessed at locs:
	[threads.c:67:(498.f), threads.c:71:(498.f)] and
	[threads.c:271:(562.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
	made empty at: threads.c:71
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads.c:294 62220 w/ func: munge
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

dlracy->x @ threads.c:98 and
dlracy->x @ threads.c:98
	Cluster ID: 1
	Escapes? true / true 
	Accessed at locs:
	[threads.c:82:(501.f)] and
	[threads.c:82:(501.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads.c:102 59102 w/ func: racyMunge
	Th. 2 spawned: threads.c:102 59102 w/ func: racyMunge

Different possible paths & LS (first 4):

****
Possible race between access to:

REP:[686] and
REP:[686]
	Cluster ID: 0
	Escapes? true / true 
	Accessed at locs:
	[threads2.c:129:(625.f)] and
	[threads2.c:129:(625.f)]

	Confidence: used PTA nodes lblSet(1, 1)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads2.c:158 60056 w/ func: modU
	Th. 2 spawned: threads2.c:158 60056 w/ func: modU

Different possible paths & LS (first 4):

****
Possible race between access to:

REP:[689].x and
REP:[689].x
	Cluster ID: 3
	Escapes? true / true 
	Accessed at locs:
	[threads.c:111:(515.f)] and
	[threads.c:111:(515.f)]

	Confidence: used PTA nodes lblSet(1, 1)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: threads.c:295 62291 w/ func: globMunge
	Th. 2 spawned: threads.c:295 62291 w/ func: globMunge

Different possible paths & LS (first 4):

****
Possible race between access to:

REP:[693].x and
REP:[697].x
	Cluster ID: 11
	Escapes? true / true 
	Accessed at locs:
	[threads.c:209:(540.f)] and
	[threads.c:121:(517.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = {REP:[694]#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[698]#g} (1)
	(rep. lock)
	Th. 1 spawned: threads.c:322 62930 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	lval 2: REP:[698].x
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse
(1)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse
(2)
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	lval 2: REP:[698].x
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(3)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
****
Possible race between access to:

REP:[693].x and
REP:[700].x
	Cluster ID: 14
	Escapes? true / true 
	Accessed at locs:
	[threads.c:209:(540.f)] and
	[threads.c:150:(522.f), threads.c:156:(522.f), threads.c:161:(522.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = {REP:[694]#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:156
	Th. 1 spawned: threads.c:322 62930 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[701].x
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:315 62760 w/ func: loopWithGoto
(1)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:315 62760 w/ func: loopWithGoto
(2)
	lval 2: REP:[701].x
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
(3)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
****
Possible race between access to:

REP:[693].x and
REP:[700].x
	Cluster ID: 8
	Escapes? true / true 
	Accessed at locs:
	[threads.c:209:(540.f)] and
	[threads.c:161:(522.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = {REP:[694]#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[701]#g, REP:[702]#g} (2)
	(rep. lock)
	Th. 1 spawned: threads.c:322 62930 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[701].x
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:315 62760 w/ func: loopWithGoto
(1)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:315 62760 w/ func: loopWithGoto
(2)
	lval 2: REP:[701].x
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
(3)
	Th. 1 spawned: threads.c:323 63000 w/ func: racyGetterUse
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
****
Possible race between access to:

REP:[700].x and
REP:[693].x
	Cluster ID: 2
	Escapes? true / true 
	Accessed at locs:
	[threads.c:161:(522.f)] and
	[threads.c:161:(522.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = {REP:[701]#g, REP:[702]#g} (2)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[694]#g, REP:[695]#g} (2)
	(rep. lock)
	Th. 1 spawned: threads.c:315 62760 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[701].x
	lval 2: REP:[694].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	lval 1: REP:[701].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(2)
	lval 2: REP:[694].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(3)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

REP:[700].x and
REP:[697].x
	Cluster ID: 10
	Escapes? true / true 
	Accessed at locs:
	[threads.c:161:(522.f)] and
	[threads.c:121:(517.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = {REP:[701]#g, REP:[702]#g} (2)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[698]#g} (1)
	(rep. lock)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[701].x
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	lval 2: REP:[698].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(1)
	lval 1: REP:[701].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(2)
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	lval 2: REP:[698].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(3)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
****
Possible race between access to:

REP:[700].x and
REP:[700].x
	Cluster ID: 5
	Escapes? true / true 
	Accessed at locs:
	[threads.c:161:(522.f)] and
	[threads.c:150:(522.f), threads.c:156:(522.f), threads.c:161:(522.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = {REP:[701]#g, REP:[702]#g} (2)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:156
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:315 62760 w/ func: loopWithGoto

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[701].x
	lval 2: REP:[701].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
(1)
	lval 1: REP:[701].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
(2)
	lval 2: REP:[701].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
(3)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:316 62829 w/ func: loopWithGoto
****
Possible race between access to:

REP:[698].x and
REP:[698].x
	Cluster ID: 4
	Escapes? true / true 
	Accessed at locs:
	[threads.c:121:(517.f)] and
	[threads.c:121:(517.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = empty;
	made empty at: threads.c:134
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	Th. 1 spawned: threads.c:306 62501 w/ func: loopAndRecurse
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[698]#g} (1)
	(rep. lock)
	lval 2: REP:[697].x
	Th. 1 spawned: threads.c:306 62501 w/ func: loopAndRecurse
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse
(1)
LS for 1st access:
L+ = {REP:[698]#g} (1)
	(rep. lock)
	lval 1: REP:[697].x
	Th. 1 spawned: threads.c:306 62501 w/ func: loopAndRecurse
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse
(2)
	Th. 1 spawned: threads.c:306 62501 w/ func: loopAndRecurse
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(3)
LS for 1st access:
L+ = {REP:[698]#g} (1)
	(rep. lock)
	lval 1: REP:[697].x
	Th. 1 spawned: threads.c:306 62501 w/ func: loopAndRecurse
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
****
Possible race between access to:

REP:[700].x and
REP:[697].x
	Cluster ID: 13
	Escapes? true / true 
	Accessed at locs:
	[threads.c:150:(522.f), threads.c:156:(522.f), threads.c:161:(522.f)] and
	[threads.c:121:(517.f)]

	Confidence: used PTA nodes lblSet(3, 3)

LS for 1st access:
L+ = empty;
	made empty at: threads.c:156
LS for 2nd access:
L+ = {REP:[698]#g} (1)
	(rep. lock)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:305 62430 w/ func: loopAndRecurse

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[701].x
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	lval 2: REP:[698].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(1)
	lval 1: REP:[701].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(2)
LS for 2nd access:
L+ = empty;
	made empty at: threads.c:134
	lval 2: REP:[698].x
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse
(3)
	Th. 1 spawned: threads.c:316 62829 w/ func: loopWithGoto
	Th. 2 spawned: threads.c:306 62501 w/ func: loopAndRecurse


$$$$$$
Total Warnings: 15
Elapsed time (secs): 0.052003
Top heap size (MB): 1
Current heap size (MB): 1
Lifetime allocated bytes (MB): 3
Collections -- minor: 13 major: 3 compactions: 0
Bytes per word: 4
Mon Oct 12 14:20:39 PDT 2009
