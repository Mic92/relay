Tue Jan 19 22:01:01 PST 2010
reserved status file: /tmp/temp.EF8qSn
running analysis on /home/jan/research/relay-race/racetests/synclink/ciltrees
Registered summary type: rs_scc
Registered summary type: rs
Registered summary type: ss
Registered summary type: rss
Args: 
 ./race_anal.exe -cg /home/jan/research/relay-race/racetests/synclink/ciltrees -r -u jan -st /tmp/temp.EF8qSn
Checking for data races
-----
Loading Cil Varinfo ID ranges for lookup tables
Loading ranges from .vids_ckeys_fixed
Setting Cil Varinfo ID ranges
Resizing VID/CKEY cache to: 2298
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: ENTRY_POINTS
Finished parsing config group: SYM_EX
Done reading config file
myIP: 127.0.1.1
using /tmp/relay_scratch to store acquired files
using: /tmp/temp.EF8qSn to track status
Initializing Steensgaard AA info
Loading function info
Loading tempVar info
Using old PTA results
Old PTA results loaded
Initializing Andersen's AA info
Using old PTA results: /home/jan/research/relay-race/racetests/synclink/ciltrees/.pta_results.anders
Old PTA results loaded
Reached end of /home/jan/research/relay-race/racetests/synclink/ciltrees/calls.anders call graph file
Num funcs: 218
Scc_cg: Pruned 54 funcs w/out bodies for scc DAG
summary database will use:
	/home/jan/research/relay-race/racetests/synclink/ciltrees/relay_sums
Initializing summary rss
Checking leftover state: rss
[Er]: Checkpoint: No left-over status file
Initializing summary ss
Checking leftover state: ss
[Er]: Checkpoint: No left-over status file
Initializing summary rs
BS: Not doing any post-reboot cleanup
[Er]: makeSimpleLock: Couldn't find global kernel_sem
[Er]: makeSimpleLock: Couldn't find global kernel_flag
[Er]: Multiple lock summaries for _spin_unlock:31.f
[Er]: Multiple lock summaries for _spin_lock:30.f
[Er]: Multiple lock summaries for _spin_lock_irqsave:32.f
[Er]: Multiple lock summaries for _spin_unlock_irqrestore:33.f
Initializing summary rs_scc
BS: Not doing any post-reboot cleanup
SH: initEscapeable found (0, 1) thread (acts, formals)

Entry points use roots: true
file server will use: 14440
trying to clear old summaries / local srcs, etc.
Starting bottomup analysis
-----
[Er]: Checkpoint: No left-over status file
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #48
=================================
Summarizing function: mgsl_free_intermediate_txbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_intermediate_txbuffer_memory:270.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_intermediate_txbuffer_memory	0	0	4	2	

SS Sum:
 -> 
$SSBOT
SIZES: 270.f : 568
>>> PROGRESS 1/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #49
=================================
Summarizing function: mgsl_free_intermediate_rxbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_intermediate_rxbuffer_memory:268.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_intermediate_rxbuffer_memory	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 268.f : 199
>>> PROGRESS 2/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #51
=================================
Summarizing function: mgsl_free_buffer_list_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_buffer_list_memory:266.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_buffer_list_memory	0	0	3	2	

SS Sum:
 -> 
$SSBOT
SIZES: 266.f : 425
>>> PROGRESS 3/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #52
=================================
Summarizing function: mgsl_free_frame_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_frame_memory:264.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_frame_memory	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 264.f : 268
>>> PROGRESS 4/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #50
=================================
Summarizing function: mgsl_free_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_dma_buffers:262.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_dma_buffers	0	0	4	7	

SS Sum:
 -> 
$SSBOT
SIZES: 262.f : 645
>>> PROGRESS 5/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #163
=================================
Summarizing function: outb_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 10	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: outb_local:161.f
=======

SUMS (nm, lo, un, wr, re):	outb_local	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 161.f : 34
>>> PROGRESS 6/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #129
=================================
Summarizing function: outb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: outb:167.f
=======

SUMS (nm, lo, un, wr, re):	outb	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 167.f : 34
>>> PROGRESS 7/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #68
=================================
Summarizing function: disable_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: disable_dma:206.f
=======

SUMS (nm, lo, un, wr, re):	disable_dma	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 206.f : 34
>>> PROGRESS 8/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #47
=================================
Summarizing function: mgsl_release_resources : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_release_resources:250.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_release_resources	0	0	16	25	

SS Sum:
 -> 
$SSBOT
SIZES: 250.f : 2624
>>> PROGRESS 9/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #11
=================================
Summarizing function: synclink_cleanup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 28	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_cleanup:868.f
=======

SUMS (nm, lo, un, wr, re):	synclink_cleanup	0	0	17	32	

SS Sum:
 -> 
$SSBOT
SIZES: 868.f : 34
>>> PROGRESS 10/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #8
=================================
Summarizing function: synclink_exit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 46	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_exit:137.f
=======

SUMS (nm, lo, un, wr, re):	synclink_exit	0	0	17	32	

SS Sum:
 -> 
$SSBOT
SIZES: 137.f : 34
>>> PROGRESS 11/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #13
=================================
Summarizing function: irq_canonicalize : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 48	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: irq_canonicalize:140.f
=======

SUMS (nm, lo, un, wr, re):	irq_canonicalize	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 140.f : 34
>>> PROGRESS 12/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #122
=================================
Summarizing function: init_timer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: init_timer:110.f
=======

SUMS (nm, lo, un, wr, re):	init_timer	0	0	3	1	

SS Sum:
 -> 
$SSBOT
SIZES: 110.f : 312
>>> PROGRESS 13/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #123
=================================
Summarizing function: init_waitqueue_head : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: init_waitqueue_head:81.f
=======

SUMS (nm, lo, un, wr, re):	init_waitqueue_head	0	0	3	1	

SS Sum:
 -> 
$SSBOT
SIZES: 81.f : 339
>>> PROGRESS 14/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #124
=================================
Summarizing function: __constant_c_and_count_memset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __constant_c_and_count_memset:67.f
=======

SUMS (nm, lo, un, wr, re):	__constant_c_and_count_memset	0	0	1	0	

SS Sum:
 -> 
Extptr (5):
  lval = (*s)

SIZES: 67.f : 165
>>> PROGRESS 15/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #140
=================================
Summarizing function: __constant_memcpy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __constant_memcpy:54.f
=======

SUMS (nm, lo, un, wr, re):	__constant_memcpy	0	0	1	1	

SS Sum:
 -> 
Extptr (24):
  lval = (*to)

SIZES: 54.f : 372
>>> PROGRESS 16/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #121
=================================
Summarizing function: mgsl_allocate_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_allocate_device:252.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_allocate_device	0	0	31	5	

SS Sum:
 -> 
Mustptr -> lval = _a22124_702130_synclink_1
SIZES: 252.f : 34
>>> PROGRESS 17/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #125
=================================
Summarizing function: mgsl_add_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 31	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_add_device:251.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_add_device	0	0	9	18	

SS Sum:
 -> 
$SSBOT
SIZES: 251.f : 1162
>>> PROGRESS 18/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #12
=================================
Summarizing function: mgsl_enum_isa_devices : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_enum_isa_devices:864.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_enum_isa_devices	0	0	43	27	

SS Sum:
 -> 
$SSBOT
SIZES: 864.f : 34
>>> PROGRESS 19/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #14
=================================
Summarizing function: mgsl_init_tty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 64	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_init_tty:862.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_init_tty	0	0	11	6	

SS Sum:
 -> 
$SSTOP
SIZES: 862.f : 34
>>> PROGRESS 20/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #99
=================================
Summarizing function: mgsl_get_text_ptr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_text_ptr:322.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_text_ptr	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = mgsl_get_text_ptr
SIZES: 322.f : 34
>>> PROGRESS 21/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #10
=================================
Summarizing function: synclink_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_init:134.f
=======

SUMS (nm, lo, un, wr, re):	synclink_init	0	0	72	60	

SS Sum:
 -> 
$SSTOP
SIZES: 134.f : 34
>>> PROGRESS 22/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #0
=================================
Summarizing function: main : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 140	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: main:1148.f
=======

SUMS (nm, lo, un, wr, re):	main	0	0	72	60	

SS Sum:
 -> 
Vval: 0
SIZES: 1148.f : 34
>>> PROGRESS 23/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #16
=================================
Summarizing function: clear_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 182	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: clear_bit:7.f
=======

SUMS (nm, lo, un, wr, re):	clear_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 7.f : 34
>>> PROGRESS 24/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #130
=================================
Summarizing function: current_thread_info : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: current_thread_info:23.f
=======

SUMS (nm, lo, un, wr, re):	current_thread_info	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*ti)

SIZES: 23.f : 34
>>> PROGRESS 25/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #103
=================================
Summarizing function: get_current : synclink.ko_merged.c
-----
doing symstate
[Er]: substLval: local variable ti stayed in summary?
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: get_current:76.f
=======

SUMS (nm, lo, un, wr, re):	get_current	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 76.f : 34
>>> PROGRESS 26/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #19
=================================
Summarizing function: capable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: capable:120.f
=======

SUMS (nm, lo, un, wr, re):	capable	0	0	1	3	

SS Sum:
 -> 
$SSTOP
SIZES: 120.f : 34
>>> PROGRESS 27/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #32
=================================
Summarizing function: mgsl_alloc_intermediate_txbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_intermediate_txbuffer_memory:269.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_intermediate_txbuffer_memory	0	0	2	3	

SS Sum:
 -> 
$SSTOP
SIZES: 269.f : 485
>>> PROGRESS 28/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #33
=================================
Summarizing function: mgsl_alloc_intermediate_rxbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_intermediate_rxbuffer_memory:267.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_intermediate_rxbuffer_memory	0	0	1	1	

SS Sum:
 -> 
$SSTOP
SIZES: 267.f : 182
>>> PROGRESS 29/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #36
=================================
Summarizing function: virt_to_phys : synclink.ko_merged.c
-----
doing symstate
[Er]: eval bin op, operands are non-Vval
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: virt_to_phys:152.f
=======

SUMS (nm, lo, un, wr, re):	virt_to_phys	0	0	0	0	

SS Sum:
 -> 
Vval: (unsigned long )address - 3221225472UL
SIZES: 152.f : 34
>>> PROGRESS 30/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #34
=================================
Summarizing function: mgsl_alloc_buffer_list_memory : synclink.ko_merged.c
-----
doing symstate
[Er]: substExp: trimming ptrArith offset
[Er]: substExp encountered unknown exp: (unsigned long )address - 3221225472UL
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_buffer_list_memory:265.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_buffer_list_memory	0	0	8	9	

SS Sum:
 -> 
$SSTOP
SIZES: 265.f : 1023
>>> PROGRESS 31/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #35
=================================
Summarizing function: mgsl_alloc_frame_memory : synclink.ko_merged.c
-----
doing symstate
[Er]: substExp: trimming ptrArith offset
[Er]: substExp encountered unknown exp: (unsigned long )address - 3221225472UL
[Er]: substExp: trimming ptrArith offset
[Er]: substExp encountered unknown exp: (unsigned long )address - 3221225472UL
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_frame_memory:263.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_frame_memory	0	0	3	4	

SS Sum:
 -> 
$SSTOP
SIZES: 263.f : 519
>>> PROGRESS 32/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #37
=================================
Summarizing function: mgsl_reset_tx_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_reset_tx_dma_buffers:257.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_reset_tx_dma_buffers	0	0	7	1	

SS Sum:
 -> 
$SSBOT
SIZES: 257.f : 563
>>> PROGRESS 33/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #117
=================================
Summarizing function: mgsl_reset_rx_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_reset_rx_dma_buffers:256.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_reset_rx_dma_buffers	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 256.f : 213
>>> PROGRESS 34/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #31
=================================
Summarizing function: mgsl_allocate_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_allocate_dma_buffers:261.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_allocate_dma_buffers	0	0	22	17	

SS Sum:
 -> 
$SSTOP
SIZES: 261.f : 2818
>>> PROGRESS 35/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #38
=================================
Summarizing function: ioremap : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 58	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: ioremap:155.f
=======

SUMS (nm, lo, un, wr, re):	ioremap	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 155.f : 34
>>> PROGRESS 36/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #40
=================================
Summarizing function: mgsl_memory_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_memory_test:247.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_memory_test	0	0	1	4	

SS Sum:
 -> 
$SSTOP
SIZES: 247.f : 237
>>> PROGRESS 37/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #66
=================================
Summarizing function: set_dma_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: set_dma_mode:208.f
=======

SUMS (nm, lo, un, wr, re):	set_dma_mode	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 208.f : 34
>>> PROGRESS 38/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #70
=================================
Summarizing function: enable_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: enable_dma:204.f
=======

SUMS (nm, lo, un, wr, re):	enable_dma	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 204.f : 34
>>> PROGRESS 39/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #30
=================================
Summarizing function: mgsl_claim_resources : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_claim_resources:249.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_claim_resources	0	0	29	33	

SS Sum:
 -> 
$SSTOP
SIZES: 249.f : 5386
>>> PROGRESS 40/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #159
=================================
Summarizing function: outw_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 145	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: outw_local:173.f
=======

SUMS (nm, lo, un, wr, re):	outw_local	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 173.f : 34
>>> PROGRESS 41/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #158
=================================
Summarizing function: outw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: outw:179.f
=======

SUMS (nm, lo, un, wr, re):	outw	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 179.f : 34
>>> PROGRESS 42/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #161
=================================
Summarizing function: inw_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: inw_local:176.f
=======

SUMS (nm, lo, un, wr, re):	inw_local	0	0	0	0	

SS Sum:
 -> 
Vval: value
SIZES: 176.f : 34
>>> PROGRESS 43/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #160
=================================
Summarizing function: inw : synclink.ko_merged.c
-----
doing symstate
[Er]: substLval: local variable value stayed in summary?
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: inw:182.f
=======

SUMS (nm, lo, un, wr, re):	inw	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 182.f : 34
>>> PROGRESS 44/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #146
=================================
Summarizing function: usc_RTCmd : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_RTCmd:219.f
=======

SUMS (nm, lo, un, wr, re):	usc_RTCmd	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 219.f : 277
>>> PROGRESS 45/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #147
=================================
Summarizing function: usc_OutReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_OutReg:218.f
=======

SUMS (nm, lo, un, wr, re):	usc_OutReg	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 218.f : 294
>>> PROGRESS 46/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #64
=================================
Summarizing function: usc_reset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_reset:231.f
=======

SUMS (nm, lo, un, wr, re):	usc_reset	0	0	5	6	

SS Sum:
 -> 
$SSBOT
SIZES: 231.f : 868
>>> PROGRESS 47/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #69
=================================
Summarizing function: __constant_c_memset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 13	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __constant_c_memset:61.f
=======

SUMS (nm, lo, un, wr, re):	__constant_c_memset	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*s)

SIZES: 61.f : 34
>>> PROGRESS 48/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #112
=================================
Summarizing function: usc_set_txidle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_txidle:225.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_txidle	0	0	2	6	

SS Sum:
 -> 
$SSBOT
SIZES: 225.f : 919
>>> PROGRESS 49/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #148
=================================
Summarizing function: usc_DmaCmd : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
FUN TIMES : 
  FUN:249.f : 0.00617289543152
  FUN:864.f : 0.00427317619324
  FUN:261.f : 0.00376391410828
  FUN:134.f : 0.002445936203
  FUN:252.f : 0.00197100639343
  FUN:868.f : 0.00175809860229
  FUN:265.f : 0.00172305107117
  FUN:250.f : 0.00166606903076
  FUN:1148.f : 0.0014808177948
  FUN:862.f : 0.00144100189209
  FUN:251.f : 0.00116610527039
  FUN:263.f : 0.00113892555237
  FUN:247.f : 0.00103902816772
  FUN:231.f : 0.00102996826172
  FUN:225.f : 0.00092601776123
  FUN:54.f : 0.000867128372192
  FUN:155.f : 0.000744104385376
  FUN:120.f : 0.000728845596313
  FUN:76.f : 0.000653028488159
  FUN:182.f : 0.000635862350464
  FUN:262.f : 0.000627994537354
  FUN:270.f : 0.000582218170166
  FUN:269.f : 0.000570774078369
  FUN:257.f : 0.000540018081665
  FUN:264.f : 0.000509977340698
  FUN:137.f : 0.000509977340698
  FUN:81.f : 0.000504970550537
  FUN:67.f : 0.000504970550537
  FUN:110.f : 0.000478029251099
  FUN:218.f : 0.000455141067505
  FUN:219.f : 0.000447988510132
  FUN:266.f : 0.000437021255493
  FUN:256.f : 0.000398874282837
  FUN:216.f : 0.000371932983398
  FUN:268.f : 0.000355958938599
  FUN:208.f : 0.000324010848999
  FUN:204.f : 0.00031304359436
  FUN:267.f : 0.000305891036987
  FUN:179.f : 0.000293970108032
  FUN:173.f : 0.000266075134277
  FUN:176.f : 0.000262975692749
  FUN:206.f : 0.000250101089478
  FUN:167.f : 0.000237941741943
  FUN:140.f : 0.000231027603149
  FUN:61.f : 0.000223875045776
  FUN:23.f : 0.000221014022827
  FUN:152.f : 0.000209093093872
  FUN:161.f : 0.000204086303711
  FUN:7.f : 0.000199794769287
  FUN:322.f : 0.00019907951355
TOTAL: 0.046663
=================================
Finished an SCC (1)
=================================
Summary for function: usc_DmaCmd:216.f
=======

SUMS (nm, lo, un, wr, re):	usc_DmaCmd	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 216.f : 272
>>> PROGRESS 50/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #156
=================================
Summarizing function: usc_InReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_InReg:217.f
=======

SUMS (nm, lo, un, wr, re):	usc_InReg	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 217.f : 218
>>> PROGRESS 51/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #115
=================================
Summarizing function: usc_stop_transmitter : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_stop_transmitter:224.f
=======

SUMS (nm, lo, un, wr, re):	usc_stop_transmitter	0	0	2	6	

SS Sum:
 -> 
$SSBOT
SIZES: 224.f : 760
>>> PROGRESS 52/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #118
=================================
Summarizing function: usc_stop_receiver : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 29	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_stop_receiver:222.f
=======

SUMS (nm, lo, un, wr, re):	usc_stop_receiver	0	0	3	5	

SS Sum:
 -> 
$SSBOT
SIZES: 222.f : 767
>>> PROGRESS 53/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #149
=================================
Summarizing function: usc_OutDmaReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 34	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_OutDmaReg:215.f
=======

SUMS (nm, lo, un, wr, re):	usc_OutDmaReg	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 215.f : 289
>>> PROGRESS 54/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #157
=================================
Summarizing function: usc_InDmaReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_InDmaReg:214.f
=======

SUMS (nm, lo, un, wr, re):	usc_InDmaReg	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 214.f : 213
>>> PROGRESS 55/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #111
=================================
Summarizing function: usc_set_sdlc_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_sdlc_mode:233.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_sdlc_mode	0	0	9	15	

SS Sum:
 -> 
$SSBOT
SIZES: 233.f : 3589
>>> PROGRESS 56/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #113
=================================
Summarizing function: usc_enable_loopback : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 207	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_enable_loopback:228.f
=======

SUMS (nm, lo, un, wr, re):	usc_enable_loopback	0	0	1	4	

SS Sum:
 -> 
$SSBOT
SIZES: 228.f : 640
>>> PROGRESS 57/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #152
=================================
Summarizing function: jiffies_to_msecs : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 42	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_msecs:35.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_msecs	0	0	0	0	

SS Sum:
 -> 
Vval: j
SIZES: 35.f : 34
>>> PROGRESS 58/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #151
=================================
Summarizing function: msecs_to_jiffies : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: msecs_to_jiffies:37.f
=======

SUMS (nm, lo, un, wr, re):	msecs_to_jiffies	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 37.f : 34
>>> PROGRESS 59/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #41
=================================
Summarizing function: mgsl_dma_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_dma_test:246.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_dma_test	0	1	17	26	

SS Sum:
 -> 
$SSTOP
SIZES: 246.f : 4783
>>> PROGRESS 60/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #42
=================================
Summarizing function: mgsl_irq_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 162	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_irq_test:245.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_irq_test	0	1	6	7	

SS Sum:
 -> 
$SSTOP
SIZES: 245.f : 1189
>>> PROGRESS 61/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #43
=================================
Summarizing function: mgsl_register_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 59	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_register_test:244.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_register_test	0	1	5	9	

SS Sum:
 -> 
$SSTOP
SIZES: 244.f : 1230
>>> PROGRESS 62/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #39
=================================
Summarizing function: mgsl_adapter_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 73	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_adapter_test:248.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_adapter_test	0	1	19	31	

SS Sum:
 -> 
$SSTOP
SIZES: 248.f : 5340
>>> PROGRESS 63/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #53
=================================
Summarizing function: set_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 67	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: set_bit:4.f
=======

SUMS (nm, lo, un, wr, re):	set_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4.f : 34
>>> PROGRESS 64/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #108
=================================
Summarizing function: usc_enable_async_clock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_enable_async_clock:235.f
=======

SUMS (nm, lo, un, wr, re):	usc_enable_async_clock	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 235.f : 403
>>> PROGRESS 65/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #110
=================================
Summarizing function: usc_loopback_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 29	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopback_frame:236.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopback_frame	0	0	11	15	

SS Sum:
 -> 
$SSBOT
SIZES: 236.f : 4047
>>> PROGRESS 66/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #107
=================================
Summarizing function: usc_set_async_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 93	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_async_mode:234.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_async_mode	0	0	11	19	

SS Sum:
 -> 
$SSBOT
SIZES: 234.f : 4550
>>> PROGRESS 67/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #114
=================================
Summarizing function: usc_enable_aux_clock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 121	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_enable_aux_clock:227.f
=======

SUMS (nm, lo, un, wr, re):	usc_enable_aux_clock	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 227.f : 403
>>> PROGRESS 68/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #109
=================================
Summarizing function: usc_set_sync_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 21	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_sync_mode:232.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_sync_mode	0	0	11	16	

SS Sum:
 -> 
$SSBOT
SIZES: 232.f : 4198
>>> PROGRESS 69/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #116
=================================
Summarizing function: usc_start_receiver : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 65	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_start_receiver:221.f
=======

SUMS (nm, lo, un, wr, re):	usc_start_receiver	0	0	5	9	

SS Sum:
 -> 
$SSBOT
SIZES: 221.f : 1342
>>> PROGRESS 70/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #144
=================================
Summarizing function: usc_set_serial_signals : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 107	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_serial_signals:230.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_serial_signals	0	0	0	4	

SS Sum:
 -> 
$SSBOT
SIZES: 230.f : 454
>>> PROGRESS 71/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #155
=================================
Summarizing function: usc_get_serial_signals : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_get_serial_signals:229.f
=======

SUMS (nm, lo, un, wr, re):	usc_get_serial_signals	0	0	1	3	

SS Sum:
 -> 
$SSBOT
SIZES: 229.f : 431
>>> PROGRESS 72/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #106
=================================
Summarizing function: mgsl_program_hw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_program_hw:427.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_program_hw	0	1	21	27	

SS Sum:
 -> 
$SSBOT
SIZES: 427.f : 6075
>>> PROGRESS 73/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #105
=================================
Summarizing function: mgsl_change_params : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 185	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_change_params:320.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_change_params	0	1	29	34	

SS Sum:
 -> 
$SSBOT
SIZES: 320.f : 7195
>>> PROGRESS 74/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #15
=================================
Summarizing function: startup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 48	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: startup:414.f
=======

SUMS (nm, lo, un, wr, re):	startup	0	1	72	78	

SS Sum:
 -> 
$SSTOP
SIZES: 414.f : 14551
>>> PROGRESS 75/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #128
=================================
Summarizing function: variable_test_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 224	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: variable_test_bit:13.f
=======

SUMS (nm, lo, un, wr, re):	variable_test_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 13.f : 34
>>> PROGRESS 76/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #127
=================================
Summarizing function: test_ti_thread_flag : synclink.ko_merged.c
-----
doing symstate
[Er]: substLval: local variable oldbit stayed in summary?
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: test_ti_thread_flag:26.f
=======

SUMS (nm, lo, un, wr, re):	test_ti_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 26.f : 34
>>> PROGRESS 77/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #102
=================================
Summarizing function: test_tsk_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: test_tsk_thread_flag:124.f
=======

SUMS (nm, lo, un, wr, re):	test_tsk_thread_flag	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 124.f : 157
>>> PROGRESS 78/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #101
=================================
Summarizing function: signal_pending : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: signal_pending:128.f
=======

SUMS (nm, lo, un, wr, re):	signal_pending	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 128.f : 158
>>> PROGRESS 79/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #132
=================================
Summarizing function: __xchg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __xchg:19.f
=======

SUMS (nm, lo, un, wr, re):	__xchg	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 19.f : 34
>>> PROGRESS 80/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #17
=================================
Summarizing function: block_til_ready : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: block_til_ready:698.f
=======

SUMS (nm, lo, un, wr, re):	block_til_ready	0	1	9	14	

SS Sum:
 -> 
$SSTOP
SIZES: 698.f : 1356
>>> PROGRESS 81/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #134
=================================
Summarizing function: mgsl_paranoia_check : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 35	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_paranoia_check:324.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_paranoia_check	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 324.f : 34
>>> PROGRESS 82/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #2
=================================
Summarizing function: mgsl_open : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_open:723.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_open	0	2	83	91	

SS Sum:
 -> 
$SSTOP
SIZES: 723.f : 536
>>> PROGRESS 83/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #153
=================================
Summarizing function: __memcpy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 175	misses: 13

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __memcpy:47.f
=======

SUMS (nm, lo, un, wr, re):	__memcpy	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*to)

SIZES: 47.f : 34
>>> PROGRESS 84/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #139
=================================
Summarizing function: mgsl_load_pci_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_load_pci_memory:260.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_load_pci_memory	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 260.f : 428
>>> PROGRESS 85/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #141
=================================
Summarizing function: mgsl_trace_block : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_trace_block:243.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_trace_block	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 243.f : 150
>>> PROGRESS 86/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #138
=================================
Summarizing function: mgsl_load_tx_dma_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_load_tx_dma_buffer:259.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_load_tx_dma_buffer	0	0	8	11	

SS Sum:
 -> 
$SSBOT
SIZES: 259.f : 1100
>>> PROGRESS 87/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #145
=================================
Summarizing function: usc_load_txfifo : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_load_txfifo:226.f
=======

SUMS (nm, lo, un, wr, re):	usc_load_txfifo	0	0	5	10	

SS Sum:
 -> 
$SSBOT
SIZES: 226.f : 1227
>>> PROGRESS 88/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #150
=================================
Summarizing function: add_timer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 10	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: add_timer:116.f
=======

SUMS (nm, lo, un, wr, re):	add_timer	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 116.f : 133
>>> PROGRESS 89/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #143
=================================
Summarizing function: usc_start_transmitter : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_start_transmitter:223.f
=======

SUMS (nm, lo, un, wr, re):	usc_start_transmitter	0	0	11	22	

SS Sum:
 -> 
$SSBOT
SIZES: 223.f : 2883
>>> PROGRESS 90/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #3
=================================
Summarizing function: mgsl_flush_chars : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 109	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_flush_chars:443.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_flush_chars	0	1	18	32	

SS Sum:
 -> 
$SSBOT
SIZES: 443.f : 361
>>> PROGRESS 91/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #4
=================================
Summarizing function: mgsl_put_char : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 53	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_put_char:436.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_put_char	0	1	3	7	

SS Sum:
 -> 
$SSBOT
SIZES: 436.f : 241
>>> PROGRESS 92/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #5
=================================
Summarizing function: tiocmset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: tiocmset:288.f
=======

SUMS (nm, lo, un, wr, re):	tiocmset	0	1	1	6	

SS Sum:
 -> 
Vval: 0
SIZES: 288.f : 241
>>> PROGRESS 93/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #6
=================================
Summarizing function: tiocmget : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: tiocmget:287.f
=======

SUMS (nm, lo, un, wr, re):	tiocmget	0	1	1	5	

SS Sum:
 -> 
$SSTOP
SIZES: 287.f : 241
>>> PROGRESS 94/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #46
=================================
Summarizing function: shutdown : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: shutdown:419.f
=======

SUMS (nm, lo, un, wr, re):	shutdown	0	1	24	33	

SS Sum:
 -> 
$SSBOT
SIZES: 419.f : 4411
>>> PROGRESS 95/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #96
=================================
Summarizing function: mgsl_flush_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 105	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_flush_buffer:473.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_flush_buffer	0	1	3	4	

SS Sum:
 -> 
$SSBOT
SIZES: 473.f : 241
>>> PROGRESS 96/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #18
=================================
Summarizing function: mgsl_hangup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_hangup:693.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_hangup	0	1	29	36	

SS Sum:
 -> 
$SSBOT
SIZES: 693.f : 262
>>> PROGRESS 97/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #55
=================================
Summarizing function: mgsl_bh_status : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 60	misses: 9

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_status:276.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_status	0	0	4	1	

SS Sum:
 -> 
$SSBOT
SIZES: 276.f : 330
>>> PROGRESS 98/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #59
=================================
Summarizing function: mgsl_free_rx_frame_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_rx_frame_buffers:253.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_rx_frame_buffers	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 253.f : 324
>>> PROGRESS 99/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #97
=================================
Summarizing function: ldisc_receive_buf : synclink.ko_merged.c
-----
doing symstate
[Er]: SS call: *(ld->receive_buf) returned 0 fun(s)
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
[Er]: call: *(ld->receive_buf) returned 0 fun(s)
doing guarded access
FUN TIMES : 
  FUN:427.f : 0.0109169483185
  FUN:723.f : 0.00921201705933
  FUN:414.f : 0.00913500785828
  FUN:246.f : 0.00850796699524
  FUN:698.f : 0.00790500640869
  FUN:233.f : 0.00725698471069
  FUN:249.f : 0.00617289543152
  FUN:234.f : 0.00473213195801
  FUN:864.f : 0.00427317619324
  FUN:419.f : 0.00423407554626
  FUN:223.f : 0.00384020805359
  FUN:248.f : 0.00379300117493
  FUN:261.f : 0.00376391410828
  FUN:244.f : 0.00349807739258
  FUN:320.f : 0.00318503379822
  FUN:221.f : 0.00318098068237
  FUN:245.f : 0.00274610519409
  FUN:232.f : 0.00265884399414
  FUN:236.f : 0.0025680065155
  FUN:443.f : 0.00252389907837
  FUN:134.f : 0.002445936203
  FUN:226.f : 0.00227499008179
  FUN:693.f : 0.00223612785339
  FUN:252.f : 0.00197100639343
  FUN:868.f : 0.00175809860229
  FUN:265.f : 0.00172305107117
  FUN:243.f : 0.00171995162964
  FUN:250.f : 0.00166606903076
  FUN:436.f : 0.00164985656738
  FUN:473.f : 0.00150299072266
  FUN:1148.f : 0.0014808177948
  FUN:862.f : 0.00144100189209
  FUN:228.f : 0.00132012367249
  FUN:128.f : 0.001305103302
  FUN:287.f : 0.00127506256104
  FUN:224.f : 0.00123000144958
  FUN:222.f : 0.00122213363647
  FUN:259.f : 0.00118398666382
  FUN:251.f : 0.00116610527039
  FUN:263.f : 0.00113892555237
  FUN:235.f : 0.00109004974365
  FUN:229.f : 0.00107717514038
  FUN:288.f : 0.0010769367218
  FUN:227.f : 0.00107502937317
  FUN:247.f : 0.00103902816772
  FUN:231.f : 0.00102996826172
  FUN:225.f : 0.00092601776123
  FUN:230.f : 0.000890016555786
  FUN:54.f : 0.000867128372192
  FUN:328.f : 0.00083589553833
  FUN:214.f : 0.000777006149292
  FUN:217.f : 0.000753879547119
  FUN:155.f : 0.000744104385376
  FUN:120.f : 0.000728845596313
  FUN:37.f : 0.000675916671753
  FUN:76.f : 0.000653028488159
  FUN:26.f : 0.000651121139526
  FUN:182.f : 0.000635862350464
  FUN:262.f : 0.000627994537354
  FUN:124.f : 0.000607967376709
  FUN:253.f : 0.000587940216064
  FUN:270.f : 0.000582218170166
  FUN:269.f : 0.000570774078369
  FUN:257.f : 0.000540018081665
  FUN:260.f : 0.000519037246704
  FUN:264.f : 0.000509977340698
  FUN:137.f : 0.000509977340698
  FUN:81.f : 0.000504970550537
  FUN:67.f : 0.000504970550537
  FUN:276.f : 0.000493049621582
  FUN:110.f : 0.000478029251099
  FUN:218.f : 0.000455141067505
  FUN:219.f : 0.000447988510132
  FUN:266.f : 0.000437021255493
  FUN:256.f : 0.000398874282837
  FUN:215.f : 0.000395059585571
  FUN:216.f : 0.000371932983398
  FUN:268.f : 0.000355958938599
  FUN:208.f : 0.000324010848999
  FUN:204.f : 0.00031304359436
  FUN:267.f : 0.000305891036987
  FUN:116.f : 0.00029993057251
  FUN:179.f : 0.000293970108032
  FUN:19.f : 0.000277996063232
  FUN:173.f : 0.000266075134277
  FUN:176.f : 0.000262975692749
  FUN:206.f : 0.000250101089478
  FUN:167.f : 0.000237941741943
  FUN:47.f : 0.000235080718994
  FUN:140.f : 0.000231027603149
  FUN:13.f : 0.000228881835938
  FUN:61.f : 0.000223875045776
  FUN:23.f : 0.000221014022827
  FUN:324.f : 0.000218868255615
  FUN:35.f : 0.00021505355835
  FUN:4.f : 0.000213861465454
  FUN:152.f : 0.000209093093872
  FUN:161.f : 0.000204086303711
  FUN:7.f : 0.000199794769287
  FUN:322.f : 0.00019907951355
TOTAL: 0.166673
=================================
Finished an SCC (1)
=================================
Summary for function: ldisc_receive_buf:328.f
=======

SUMS (nm, lo, un, wr, re):	ldisc_receive_buf	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 328.f : 34
>>> PROGRESS 100/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #57
=================================
Summarizing function: mgsl_get_raw_rx_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_raw_rx_frame:255.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_raw_rx_frame	0	1	10	26	

SS Sum:
 -> 
$SSTOP
SIZES: 255.f : 2426
>>> PROGRESS 101/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #58
=================================
Summarizing function: mgsl_get_rx_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 20	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_rx_frame:254.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_rx_frame	0	1	11	29	

SS Sum:
 -> 
$SSTOP
SIZES: 254.f : 2848
>>> PROGRESS 102/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #56
=================================
Summarizing function: mgsl_bh_receive : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 39	misses: 7

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_receive:274.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_receive	0	1	11	30	

SS Sum:
 -> 
$SSBOT
SIZES: 274.f : 3278
>>> PROGRESS 103/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #84
=================================
Summarizing function: usc_loopmode_send_done : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 87	misses: 14

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_send_done:241.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_send_done	0	0	2	4	

SS Sum:
 -> 
$SSBOT
SIZES: 241.f : 500
>>> PROGRESS 104/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #61
=================================
Summarizing function: mgsl_bh_transmit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_transmit:275.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_transmit	0	1	2	8	

SS Sum:
 -> 
$SSBOT
SIZES: 275.f : 769
>>> PROGRESS 105/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #72
=================================
Summarizing function: mgsl_bh_action : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_action:344.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_action	0	1	3	1	

SS Sum:
 -> 
$SSTOP
SIZES: 344.f : 493
>>> PROGRESS 106/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #54
=================================
Summarizing function: mgsl_bh_handler : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_handler:273.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_handler	0	1	20	34	

SS Sum:
 -> 
$SSBOT
SIZES: 273.f : 4346
>>> PROGRESS 107/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #100
=================================
Summarizing function: mgsl_wait_until_sent : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 58	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_wait_until_sent:321.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_wait_until_sent	0	0	0	13	

SS Sum:
 -> 
$SSBOT
SIZES: 321.f : 140
>>> PROGRESS 108/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #45
=================================
Summarizing function: mgsl_close : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 15	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_close:670.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_close	0	1	28	55	

SS Sum:
 -> 
$SSBOT
SIZES: 670.f : 394
>>> PROGRESS 109/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #63
=================================
Summarizing function: constant_test_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 129	misses: 10

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: constant_test_bit:10.f
=======

SUMS (nm, lo, un, wr, re):	constant_test_bit	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 10.f : 95
>>> PROGRESS 110/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #92
=================================
Summarizing function: mgsl_start : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_start:339.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_start	0	1	11	23	

SS Sum:
 -> 
$SSBOT
SIZES: 339.f : 241
>>> PROGRESS 111/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #62
=================================
Summarizing function: mgsl_set_termios : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 32	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_set_termios:664.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_set_termios	0	1	36	50	

SS Sum:
 -> 
$SSBOT
SIZES: 664.f : 618
>>> PROGRESS 112/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #162
=================================
Summarizing function: strcat : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 104	misses: 12

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: strcat:40.f
=======

SUMS (nm, lo, un, wr, re):	strcat	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dest)

SIZES: 40.f : 34
>>> PROGRESS 113/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #154
=================================
Summarizing function: line_info : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: line_info:734.f
=======

SUMS (nm, lo, un, wr, re):	line_info	0	1	2	28	

SS Sum:
 -> 
$SSTOP
SIZES: 734.f : 2599
>>> PROGRESS 114/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #67
=================================
Summarizing function: mgsl_read_proc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 57	misses: 7

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_read_proc:779.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_read_proc	0	1	4	31	

SS Sum:
 -> 
$SSTOP
SIZES: 779.f : 238
>>> PROGRESS 115/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #93
=================================
Summarizing function: mgsl_send_xchar : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 27	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_send_xchar:478.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_send_xchar	0	1	11	23	

SS Sum:
 -> 
$SSBOT
SIZES: 478.f : 241
>>> PROGRESS 116/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #71
=================================
Summarizing function: mgsl_unthrottle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 33	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_unthrottle:489.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_unthrottle	0	1	11	26	

SS Sum:
 -> 
$SSBOT
SIZES: 489.f : 262
>>> PROGRESS 117/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #73
=================================
Summarizing function: mgsl_throttle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 36	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_throttle:484.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_throttle	0	1	11	26	

SS Sum:
 -> 
$SSBOT
SIZES: 484.f : 281
>>> PROGRESS 118/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #76
=================================
Summarizing function: modem_input_wait : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 36	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: modem_input_wait:579.f
=======

SUMS (nm, lo, un, wr, re):	modem_input_wait	0	1	5	3	

SS Sum:
 -> 
$SSTOP
SIZES: 579.f : 272
>>> PROGRESS 119/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #77
=================================
Summarizing function: mgsl_loopmode_send_done : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 18	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_loopmode_send_done:298.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_loopmode_send_done	0	1	2	6	

SS Sum:
 -> 
Vval: 0
SIZES: 298.f : 831
>>> PROGRESS 120/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #80
=================================
Summarizing function: list_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: list_empty:74.f
=======

SUMS (nm, lo, un, wr, re):	list_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 74.f : 138
>>> PROGRESS 121/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #79
=================================
Summarizing function: waitqueue_active : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: waitqueue_active:84.f
=======

SUMS (nm, lo, un, wr, re):	waitqueue_active	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 84.f : 181
>>> PROGRESS 122/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #78
=================================
Summarizing function: mgsl_wait_event : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_wait_event:297.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_wait_event	0	1	6	11	

SS Sum:
 -> 
$SSTOP
SIZES: 297.f : 1151
>>> PROGRESS 123/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #81
=================================
Summarizing function: mgsl_rxenable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 47	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_rxenable:296.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_rxenable	0	1	5	10	

SS Sum:
 -> 
Vval: 0
SIZES: 296.f : 1535
>>> PROGRESS 124/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #83
=================================
Summarizing function: usc_loopmode_cancel_transmit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 22	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_cancel_transmit:238.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_cancel_transmit	0	0	2	5	

SS Sum:
 -> 
$SSBOT
SIZES: 238.f : 730
>>> PROGRESS 125/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #82
=================================
Summarizing function: mgsl_txabort : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 11	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_txabort:295.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_txabort	0	1	2	10	

SS Sum:
 -> 
Vval: 0
SIZES: 295.f : 1164
>>> PROGRESS 126/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #86
=================================
Summarizing function: usc_loopmode_insert_request : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 10	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_insert_request:239.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_insert_request	0	0	2	4	

SS Sum:
 -> 
$SSBOT
SIZES: 239.f : 562
>>> PROGRESS 127/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #85
=================================
Summarizing function: mgsl_txenable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_txenable:294.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_txenable	0	1	13	23	

SS Sum:
 -> 
Vval: 0
SIZES: 294.f : 3422
>>> PROGRESS 128/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #87
=================================
Summarizing function: mgsl_set_txidle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 48	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_set_txidle:293.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_set_txidle	0	1	3	7	

SS Sum:
 -> 
Vval: 0
SIZES: 293.f : 1097
>>> PROGRESS 129/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #88
=================================
Summarizing function: mgsl_get_txidle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_txidle:292.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_txidle	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 292.f : 147
>>> PROGRESS 130/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #89
=================================
Summarizing function: mgsl_set_params : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_set_params:291.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_set_params	0	1	30	35	

SS Sum:
 -> 
$SSTOP
SIZES: 291.f : 7508
>>> PROGRESS 131/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #90
=================================
Summarizing function: mgsl_get_params : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 64	misses: 10

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_params:290.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_params	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 290.f : 34
>>> PROGRESS 132/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #91
=================================
Summarizing function: mgsl_get_stats : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_stats:289.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_stats	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 289.f : 34
>>> PROGRESS 133/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #75
=================================
Summarizing function: mgsl_ioctl_common : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_ioctl_common:242.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_ioctl_common	0	1	49	54	

SS Sum:
 -> 
$SSTOP
SIZES: 242.f : 10504
>>> PROGRESS 134/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #74
=================================
Summarizing function: mgsl_ioctl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 165	misses: 23

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_ioctl:626.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_ioctl	0	1	49	56	

SS Sum:
 -> 
$SSTOP
SIZES: 626.f : 297
>>> PROGRESS 135/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #94
=================================
Summarizing function: mgsl_stop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 101	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_stop:334.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_stop	0	1	2	8	

SS Sum:
 -> 
$SSBOT
SIZES: 334.f : 241
>>> PROGRESS 136/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #95
=================================
Summarizing function: mgsl_break : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_break:618.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_break	0	1	0	5	

SS Sum:
 -> 
$SSBOT
SIZES: 618.f : 241
>>> PROGRESS 137/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #104
=================================
Summarizing function: mgsl_write_room : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 13	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_write_room:464.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_write_room	0	0	0	5	

SS Sum:
 -> 
$SSTOP
SIZES: 464.f : 140
>>> PROGRESS 138/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #135
=================================
Summarizing function: save_tx_buffer_request : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: save_tx_buffer_request:272.f
=======

SUMS (nm, lo, un, wr, re):	save_tx_buffer_request	0	0	3	4	

SS Sum:
 -> 
$SSTOP
SIZES: 272.f : 609
>>> PROGRESS 139/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #137
=================================
Summarizing function: num_free_tx_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: num_free_tx_dma_buffers:258.f
=======

SUMS (nm, lo, un, wr, re):	num_free_tx_dma_buffers	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 258.f : 207
>>> PROGRESS 140/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #136
=================================
Summarizing function: load_next_tx_holding_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: load_next_tx_holding_buffer:271.f
=======

SUMS (nm, lo, un, wr, re):	load_next_tx_holding_buffer	0	0	11	16	

SS Sum:
 -> 
$SSTOP
SIZES: 271.f : 1503
>>> PROGRESS 141/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #142
=================================
Summarizing function: usc_loopmode_active : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 21	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_active:240.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_active	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 240.f : 220
>>> PROGRESS 142/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #133
=================================
Summarizing function: mgsl_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_write:448.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_write	0	1	23	41	

SS Sum:
 -> 
$SSTOP
SIZES: 448.f : 681
>>> PROGRESS 143/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #1
=================================
Summarizing function: f : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 118	misses: 9

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: f:1140.f
=======

SUMS (nm, lo, un, wr, re):	f	0	2	105	139	

SS Sum:
 -> 
Vval: 0
SIZES: 1140.f : 175
>>> PROGRESS 144/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #7
=================================
Summarizing function: cleanup_module : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 880	misses: 10

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cleanup_module:138.f
=======

SUMS (nm, lo, un, wr, re):	cleanup_module	0	0	17	32	

SS Sum:
 -> 
$SSBOT
SIZES: 138.f : 34
>>> PROGRESS 145/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #9
=================================
Summarizing function: init_module : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 48	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: init_module:135.f
=======

SUMS (nm, lo, un, wr, re):	init_module	0	0	72	60	

SS Sum:
 -> 
$SSTOP
SIZES: 135.f : 34
>>> PROGRESS 146/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #21
=================================
Summarizing function: mgsl_isr_transmit_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 131	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_transmit_dma:285.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_transmit_dma	0	0	12	19	

SS Sum:
 -> 
$SSBOT
SIZES: 285.f : 1955
>>> PROGRESS 147/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #22
=================================
Summarizing function: mgsl_isr_receive_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 32	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_receive_dma:284.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_receive_dma	0	0	3	6	

SS Sum:
 -> 
$SSBOT
SIZES: 284.f : 684
>>> PROGRESS 148/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #23
=================================
Summarizing function: mgsl_isr_misc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_misc:283.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_misc	0	0	2	7	

SS Sum:
 -> 
$SSBOT
SIZES: 283.f : 800
>>> PROGRESS 149/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #24
=================================
Summarizing function: mgsl_isr_io_pin : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 34	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
FUN TIMES : 
  FUN:297.f : 0.0485877990723
  FUN:242.f : 0.0170221328735
  FUN:1140.f : 0.0148129463196
  FUN:427.f : 0.0109169483185
  FUN:723.f : 0.00921201705933
  FUN:414.f : 0.00913500785828
  FUN:246.f : 0.00850796699524
  FUN:698.f : 0.00790500640869
  FUN:233.f : 0.00725698471069
  FUN:664.f : 0.00675296783447
  FUN:255.f : 0.00641012191772
  FUN:249.f : 0.00617289543152
  FUN:670.f : 0.00516414642334
  FUN:734.f : 0.00504112243652
  FUN:448.f : 0.00502300262451
  FUN:234.f : 0.00473213195801
  FUN:864.f : 0.00427317619324
  FUN:419.f : 0.00423407554626
  FUN:282.f : 0.00392389297485
  FUN:273.f : 0.00387978553772
  FUN:223.f : 0.00384020805359
  FUN:248.f : 0.00379300117493
  FUN:261.f : 0.00376391410828
  FUN:274.f : 0.00373315811157
  FUN:254.f : 0.00367617607117
  FUN:244.f : 0.00349807739258
  FUN:291.f : 0.00342512130737
  FUN:321.f : 0.00342488288879
  FUN:626.f : 0.00336003303528
  FUN:285.f : 0.00325107574463
  FUN:320.f : 0.00318503379822
  FUN:221.f : 0.00318098068237
  FUN:579.f : 0.00294899940491
  FUN:245.f : 0.00274610519409
  FUN:232.f : 0.00265884399414
  FUN:236.f : 0.0025680065155
  FUN:443.f : 0.00252389907837
  FUN:134.f : 0.002445936203
  FUN:779.f : 0.00233006477356
  FUN:226.f : 0.00227499008179
  FUN:693.f : 0.00223612785339
  FUN:339.f : 0.00218796730042
  FUN:478.f : 0.00205397605896
  FUN:294.f : 0.0020489692688
  FUN:618.f : 0.00204300880432
  FUN:484.f : 0.00200510025024
  FUN:252.f : 0.00197100639343
  FUN:271.f : 0.00196599960327
  FUN:489.f : 0.00194191932678
  FUN:868.f : 0.00175809860229
  FUN:265.f : 0.00172305107117
  FUN:243.f : 0.00171995162964
  FUN:250.f : 0.00166606903076
  FUN:436.f : 0.00164985656738
  FUN:135.f : 0.00159502029419
  FUN:334.f : 0.00157785415649
  FUN:473.f : 0.00150299072266
  FUN:1148.f : 0.0014808177948
  FUN:296.f : 0.00146198272705
  FUN:862.f : 0.00144100189209
  FUN:228.f : 0.00132012367249
  FUN:128.f : 0.001305103302
  FUN:283.f : 0.00128483772278
  FUN:287.f : 0.00127506256104
  FUN:224.f : 0.00123000144958
  FUN:295.f : 0.00122618675232
  FUN:222.f : 0.00122213363647
  FUN:259.f : 0.00118398666382
  FUN:251.f : 0.00116610527039
  FUN:275.f : 0.00114488601685
  FUN:263.f : 0.00113892555237
  FUN:293.f : 0.00109004974365
  FUN:235.f : 0.00109004974365
  FUN:229.f : 0.00107717514038
  FUN:288.f : 0.0010769367218
  FUN:227.f : 0.00107502937317
  FUN:247.f : 0.00103902816772
  FUN:231.f : 0.00102996826172
  FUN:298.f : 0.00101590156555
  FUN:344.f : 0.00100588798523
  FUN:239.f : 0.000957012176514
  FUN:284.f : 0.000948905944824
  FUN:225.f : 0.00092601776123
  FUN:230.f : 0.000890016555786
  FUN:54.f : 0.000867128372192
  FUN:328.f : 0.00083589553833
  FUN:292.f : 0.000823974609375
  FUN:464.f : 0.000820875167847
  FUN:214.f : 0.000777006149292
  FUN:290.f : 0.000770092010498
  FUN:217.f : 0.000753879547119
  FUN:155.f : 0.000744104385376
  FUN:289.f : 0.000743865966797
  FUN:120.f : 0.000728845596313
  FUN:240.f : 0.000712871551514
  FUN:241.f : 0.000691890716553
  FUN:238.f : 0.000677108764648
  FUN:37.f : 0.000675916671753
  FUN:84.f : 0.000673770904541
  FUN:76.f : 0.000653028488159
  FUN:26.f : 0.000651121139526
  FUN:182.f : 0.000635862350464
  FUN:262.f : 0.000627994537354
  FUN:124.f : 0.000607967376709
  FUN:253.f : 0.000587940216064
  FUN:270.f : 0.000582218170166
  FUN:269.f : 0.000570774078369
  FUN:257.f : 0.000540018081665
  FUN:272.f : 0.000537872314453
  FUN:260.f : 0.000519037246704
  FUN:264.f : 0.000509977340698
  FUN:137.f : 0.000509977340698
  FUN:81.f : 0.000504970550537
  FUN:67.f : 0.000504970550537
  FUN:138.f : 0.000500202178955
  FUN:276.f : 0.000493049621582
  FUN:110.f : 0.000478029251099
  FUN:218.f : 0.000455141067505
  FUN:219.f : 0.000447988510132
  FUN:266.f : 0.000437021255493
  FUN:256.f : 0.000398874282837
  FUN:215.f : 0.000395059585571
  FUN:216.f : 0.000371932983398
  FUN:268.f : 0.000355958938599
  FUN:208.f : 0.000324010848999
  FUN:204.f : 0.00031304359436
  FUN:267.f : 0.000305891036987
  FUN:116.f : 0.00029993057251
  FUN:258.f : 0.000296115875244
  FUN:179.f : 0.000293970108032
  FUN:19.f : 0.000277996063232
  FUN:74.f : 0.0002760887146
  FUN:10.f : 0.000273942947388
  FUN:173.f : 0.000266075134277
  FUN:176.f : 0.000262975692749
  FUN:206.f : 0.000250101089478
  FUN:167.f : 0.000237941741943
  FUN:47.f : 0.000235080718994
  FUN:40.f : 0.000233888626099
  FUN:140.f : 0.000231027603149
  FUN:13.f : 0.000228881835938
  FUN:61.f : 0.000223875045776
  FUN:23.f : 0.000221014022827
  FUN:324.f : 0.000218868255615
  FUN:35.f : 0.00021505355835
  FUN:4.f : 0.000213861465454
  FUN:152.f : 0.000209093093872
  FUN:161.f : 0.000204086303711
  FUN:7.f : 0.000199794769287
  FUN:322.f : 0.00019907951355
TOTAL: 0.345029
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_io_pin:282.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_io_pin	0	0	30	42	

SS Sum:
 -> 
$SSBOT
SIZES: 282.f : 5104
>>> PROGRESS 150/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #25
=================================
Summarizing function: mgsl_isr_transmit_status : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 98	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_transmit_status:281.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_transmit_status	0	0	11	16	

SS Sum:
 -> 
$SSBOT
SIZES: 281.f : 1987
>>> PROGRESS 151/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #65
=================================
Summarizing function: usc_process_rxoverrun_sync : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 45	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usc_process_rxoverrun_sync:220.f
=======

SUMS (nm, lo, un, wr, re):	usc_process_rxoverrun_sync	0	0	2	11	

SS Sum:
 -> 
$SSBOT
SIZES: 220.f : 1221
>>> PROGRESS 152/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #26
=================================
Summarizing function: mgsl_isr_receive_status : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 101	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_receive_status:280.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_receive_status	0	0	8	18	

SS Sum:
 -> 
$SSBOT
SIZES: 280.f : 1838
>>> PROGRESS 153/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #131
=================================
Summarizing function: inb_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 37	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: inb_local:164.f
=======

SUMS (nm, lo, un, wr, re):	inb_local	0	0	0	0	

SS Sum:
 -> 
Vval: value
SIZES: 164.f : 34
>>> PROGRESS 154/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #126
=================================
Summarizing function: inb : synclink.ko_merged.c
-----
doing symstate
[Er]: substLval: local variable value stayed in summary?
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: inb:170.f
=======

SUMS (nm, lo, un, wr, re):	inb	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 170.f : 34
>>> PROGRESS 155/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #27
=================================
Summarizing function: mgsl_isr_receive_data : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_receive_data:279.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_receive_data	0	0	9	16	

SS Sum:
 -> 
$SSBOT
SIZES: 279.f : 1283
>>> PROGRESS 156/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #28
=================================
Summarizing function: mgsl_isr_transmit_data : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 34	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_transmit_data:278.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_transmit_data	0	0	8	15	

SS Sum:
 -> 
$SSBOT
SIZES: 278.f : 1866
>>> PROGRESS 157/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #29
=================================
Summarizing function: mgsl_isr_null : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 35	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_null:277.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_null	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 277.f : 34
>>> PROGRESS 158/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #20
=================================
Summarizing function: mgsl_interrupt : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_interrupt:404.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_interrupt	0	1	61	83	

SS Sum:
 -> 
$SSTOP
SIZES: 404.f : 10187
>>> PROGRESS 159/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #44
=================================
Summarizing function: kmalloc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 253	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: kmalloc:99.f
=======

SUMS (nm, lo, un, wr, re):	kmalloc	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 99.f : 34
>>> PROGRESS 160/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #60
=================================
Summarizing function: mgsl_tx_timeout : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_tx_timeout:237.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_tx_timeout	0	1	7	14	

SS Sum:
 -> 
$SSBOT
SIZES: 237.f : 1704
>>> PROGRESS 161/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #98
=================================
Summarizing function: mgsl_chars_in_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 14	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_chars_in_buffer:469.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_chars_in_buffer	0	0	0	6	

SS Sum:
 -> 
$SSTOP
SIZES: 469.f : 140
>>> PROGRESS 162/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #119
=================================
Summarizing function: synclink_remove_one : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_remove_one:315.f
=======

SUMS (nm, lo, un, wr, re):	synclink_remove_one	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 315.f : 34
>>> PROGRESS 163/164 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #120
=================================
Summarizing function: synclink_init_one : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_init_one:314.f
=======

SUMS (nm, lo, un, wr, re):	synclink_init_one	0	0	47	26	

SS Sum:
 -> 
$SSTOP
SIZES: 314.f : 355
>>> PROGRESS 164/164 SCCs DONE!

=================================
getting next SCC from server
Bottomup analysis complete
-----



Beginning Thread Analysis:
-----
[Er]: No entry-points file!
Expected # thread-creation site pairs: 3
checking a thread-creation pair
Prev ldiffCache hits: 65	misses: 3

doing symstate
Prev ldiffCache hits: 484	misses: 4

doing symstate
now checking thread roots: f(1140.f), f(1140.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
now checking thread roots: f(1140.f), f(1140.f)
now checking thread roots: f(1140.f), f(1140.f)
now checking thread roots: f(1140.f), f(1140.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 484	misses: 4

doing symstate
now checking thread roots: f(1148.f), main(1148.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
now checking thread roots: f(1148.f), main(1148.f)
done with pair, sending notification
checking a thread-creation pair
now checking thread roots: main(1148.f), main(1148.f)
done with pair, sending notification
completed all thread pairs
Sorting races

Printing races

****
Possible race between access to:

mgsl_device_list @ synclink.ko_merged.c:18232 and
mgsl_device_list @ synclink.ko_merged.c:18232
	Cluster ID: 143
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21328:(723.f), synclink.ko_merged.c:21595:(779.f)] and
	[synclink.ko_merged.c:22091:(251.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

mgsl_device_count @ synclink.ko_merged.c:18233 and
mgsl_device_count @ synclink.ko_merged.c:18233
	Cluster ID: 144
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21322:(723.f)] and
	[synclink.ko_merged.c:22089:(251.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 145
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19581:(448.f), synclink.ko_merged.c:21366:(723.f), synclink.ko_merged.c:21372:(723.f)] and
	[synclink.ko_merged.c:22275:(868.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 62
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(723.f)] and
	[synclink.ko_merged.c:19581:(448.f), synclink.ko_merged.c:21366:(723.f), synclink.ko_merged.c:21372:(723.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 0
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(723.f)] and
	[synclink.ko_merged.c:21375:(723.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 132
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(723.f)] and
	[synclink.ko_merged.c:22273:(868.f), synclink.ko_merged.c:22274:(868.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 115
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(723.f)] and
	[synclink.ko_merged.c:22275:(868.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a24654_783936_synclink_3.closing @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.closing @ synclink.ko_merged.c:24654
	Cluster ID: 2
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21007:(670.f), synclink.ko_merged.c:21023:(670.f)] and
	[synclink.ko_merged.c:21007:(670.f), synclink.ko_merged.c:21023:(670.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654
	Cluster ID: 63
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21343:(723.f)] and
	[synclink.ko_merged.c:20440:(287.f), synclink.ko_merged.c:20488:(288.f), synclink.ko_merged.c:21067:(321.f), synclink.ko_merged.c:18502:(334.f), synclink.ko_merged.c:18524:(339.f), synclink.ko_merged.c:19463:(436.f), synclink.ko_merged.c:19504:(443.f), synclink.ko_merged.c:19566:(448.f), synclink.ko_merged.c:19688:(464.f), synclink.ko_merged.c:19754:(473.f), synclink.ko_merged.c:19780:(478.f), synclink.ko_merged.c:19806:(484.f), synclink.ko_merged.c:19832:(489.f), synclink.ko_merged.c:20519:(618.f), synclink.ko_merged.c:20547:(626.f), synclink.ko_merged.c:20930:(664.f), synclink.ko_merged.c:20980:(670.f), synclink.ko_merged.c:21158:(693.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654
	Cluster ID: 3
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21343:(723.f)] and
	[synclink.ko_merged.c:21343:(723.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654
	Cluster ID: 64
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20966:(664.f)] and
	[synclink.ko_merged.c:19519:(443.f), synclink.ko_merged.c:19665:(448.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654
	Cluster ID: 4
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20966:(664.f)] and
	[synclink.ko_merged.c:20966:(664.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 4].flags and
[REP: 4].flags
	Cluster ID: 5
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10724:(120.f)] and
	[synclink.ko_merged.c:10724:(120.f)]

	Confidence: used PTA nodes lblSet(1, 1)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].get_tx_holding_index and
[REP: 6].get_tx_holding_index
	Cluster ID: 148
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21892:(271.f), synclink.ko_merged.c:21893:(271.f)] and
	[synclink.ko_merged.c:21864:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].icount.tx and
[REP: 6].icount.tx
	Cluster ID: 74
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23114:(226.f), synclink.ko_merged.c:23138:(226.f)] and
	[synclink.ko_merged.c:23114:(226.f), synclink.ko_merged.c:23138:(226.f), synclink.ko_merged.c:21526:(734.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24679
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24679
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].idle_mode and
[REP: 6].idle_mode
	Cluster ID: 75
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19973:(293.f)] and
	[synclink.ko_merged.c:23319:(225.f), synclink.ko_merged.c:23322:(225.f), synclink.ko_merged.c:23325:(225.f), synclink.ko_merged.c:23328:(225.f), synclink.ko_merged.c:23331:(225.f), synclink.ko_merged.c:23334:(225.f), synclink.ko_merged.c:23337:(225.f), synclink.ko_merged.c:23348:(225.f), synclink.ko_merged.c:23351:(225.f), synclink.ko_merged.c:23354:(225.f), synclink.ko_merged.c:23355:(225.f), synclink.ko_merged.c:23358:(225.f), synclink.ko_merged.c:23359:(225.f), synclink.ko_merged.c:23362:(225.f), synclink.ko_merged.c:19945:(292.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20610
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20610
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].irq_occurred and
[REP: 6].irq_occurred
	Cluster ID: 78
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23916:(245.f)] and
	[synclink.ko_merged.c:23935:(245.f), synclink.ko_merged.c:23946:(245.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].loopback_bits and
[REP: 6].loopback_bits
	Cluster ID: 84
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22727:(228.f), synclink.ko_merged.c:22732:(228.f), synclink.ko_merged.c:23168:(231.f)] and
	[synclink.ko_merged.c:22395:(217.f), synclink.ko_merged.c:22382:(218.f), synclink.ko_merged.c:22338:(219.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19668
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19668
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.mode and
[REP: 6].params.mode
	Cluster ID: 88
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(236.f), synclink.ko_merged.c:23291:(236.f)] and
	[synclink.ko_merged.c:22921:(221.f), synclink.ko_merged.c:22924:(221.f), synclink.ko_merged.c:22990:(223.f), synclink.ko_merged.c:23003:(223.f), synclink.ko_merged.c:23017:(223.f), synclink.ko_merged.c:23345:(225.f), synclink.ko_merged.c:22426:(233.f), synclink.ko_merged.c:22450:(233.f), synclink.ko_merged.c:23257:(236.f), synclink.ko_merged.c:20013:(295.f), synclink.ko_merged.c:21101:(321.f), synclink.ko_merged.c:21104:(321.f), synclink.ko_merged.c:19321:(427.f), synclink.ko_merged.c:19324:(427.f), synclink.ko_merged.c:19480:(436.f), synclink.ko_merged.c:19534:(443.f), synclink.ko_merged.c:19537:(443.f), synclink.ko_merged.c:19586:(448.f), synclink.ko_merged.c:19589:(448.f), synclink.ko_merged.c:19592:(448.f), synclink.ko_merged.c:19701:(464.f), synclink.ko_merged.c:19704:(464.f), synclink.ko_merged.c:21494:(734.f), synclink.ko_merged.c:21497:(734.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19668
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19668
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_active and
[REP: 6].tx_active
	Cluster ID: 103
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(223.f), synclink.ko_merged.c:23070:(224.f)] and
	[synclink.ko_merged.c:22991:(223.f), synclink.ko_merged.c:20012:(295.f), synclink.ko_merged.c:24324:(298.f), synclink.ko_merged.c:21106:(321.f), synclink.ko_merged.c:19483:(436.f), synclink.ko_merged.c:19533:(443.f), synclink.ko_merged.c:19591:(448.f), synclink.ko_merged.c:19667:(448.f), synclink.ko_merged.c:19706:(464.f), synclink.ko_merged.c:21548:(734.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19667
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19667
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_enabled and
[REP: 6].tx_enabled
	Cluster ID: 107
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23035:(223.f), synclink.ko_merged.c:23069:(224.f)] and
	[synclink.ko_merged.c:23034:(223.f), synclink.ko_merged.c:19989:(294.f), synclink.ko_merged.c:19996:(294.f), synclink.ko_merged.c:21126:(321.f), synclink.ko_merged.c:18511:(334.f), synclink.ko_merged.c:18533:(339.f), synclink.ko_merged.c:19792:(478.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24663
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24663
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].blocked_open and
[REP: 6].blocked_open
	Cluster ID: 65
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21235:(698.f), synclink.ko_merged.c:21295:(698.f)] and
	[synclink.ko_merged.c:21025:(670.f), synclink.ko_merged.c:21235:(698.f), synclink.ko_merged.c:21295:(698.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].blocked_open and
[REP: 6].blocked_open
	Cluster ID: 6
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21235:(698.f), synclink.ko_merged.c:21295:(698.f)] and
	[synclink.ko_merged.c:21235:(698.f), synclink.ko_merged.c:21295:(698.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].buffer_list and
[REP: 6].buffer_list
	Cluster ID: 7
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21694:(265.f), synclink.ko_merged.c:21699:(265.f), synclink.ko_merged.c:21747:(266.f)] and
	[synclink.ko_merged.c:21694:(265.f), synclink.ko_merged.c:21699:(265.f), synclink.ko_merged.c:21747:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].buffer_list and
[REP: 6].buffer_list
	Cluster ID: 66
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21694:(265.f), synclink.ko_merged.c:21699:(265.f), synclink.ko_merged.c:21747:(266.f)] and
	[synclink.ko_merged.c:21700:(265.f), synclink.ko_merged.c:21703:(265.f), synclink.ko_merged.c:21705:(265.f), synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21742:(266.f), synclink.ko_merged.c:21744:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].buffer_list and
[REP: 6].buffer_list
	Cluster ID: 133
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21694:(265.f), synclink.ko_merged.c:21699:(265.f), synclink.ko_merged.c:21747:(266.f)] and
	[synclink.ko_merged.c:21742:(266.f), synclink.ko_merged.c:21744:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].buffer_list and
[REP: 6].buffer_list
	Cluster ID: 116
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21694:(265.f), synclink.ko_merged.c:21699:(265.f), synclink.ko_merged.c:21747:(266.f)] and
	[synclink.ko_merged.c:21747:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].buffer_list and
[REP: 6].buffer_list
	Cluster ID: 146
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21700:(265.f), synclink.ko_merged.c:21703:(265.f), synclink.ko_merged.c:21705:(265.f), synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21742:(266.f), synclink.ko_merged.c:21744:(266.f)] and
	[synclink.ko_merged.c:21747:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].buffer_list_phys and
[REP: 6].buffer_list_phys
	Cluster ID: 8
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21695:(265.f), synclink.ko_merged.c:21703:(265.f)] and
	[synclink.ko_merged.c:21695:(265.f), synclink.ko_merged.c:21703:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].buffer_list_phys and
[REP: 6].buffer_list_phys
	Cluster ID: 67
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21695:(265.f), synclink.ko_merged.c:21703:(265.f)] and
	[synclink.ko_merged.c:21711:(265.f), synclink.ko_merged.c:21714:(265.f), synclink.ko_merged.c:21723:(265.f), synclink.ko_merged.c:21727:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].cmr_value and
[REP: 6].cmr_value
	Cluster ID: 9
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22460:(233.f), synclink.ko_merged.c:24361:(239.f), synclink.ko_merged.c:24339:(241.f), synclink.ko_merged.c:23783:(259.f)] and
	[synclink.ko_merged.c:22460:(233.f), synclink.ko_merged.c:24361:(239.f), synclink.ko_merged.c:24339:(241.f), synclink.ko_merged.c:23783:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].cmr_value and
[REP: 6].cmr_value
	Cluster ID: 68
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22460:(233.f), synclink.ko_merged.c:24361:(239.f), synclink.ko_merged.c:24339:(241.f), synclink.ko_merged.c:23783:(259.f)] and
	[synclink.ko_merged.c:24361:(239.f), synclink.ko_merged.c:24362:(239.f), synclink.ko_merged.c:24339:(241.f), synclink.ko_merged.c:24340:(241.f), synclink.ko_merged.c:23783:(259.f), synclink.ko_merged.c:23787:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].count and
[REP: 6].count
	Cluster ID: 10
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24004:(246.f), synclink.ko_merged.c:24016:(246.f), synclink.ko_merged.c:24019:(246.f), synclink.ko_merged.c:24020:(246.f), synclink.ko_merged.c:23789:(259.f), synclink.ko_merged.c:23807:(259.f)] and
	[synclink.ko_merged.c:24004:(246.f), synclink.ko_merged.c:24016:(246.f), synclink.ko_merged.c:24019:(246.f), synclink.ko_merged.c:24020:(246.f), synclink.ko_merged.c:23789:(259.f), synclink.ko_merged.c:23807:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].count and
[REP: 6].count
	Cluster ID: 69
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24004:(246.f), synclink.ko_merged.c:24016:(246.f), synclink.ko_merged.c:24019:(246.f), synclink.ko_merged.c:24020:(246.f), synclink.ko_merged.c:23789:(259.f), synclink.ko_merged.c:23807:(259.f)] and
	[synclink.ko_merged.c:24049:(246.f), synclink.ko_merged.c:23529:(254.f), synclink.ko_merged.c:23648:(254.f), synclink.ko_merged.c:23685:(255.f), synclink.ko_merged.c:23686:(255.f), synclink.ko_merged.c:23749:(255.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24663
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24663
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].count and
[REP: 6].count
	Cluster ID: 70
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20999:(670.f), synclink.ko_merged.c:21002:(670.f), synclink.ko_merged.c:21168:(693.f), synclink.ko_merged.c:21232:(698.f), synclink.ko_merged.c:21293:(698.f), synclink.ko_merged.c:21389:(723.f), synclink.ko_merged.c:21415:(723.f)] and
	[synclink.ko_merged.c:20986:(670.f), synclink.ko_merged.c:20989:(670.f), synclink.ko_merged.c:20997:(670.f), synclink.ko_merged.c:20998:(670.f), synclink.ko_merged.c:21002:(670.f), synclink.ko_merged.c:21003:(670.f), synclink.ko_merged.c:21036:(670.f), synclink.ko_merged.c:21225:(698.f), synclink.ko_merged.c:21232:(698.f), synclink.ko_merged.c:21281:(698.f), synclink.ko_merged.c:21293:(698.f), synclink.ko_merged.c:21297:(698.f), synclink.ko_merged.c:21346:(723.f), synclink.ko_merged.c:21389:(723.f), synclink.ko_merged.c:21391:(723.f), synclink.ko_merged.c:21414:(723.f), synclink.ko_merged.c:21415:(723.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21389
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:21389
	made empty at: synclink.ko_merged.c:21293
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].count and
[REP: 6].count
	Cluster ID: 11
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20999:(670.f), synclink.ko_merged.c:21002:(670.f), synclink.ko_merged.c:21168:(693.f), synclink.ko_merged.c:21232:(698.f), synclink.ko_merged.c:21293:(698.f), synclink.ko_merged.c:21389:(723.f), synclink.ko_merged.c:21415:(723.f)] and
	[synclink.ko_merged.c:20999:(670.f), synclink.ko_merged.c:21002:(670.f), synclink.ko_merged.c:21168:(693.f), synclink.ko_merged.c:21232:(698.f), synclink.ko_merged.c:21293:(698.f), synclink.ko_merged.c:21389:(723.f), synclink.ko_merged.c:21415:(723.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].current_rx_buffer and
[REP: 6].current_rx_buffer
	Cluster ID: 12
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23475:(256.f)] and
	[synclink.ko_merged.c:23475:(256.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].current_tx_buffer and
[REP: 6].current_tx_buffer
	Cluster ID: 13
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23450:(257.f), synclink.ko_merged.c:23812:(259.f)] and
	[synclink.ko_merged.c:23450:(257.f), synclink.ko_merged.c:23812:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].current_tx_buffer and
[REP: 6].current_tx_buffer
	Cluster ID: 71
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23450:(257.f), synclink.ko_merged.c:23812:(259.f)] and
	[synclink.ko_merged.c:23785:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].dma_requested and
[REP: 6].dma_requested
	Cluster ID: 14
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21996:(249.f), synclink.ko_merged.c:22027:(250.f)] and
	[synclink.ko_merged.c:21996:(249.f), synclink.ko_merged.c:22027:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].dma_requested and
[REP: 6].dma_requested
	Cluster ID: 72
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21996:(249.f), synclink.ko_merged.c:22027:(250.f)] and
	[synclink.ko_merged.c:22024:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].dma_requested and
[REP: 6].dma_requested
	Cluster ID: 117
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21996:(249.f), synclink.ko_merged.c:22027:(250.f)] and
	[synclink.ko_merged.c:22027:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].dma_requested and
[REP: 6].dma_requested
	Cluster ID: 147
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22024:(250.f)] and
	[synclink.ko_merged.c:22027:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].flags and
[REP: 6].flags
	Cluster ID: 15
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19420:(320.f), synclink.ko_merged.c:19422:(320.f), synclink.ko_merged.c:19425:(320.f), synclink.ko_merged.c:19427:(320.f), synclink.ko_merged.c:21079:(321.f), synclink.ko_merged.c:19216:(414.f), synclink.ko_merged.c:19249:(414.f), synclink.ko_merged.c:19262:(419.f), synclink.ko_merged.c:19305:(419.f), synclink.ko_merged.c:21006:(670.f), synclink.ko_merged.c:21015:(670.f), synclink.ko_merged.c:21032:(670.f), synclink.ko_merged.c:21169:(693.f), synclink.ko_merged.c:21211:(698.f), synclink.ko_merged.c:21215:(698.f), synclink.ko_merged.c:21252:(698.f), synclink.ko_merged.c:21254:(698.f), synclink.ko_merged.c:21265:(698.f), synclink.ko_merged.c:21301:(698.f), synclink.ko_merged.c:21353:(723.f), synclink.ko_merged.c:21355:(723.f), synclink.ko_merged.c:21358:(723.f), synclink.ko_merged.c:21378:(723.f)] and
	[synclink.ko_merged.c:19420:(320.f), synclink.ko_merged.c:19422:(320.f), synclink.ko_merged.c:19425:(320.f), synclink.ko_merged.c:19427:(320.f), synclink.ko_merged.c:19249:(414.f), synclink.ko_merged.c:19305:(419.f), synclink.ko_merged.c:21006:(670.f), synclink.ko_merged.c:21032:(670.f), synclink.ko_merged.c:21169:(693.f), synclink.ko_merged.c:21211:(698.f), synclink.ko_merged.c:21215:(698.f), synclink.ko_merged.c:21301:(698.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].get_tx_holding_index and
[REP: 6].get_tx_holding_index
	Cluster ID: 118
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23453:(257.f), synclink.ko_merged.c:21864:(270.f), synclink.ko_merged.c:21892:(271.f), synclink.ko_merged.c:21894:(271.f)] and
	[synclink.ko_merged.c:21864:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24660
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].get_tx_holding_index and
[REP: 6].get_tx_holding_index
	Cluster ID: 73
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23453:(257.f), synclink.ko_merged.c:21864:(270.f), synclink.ko_merged.c:21892:(271.f), synclink.ko_merged.c:21894:(271.f)] and
	[synclink.ko_merged.c:21892:(271.f), synclink.ko_merged.c:21893:(271.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24660
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24660
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].get_tx_holding_index and
[REP: 6].get_tx_holding_index
	Cluster ID: 16
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23453:(257.f), synclink.ko_merged.c:21864:(270.f), synclink.ko_merged.c:21892:(271.f), synclink.ko_merged.c:21894:(271.f)] and
	[synclink.ko_merged.c:23453:(257.f), synclink.ko_merged.c:21864:(270.f), synclink.ko_merged.c:21892:(271.f), synclink.ko_merged.c:21894:(271.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24660
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24660
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].ignore_status_mask and
[REP: 6].ignore_status_mask
	Cluster ID: 17
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19441:(320.f), synclink.ko_merged.c:19445:(320.f), synclink.ko_merged.c:19448:(320.f)] and
	[synclink.ko_merged.c:19441:(320.f), synclink.ko_merged.c:19445:(320.f), synclink.ko_merged.c:19448:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].init_error and
[REP: 6].init_error
	Cluster ID: 18
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24153:(248.f), synclink.ko_merged.c:24160:(248.f), synclink.ko_merged.c:24167:(248.f)] and
	[synclink.ko_merged.c:24153:(248.f), synclink.ko_merged.c:24160:(248.f), synclink.ko_merged.c:24167:(248.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].intermediate_rxbuffer and
[REP: 6].intermediate_rxbuffer
	Cluster ID: 19
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21813:(267.f), synclink.ko_merged.c:21827:(268.f)] and
	[synclink.ko_merged.c:21813:(267.f), synclink.ko_merged.c:21827:(268.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].intermediate_rxbuffer and
[REP: 6].intermediate_rxbuffer
	Cluster ID: 76
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21813:(267.f), synclink.ko_merged.c:21827:(268.f)] and
	[synclink.ko_merged.c:21814:(267.f), synclink.ko_merged.c:21824:(268.f), synclink.ko_merged.c:21825:(268.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].intermediate_rxbuffer and
[REP: 6].intermediate_rxbuffer
	Cluster ID: 134
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21813:(267.f), synclink.ko_merged.c:21827:(268.f)] and
	[synclink.ko_merged.c:21824:(268.f), synclink.ko_merged.c:21825:(268.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].intermediate_rxbuffer and
[REP: 6].intermediate_rxbuffer
	Cluster ID: 119
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21813:(267.f), synclink.ko_merged.c:21827:(268.f)] and
	[synclink.ko_merged.c:21827:(268.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].intermediate_rxbuffer and
[REP: 6].intermediate_rxbuffer
	Cluster ID: 149
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21814:(267.f), synclink.ko_merged.c:21824:(268.f), synclink.ko_merged.c:21825:(268.f)] and
	[synclink.ko_merged.c:21827:(268.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].io_addr_requested and
[REP: 6].io_addr_requested
	Cluster ID: 20
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21941:(249.f), synclink.ko_merged.c:22034:(250.f)] and
	[synclink.ko_merged.c:21941:(249.f), synclink.ko_merged.c:22034:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].io_addr_requested and
[REP: 6].io_addr_requested
	Cluster ID: 77
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21941:(249.f), synclink.ko_merged.c:22034:(250.f)] and
	[synclink.ko_merged.c:22032:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].io_addr_requested and
[REP: 6].io_addr_requested
	Cluster ID: 120
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21941:(249.f), synclink.ko_merged.c:22034:(250.f)] and
	[synclink.ko_merged.c:22034:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].io_addr_requested and
[REP: 6].io_addr_requested
	Cluster ID: 150
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22032:(250.f)] and
	[synclink.ko_merged.c:22034:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].irq_requested and
[REP: 6].irq_requested
	Cluster ID: 21
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21949:(249.f), synclink.ko_merged.c:22022:(250.f)] and
	[synclink.ko_merged.c:21949:(249.f), synclink.ko_merged.c:22022:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].irq_requested and
[REP: 6].irq_requested
	Cluster ID: 79
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21949:(249.f), synclink.ko_merged.c:22022:(250.f)] and
	[synclink.ko_merged.c:22020:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].irq_requested and
[REP: 6].irq_requested
	Cluster ID: 121
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21949:(249.f), synclink.ko_merged.c:22022:(250.f)] and
	[synclink.ko_merged.c:22022:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].irq_requested and
[REP: 6].irq_requested
	Cluster ID: 151
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22020:(250.f)] and
	[synclink.ko_merged.c:22022:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].last_mem_alloc and
[REP: 6].last_mem_alloc
	Cluster ID: 22
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21631:(261.f), synclink.ko_merged.c:21764:(263.f), synclink.ko_merged.c:21696:(265.f)] and
	[synclink.ko_merged.c:21631:(261.f), synclink.ko_merged.c:21764:(263.f), synclink.ko_merged.c:21696:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].last_mem_alloc and
[REP: 6].last_mem_alloc
	Cluster ID: 80
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21631:(261.f), synclink.ko_merged.c:21764:(263.f), synclink.ko_merged.c:21696:(265.f)] and
	[synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21763:(263.f), synclink.ko_merged.c:21764:(263.f), synclink.ko_merged.c:21694:(265.f), synclink.ko_merged.c:21695:(265.f), synclink.ko_merged.c:21696:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].lcr_base and
[REP: 6].lcr_base
	Cluster ID: 23
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21982:(249.f), synclink.ko_merged.c:22051:(250.f)] and
	[synclink.ko_merged.c:21982:(249.f), synclink.ko_merged.c:22051:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].lcr_base and
[REP: 6].lcr_base
	Cluster ID: 135
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21982:(249.f), synclink.ko_merged.c:22051:(250.f)] and
	[synclink.ko_merged.c:22049:(250.f), synclink.ko_merged.c:22050:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].lcr_base and
[REP: 6].lcr_base
	Cluster ID: 122
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21982:(249.f), synclink.ko_merged.c:22051:(250.f)] and
	[synclink.ko_merged.c:22051:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].lcr_base and
[REP: 6].lcr_base
	Cluster ID: 81
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21982:(249.f), synclink.ko_merged.c:22051:(250.f)] and
	[synclink.ko_merged.c:23152:(231.f), synclink.ko_merged.c:23153:(231.f), synclink.ko_merged.c:21983:(249.f), synclink.ko_merged.c:22049:(250.f), synclink.ko_merged.c:22050:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19233
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19233
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].lcr_base and
[REP: 6].lcr_base
	Cluster ID: 152
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23152:(231.f), synclink.ko_merged.c:23153:(231.f), synclink.ko_merged.c:21983:(249.f), synclink.ko_merged.c:22049:(250.f), synclink.ko_merged.c:22050:(250.f)] and
	[synclink.ko_merged.c:22051:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19233
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].lcr_mem_requested and
[REP: 6].lcr_mem_requested
	Cluster ID: 24
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21967:(249.f), synclink.ko_merged.c:22043:(250.f)] and
	[synclink.ko_merged.c:21967:(249.f), synclink.ko_merged.c:22043:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].lcr_mem_requested and
[REP: 6].lcr_mem_requested
	Cluster ID: 82
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21967:(249.f), synclink.ko_merged.c:22043:(250.f)] and
	[synclink.ko_merged.c:22040:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].lcr_mem_requested and
[REP: 6].lcr_mem_requested
	Cluster ID: 123
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21967:(249.f), synclink.ko_merged.c:22043:(250.f)] and
	[synclink.ko_merged.c:22043:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].lcr_mem_requested and
[REP: 6].lcr_mem_requested
	Cluster ID: 153
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22040:(250.f)] and
	[synclink.ko_merged.c:22043:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].link and
[REP: 6].link
	Cluster ID: 25
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21714:(265.f), synclink.ko_merged.c:21716:(265.f), synclink.ko_merged.c:21727:(265.f), synclink.ko_merged.c:21730:(265.f)] and
	[synclink.ko_merged.c:21714:(265.f), synclink.ko_merged.c:21716:(265.f), synclink.ko_merged.c:21727:(265.f), synclink.ko_merged.c:21730:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].link and
[REP: 6].link
	Cluster ID: 83
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21714:(265.f), synclink.ko_merged.c:21716:(265.f), synclink.ko_merged.c:21727:(265.f), synclink.ko_merged.c:21730:(265.f)] and
	[synclink.ko_merged.c:21716:(265.f), synclink.ko_merged.c:21730:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].low_latency and
[REP: 6].low_latency
	Cluster ID: 26
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21379:(723.f), synclink.ko_merged.c:21381:(723.f)] and
	[synclink.ko_merged.c:21379:(723.f), synclink.ko_merged.c:21381:(723.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].memory_base and
[REP: 6].memory_base
	Cluster ID: 27
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21968:(249.f), synclink.ko_merged.c:22047:(250.f)] and
	[synclink.ko_merged.c:21968:(249.f), synclink.ko_merged.c:22047:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].memory_base and
[REP: 6].memory_base
	Cluster ID: 136
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21968:(249.f), synclink.ko_merged.c:22047:(250.f)] and
	[synclink.ko_merged.c:22045:(250.f), synclink.ko_merged.c:22046:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].memory_base and
[REP: 6].memory_base
	Cluster ID: 124
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21968:(249.f), synclink.ko_merged.c:22047:(250.f)] and
	[synclink.ko_merged.c:22047:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].memory_base and
[REP: 6].memory_base
	Cluster ID: 85
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21968:(249.f), synclink.ko_merged.c:22047:(250.f)] and
	[synclink.ko_merged.c:24193:(247.f), synclink.ko_merged.c:24208:(247.f), synclink.ko_merged.c:24217:(247.f), synclink.ko_merged.c:21970:(249.f), synclink.ko_merged.c:22045:(250.f), synclink.ko_merged.c:22046:(250.f), synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21694:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].memory_base and
[REP: 6].memory_base
	Cluster ID: 154
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24193:(247.f), synclink.ko_merged.c:24208:(247.f), synclink.ko_merged.c:24217:(247.f), synclink.ko_merged.c:21970:(249.f), synclink.ko_merged.c:22045:(250.f), synclink.ko_merged.c:22046:(250.f), synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21694:(265.f)] and
	[synclink.ko_merged.c:22047:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].next_device and
[REP: 6].next_device
	Cluster ID: 155
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21337:(723.f), synclink.ko_merged.c:21606:(779.f)] and
	[synclink.ko_merged.c:22097:(251.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].params and
[REP: 6].params
	Cluster ID: 1
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(54.f), synclink.ko_merged.c:7375:(54.f), synclink.ko_merged.c:7378:(54.f), synclink.ko_merged.c:7381:(54.f), synclink.ko_merged.c:7382:(54.f), synclink.ko_merged.c:7385:(54.f), synclink.ko_merged.c:7386:(54.f), synclink.ko_merged.c:7389:(54.f), synclink.ko_merged.c:7390:(54.f), synclink.ko_merged.c:7393:(54.f), synclink.ko_merged.c:7394:(54.f)] and
	[synclink.ko_merged.c:7372:(54.f), synclink.ko_merged.c:7375:(54.f), synclink.ko_merged.c:7378:(54.f), synclink.ko_merged.c:7381:(54.f), synclink.ko_merged.c:7382:(54.f), synclink.ko_merged.c:7385:(54.f), synclink.ko_merged.c:7386:(54.f), synclink.ko_merged.c:7389:(54.f), synclink.ko_merged.c:7390:(54.f), synclink.ko_merged.c:7393:(54.f), synclink.ko_merged.c:7394:(54.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24675
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24012
	lval 1: [REP: 6]
	made empty at: synclink.ko_merged.c:19233
	lval 2: [REP: 6]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:24675
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:24012
	lval 1: [REP: 6]
	made empty at: synclink.ko_merged.c:24012
	lval 2: [REP: 6]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: _a23953_761356_synclink_1
	lval 2: _a23953_761356_synclink_1
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.data_bits and
[REP: 6].params.data_bits
	Cluster ID: 28
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19379:(320.f), synclink.ko_merged.c:19382:(320.f), synclink.ko_merged.c:19385:(320.f), synclink.ko_merged.c:19388:(320.f), synclink.ko_merged.c:19391:(320.f)] and
	[synclink.ko_merged.c:19379:(320.f), synclink.ko_merged.c:19382:(320.f), synclink.ko_merged.c:19385:(320.f), synclink.ko_merged.c:19388:(320.f), synclink.ko_merged.c:19391:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.data_bits and
[REP: 6].params.data_bits
	Cluster ID: 86
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19379:(320.f), synclink.ko_merged.c:19382:(320.f), synclink.ko_merged.c:19385:(320.f), synclink.ko_merged.c:19388:(320.f), synclink.ko_merged.c:19391:(320.f)] and
	[synclink.ko_merged.c:23198:(234.f), synclink.ko_merged.c:23213:(234.f), synclink.ko_merged.c:19410:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.data_rate and
[REP: 6].params.data_rate
	Cluster ID: 29
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19413:(320.f)] and
	[synclink.ko_merged.c:19413:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.data_rate and
[REP: 6].params.data_rate
	Cluster ID: 87
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19413:(320.f)] and
	[synclink.ko_merged.c:23230:(234.f), synclink.ko_merged.c:19412:(320.f), synclink.ko_merged.c:19415:(320.f), synclink.ko_merged.c:19416:(320.f), synclink.ko_merged.c:21083:(321.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.parity and
[REP: 6].params.parity
	Cluster ID: 30
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19399:(320.f), synclink.ko_merged.c:19402:(320.f), synclink.ko_merged.c:19404:(320.f), synclink.ko_merged.c:19407:(320.f)] and
	[synclink.ko_merged.c:19399:(320.f), synclink.ko_merged.c:19402:(320.f), synclink.ko_merged.c:19404:(320.f), synclink.ko_merged.c:19407:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.parity and
[REP: 6].params.parity
	Cluster ID: 89
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19399:(320.f), synclink.ko_merged.c:19402:(320.f), synclink.ko_merged.c:19404:(320.f), synclink.ko_merged.c:19407:(320.f)] and
	[synclink.ko_merged.c:23201:(234.f), synclink.ko_merged.c:23203:(234.f), synclink.ko_merged.c:23216:(234.f), synclink.ko_merged.c:23218:(234.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.stop_bits and
[REP: 6].params.stop_bits
	Cluster ID: 31
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19395:(320.f), synclink.ko_merged.c:19397:(320.f)] and
	[synclink.ko_merged.c:19395:(320.f), synclink.ko_merged.c:19397:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].params.stop_bits and
[REP: 6].params.stop_bits
	Cluster ID: 90
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19395:(320.f), synclink.ko_merged.c:19397:(320.f)] and
	[synclink.ko_merged.c:23193:(234.f), synclink.ko_merged.c:19410:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].pending_bh and
[REP: 6].pending_bh
	Cluster ID: 32
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19227:(414.f)] and
	[synclink.ko_merged.c:19227:(414.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].pending_bh and
[REP: 6].pending_bh
	Cluster ID: 91
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19227:(414.f)] and
	[synclink.ko_merged.c:21548:(734.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].phys_addr and
[REP: 6].phys_addr
	Cluster ID: 33
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21773:(263.f)] and
	[synclink.ko_merged.c:21773:(263.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].phys_entry and
[REP: 6].phys_entry
	Cluster ID: 34
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21711:(265.f), synclink.ko_merged.c:21723:(265.f)] and
	[synclink.ko_merged.c:21711:(265.f), synclink.ko_merged.c:21723:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].phys_entry and
[REP: 6].phys_entry
	Cluster ID: 92
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21711:(265.f), synclink.ko_merged.c:21723:(265.f)] and
	[synclink.ko_merged.c:22926:(221.f), synclink.ko_merged.c:23008:(223.f), synclink.ko_merged.c:24023:(246.f), synclink.ko_merged.c:24051:(246.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24663
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24663
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].put_tx_holding_index and
[REP: 6].put_tx_holding_index
	Cluster ID: 156
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21916:(272.f), synclink.ko_merged.c:21917:(272.f)] and
	[synclink.ko_merged.c:21865:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].put_tx_holding_index and
[REP: 6].put_tx_holding_index
	Cluster ID: 125
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23454:(257.f), synclink.ko_merged.c:21865:(270.f), synclink.ko_merged.c:21916:(272.f), synclink.ko_merged.c:21918:(272.f)] and
	[synclink.ko_merged.c:21865:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].put_tx_holding_index and
[REP: 6].put_tx_holding_index
	Cluster ID: 93
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23454:(257.f), synclink.ko_merged.c:21865:(270.f), synclink.ko_merged.c:21916:(272.f), synclink.ko_merged.c:21918:(272.f)] and
	[synclink.ko_merged.c:21916:(272.f), synclink.ko_merged.c:21917:(272.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].put_tx_holding_index and
[REP: 6].put_tx_holding_index
	Cluster ID: 35
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23454:(257.f), synclink.ko_merged.c:21865:(270.f), synclink.ko_merged.c:21916:(272.f), synclink.ko_merged.c:21918:(272.f)] and
	[synclink.ko_merged.c:23454:(257.f), synclink.ko_merged.c:21865:(270.f), synclink.ko_merged.c:21916:(272.f), synclink.ko_merged.c:21918:(272.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rcc and
[REP: 6].rcc
	Cluster ID: 94
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(223.f), synclink.ko_merged.c:24005:(246.f), synclink.ko_merged.c:23788:(259.f)] and
	[synclink.ko_merged.c:23002:(223.f), synclink.ko_merged.c:23568:(254.f), synclink.ko_merged.c:23706:(255.f), synclink.ko_merged.c:23707:(255.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24663
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24663
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rcc and
[REP: 6].rcc
	Cluster ID: 36
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(223.f), synclink.ko_merged.c:24005:(246.f), synclink.ko_merged.c:23788:(259.f)] and
	[synclink.ko_merged.c:23004:(223.f), synclink.ko_merged.c:24005:(246.f), synclink.ko_merged.c:23788:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].read_status_mask and
[REP: 6].read_status_mask
	Cluster ID: 37
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19429:(320.f), synclink.ko_merged.c:19431:(320.f), synclink.ko_merged.c:19434:(320.f), synclink.ko_merged.c:19437:(320.f)] and
	[synclink.ko_merged.c:19429:(320.f), synclink.ko_merged.c:19431:(320.f), synclink.ko_merged.c:19434:(320.f), synclink.ko_merged.c:19437:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].read_status_mask and
[REP: 6].read_status_mask
	Cluster ID: 95
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19429:(320.f), synclink.ko_merged.c:19431:(320.f), synclink.ko_merged.c:19434:(320.f), synclink.ko_merged.c:19437:(320.f)] and
	[synclink.ko_merged.c:19431:(320.f), synclink.ko_merged.c:19434:(320.f), synclink.ko_merged.c:19437:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rx_buffer_count and
[REP: 6].rx_buffer_count
	Cluster ID: 38
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21638:(261.f), synclink.ko_merged.c:21641:(261.f), synclink.ko_merged.c:21643:(261.f)] and
	[synclink.ko_merged.c:21638:(261.f), synclink.ko_merged.c:21641:(261.f), synclink.ko_merged.c:21643:(261.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rx_buffer_count and
[REP: 6].rx_buffer_count
	Cluster ID: 137
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21638:(261.f), synclink.ko_merged.c:21641:(261.f), synclink.ko_merged.c:21643:(261.f)] and
	[synclink.ko_merged.c:21803:(262.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].rx_buffer_count and
[REP: 6].rx_buffer_count
	Cluster ID: 96
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21638:(261.f), synclink.ko_merged.c:21641:(261.f), synclink.ko_merged.c:21643:(261.f)] and
	[synclink.ko_merged.c:23471:(256.f), synclink.ko_merged.c:21642:(261.f), synclink.ko_merged.c:21647:(261.f), synclink.ko_merged.c:21656:(261.f), synclink.ko_merged.c:21803:(262.f), synclink.ko_merged.c:21708:(265.f), synclink.ko_merged.c:21710:(265.f), synclink.ko_merged.c:21715:(265.f), synclink.ko_merged.c:21723:(265.f), synclink.ko_merged.c:21727:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rx_buffer_list and
[REP: 6].rx_buffer_list
	Cluster ID: 157
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21656:(261.f), synclink.ko_merged.c:21803:(262.f)] and
	[synclink.ko_merged.c:21748:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].rx_buffer_list and
[REP: 6].rx_buffer_list
	Cluster ID: 97
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21748:(266.f)] and
	[synclink.ko_merged.c:21656:(261.f), synclink.ko_merged.c:21803:(262.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rx_buffer_list and
[REP: 6].rx_buffer_list
	Cluster ID: 39
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21748:(266.f)] and
	[synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21748:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].rx_buffer_list and
[REP: 6].rx_buffer_list
	Cluster ID: 126
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21748:(266.f)] and
	[synclink.ko_merged.c:21748:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].rx_buffer_list and
[REP: 6].rx_buffer_list
	Cluster ID: 138
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21706:(265.f), synclink.ko_merged.c:21748:(266.f)] and
	[synclink.ko_merged.c:21803:(262.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].serial_signals and
[REP: 6].serial_signals
	Cluster ID: 98
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22985:(223.f), synclink.ko_merged.c:23376:(229.f), synclink.ko_merged.c:23379:(229.f), synclink.ko_merged.c:23382:(229.f), synclink.ko_merged.c:23385:(229.f), synclink.ko_merged.c:23388:(229.f), synclink.ko_merged.c:20494:(288.f), synclink.ko_merged.c:20497:(288.f), synclink.ko_merged.c:20500:(288.f), synclink.ko_merged.c:20503:(288.f), synclink.ko_merged.c:19373:(320.f), synclink.ko_merged.c:19375:(320.f), synclink.ko_merged.c:19292:(419.f), synclink.ko_merged.c:19296:(419.f), synclink.ko_merged.c:19819:(484.f), synclink.ko_merged.c:19850:(489.f), synclink.ko_merged.c:20942:(664.f), synclink.ko_merged.c:20950:(664.f), synclink.ko_merged.c:20952:(664.f), synclink.ko_merged.c:20956:(664.f), synclink.ko_merged.c:21239:(698.f)] and
	[synclink.ko_merged.c:22984:(223.f), synclink.ko_merged.c:22985:(223.f), synclink.ko_merged.c:23376:(229.f), synclink.ko_merged.c:23379:(229.f), synclink.ko_merged.c:23382:(229.f), synclink.ko_merged.c:23385:(229.f), synclink.ko_merged.c:23388:(229.f), synclink.ko_merged.c:23398:(230.f), synclink.ko_merged.c:20444:(287.f), synclink.ko_merged.c:20449:(287.f), synclink.ko_merged.c:20454:(287.f), synclink.ko_merged.c:20459:(287.f), synclink.ko_merged.c:20464:(287.f), synclink.ko_merged.c:20469:(287.f), synclink.ko_merged.c:20494:(288.f), synclink.ko_merged.c:20497:(288.f), synclink.ko_merged.c:20500:(288.f), synclink.ko_merged.c:20503:(288.f), synclink.ko_merged.c:20125:(297.f), synclink.ko_merged.c:19373:(320.f), synclink.ko_merged.c:19375:(320.f), synclink.ko_merged.c:19292:(419.f), synclink.ko_merged.c:19296:(419.f), synclink.ko_merged.c:19819:(484.f), synclink.ko_merged.c:19850:(489.f), synclink.ko_merged.c:20942:(664.f), synclink.ko_merged.c:20950:(664.f), synclink.ko_merged.c:20952:(664.f), synclink.ko_merged.c:20956:(664.f), synclink.ko_merged.c:21239:(698.f), synclink.ko_merged.c:21269:(698.f), synclink.ko_merged.c:21476:(734.f), synclink.ko_merged.c:21479:(734.f), synclink.ko_merged.c:21482:(734.f), synclink.ko_merged.c:21485:(734.f), synclink.ko_merged.c:21488:(734.f), synclink.ko_merged.c:21491:(734.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].serial_signals and
[REP: 6].serial_signals
	Cluster ID: 40
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22985:(223.f), synclink.ko_merged.c:23376:(229.f), synclink.ko_merged.c:23379:(229.f), synclink.ko_merged.c:23382:(229.f), synclink.ko_merged.c:23385:(229.f), synclink.ko_merged.c:23388:(229.f), synclink.ko_merged.c:20494:(288.f), synclink.ko_merged.c:20497:(288.f), synclink.ko_merged.c:20500:(288.f), synclink.ko_merged.c:20503:(288.f), synclink.ko_merged.c:19373:(320.f), synclink.ko_merged.c:19375:(320.f), synclink.ko_merged.c:19292:(419.f), synclink.ko_merged.c:19296:(419.f), synclink.ko_merged.c:19819:(484.f), synclink.ko_merged.c:19850:(489.f), synclink.ko_merged.c:20942:(664.f), synclink.ko_merged.c:20950:(664.f), synclink.ko_merged.c:20952:(664.f), synclink.ko_merged.c:20956:(664.f), synclink.ko_merged.c:21239:(698.f)] and
	[synclink.ko_merged.c:22985:(223.f), synclink.ko_merged.c:23376:(229.f), synclink.ko_merged.c:23379:(229.f), synclink.ko_merged.c:23382:(229.f), synclink.ko_merged.c:23385:(229.f), synclink.ko_merged.c:23388:(229.f), synclink.ko_merged.c:20494:(288.f), synclink.ko_merged.c:20497:(288.f), synclink.ko_merged.c:20500:(288.f), synclink.ko_merged.c:20503:(288.f), synclink.ko_merged.c:19373:(320.f), synclink.ko_merged.c:19375:(320.f), synclink.ko_merged.c:19292:(419.f), synclink.ko_merged.c:19296:(419.f), synclink.ko_merged.c:19819:(484.f), synclink.ko_merged.c:19850:(489.f), synclink.ko_merged.c:20942:(664.f), synclink.ko_merged.c:20950:(664.f), synclink.ko_merged.c:20952:(664.f), synclink.ko_merged.c:20956:(664.f), synclink.ko_merged.c:21239:(698.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].shared_mem_requested and
[REP: 6].shared_mem_requested
	Cluster ID: 41
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21958:(249.f), synclink.ko_merged.c:22038:(250.f)] and
	[synclink.ko_merged.c:21958:(249.f), synclink.ko_merged.c:22038:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].shared_mem_requested and
[REP: 6].shared_mem_requested
	Cluster ID: 99
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21958:(249.f), synclink.ko_merged.c:22038:(250.f)] and
	[synclink.ko_merged.c:22036:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].shared_mem_requested and
[REP: 6].shared_mem_requested
	Cluster ID: 127
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21958:(249.f), synclink.ko_merged.c:22038:(250.f)] and
	[synclink.ko_merged.c:22038:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].shared_mem_requested and
[REP: 6].shared_mem_requested
	Cluster ID: 158
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22036:(250.f)] and
	[synclink.ko_merged.c:22038:(250.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].start_tx_dma_buffer and
[REP: 6].start_tx_dma_buffer
	Cluster ID: 42
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23451:(257.f), synclink.ko_merged.c:23786:(259.f)] and
	[synclink.ko_merged.c:23451:(257.f), synclink.ko_merged.c:23786:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].status and
[REP: 6].status
	Cluster ID: 43
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24006:(246.f), synclink.ko_merged.c:24015:(246.f), synclink.ko_merged.c:23787:(259.f)] and
	[synclink.ko_merged.c:24006:(246.f), synclink.ko_merged.c:24015:(246.f), synclink.ko_merged.c:23787:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].status and
[REP: 6].status
	Cluster ID: 100
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24006:(246.f), synclink.ko_merged.c:24015:(246.f), synclink.ko_merged.c:23787:(259.f)] and
	[synclink.ko_merged.c:24113:(246.f), synclink.ko_merged.c:24119:(246.f), synclink.ko_merged.c:24123:(246.f), synclink.ko_merged.c:23528:(254.f), synclink.ko_merged.c:23545:(254.f), synclink.ko_merged.c:23647:(254.f), synclink.ko_merged.c:23682:(255.f), synclink.ko_merged.c:23688:(255.f), synclink.ko_merged.c:23748:(255.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].timeout and
[REP: 6].timeout
	Cluster ID: 44
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19416:(320.f), synclink.ko_merged.c:19418:(320.f)] and
	[synclink.ko_merged.c:19416:(320.f), synclink.ko_merged.c:19418:(320.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].timeout and
[REP: 6].timeout
	Cluster ID: 101
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19416:(320.f), synclink.ko_merged.c:19418:(320.f)] and
	[synclink.ko_merged.c:19418:(320.f), synclink.ko_merged.c:21084:(321.f), synclink.ko_merged.c:21016:(670.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tty and
[REP: 6].tty
	Cluster ID: 102
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21024:(670.f), synclink.ko_merged.c:21170:(693.f), synclink.ko_merged.c:21344:(723.f), synclink.ko_merged.c:21412:(723.f)] and
	[synclink.ko_merged.c:19361:(320.f), synclink.ko_merged.c:19413:(320.f), synclink.ko_merged.c:19238:(414.f), synclink.ko_merged.c:19246:(414.f), synclink.ko_merged.c:19291:(419.f), synclink.ko_merged.c:19302:(419.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19302
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19302
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tty and
[REP: 6].tty
	Cluster ID: 45
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21024:(670.f), synclink.ko_merged.c:21170:(693.f), synclink.ko_merged.c:21344:(723.f), synclink.ko_merged.c:21412:(723.f)] and
	[synclink.ko_merged.c:21024:(670.f), synclink.ko_merged.c:21170:(693.f), synclink.ko_merged.c:21344:(723.f), synclink.ko_merged.c:21412:(723.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_buffer_count and
[REP: 6].tx_buffer_count
	Cluster ID: 46
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(261.f), synclink.ko_merged.c:21640:(261.f)] and
	[synclink.ko_merged.c:21637:(261.f), synclink.ko_merged.c:21640:(261.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_buffer_count and
[REP: 6].tx_buffer_count
	Cluster ID: 139
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(261.f), synclink.ko_merged.c:21640:(261.f)] and
	[synclink.ko_merged.c:21804:(262.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_buffer_count and
[REP: 6].tx_buffer_count
	Cluster ID: 104
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(261.f), synclink.ko_merged.c:21640:(261.f)] and
	[synclink.ko_merged.c:23446:(257.f), synclink.ko_merged.c:23463:(258.f), synclink.ko_merged.c:23794:(259.f), synclink.ko_merged.c:21638:(261.f), synclink.ko_merged.c:21642:(261.f), synclink.ko_merged.c:21643:(261.f), synclink.ko_merged.c:21647:(261.f), synclink.ko_merged.c:21662:(261.f), synclink.ko_merged.c:21804:(262.f), synclink.ko_merged.c:21722:(265.f), synclink.ko_merged.c:21729:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_buffer_list and
[REP: 6].tx_buffer_list
	Cluster ID: 47
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21708:(265.f), synclink.ko_merged.c:21749:(266.f)] and
	[synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21708:(265.f), synclink.ko_merged.c:21749:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_buffer_list and
[REP: 6].tx_buffer_list
	Cluster ID: 128
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21708:(265.f), synclink.ko_merged.c:21749:(266.f)] and
	[synclink.ko_merged.c:21749:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_buffer_list and
[REP: 6].tx_buffer_list
	Cluster ID: 140
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21708:(265.f), synclink.ko_merged.c:21749:(266.f)] and
	[synclink.ko_merged.c:21804:(262.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_buffer_list and
[REP: 6].tx_buffer_list
	Cluster ID: 105
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21707:(265.f), synclink.ko_merged.c:21708:(265.f), synclink.ko_merged.c:21749:(266.f)] and
	[synclink.ko_merged.c:23793:(259.f), synclink.ko_merged.c:21662:(261.f), synclink.ko_merged.c:21804:(262.f), synclink.ko_merged.c:21708:(265.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_buffer_list and
[REP: 6].tx_buffer_list
	Cluster ID: 159
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23793:(259.f), synclink.ko_merged.c:21662:(261.f), synclink.ko_merged.c:21804:(262.f), synclink.ko_merged.c:21708:(265.f)] and
	[synclink.ko_merged.c:21749:(266.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_dma_buffers_used and
[REP: 6].tx_dma_buffers_used
	Cluster ID: 48
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23452:(257.f), synclink.ko_merged.c:23810:(259.f)] and
	[synclink.ko_merged.c:23452:(257.f), synclink.ko_merged.c:23810:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_dma_buffers_used and
[REP: 6].tx_dma_buffers_used
	Cluster ID: 106
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23452:(257.f), synclink.ko_merged.c:23810:(259.f)] and
	[synclink.ko_merged.c:23463:(258.f), synclink.ko_merged.c:23810:(259.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_buffers and
[REP: 6].tx_holding_buffers
	Cluster ID: 49
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7513:(67.f), synclink.ko_merged.c:7516:(67.f), synclink.ko_merged.c:7519:(67.f), synclink.ko_merged.c:7520:(67.f), synclink.ko_merged.c:7523:(67.f)] and
	[synclink.ko_merged.c:7513:(67.f), synclink.ko_merged.c:7516:(67.f), synclink.ko_merged.c:7519:(67.f), synclink.ko_merged.c:7520:(67.f), synclink.ko_merged.c:7523:(67.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer and
[REP: 6].tx_holding_buffers[0].buffer
	Cluster ID: 50
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(269.f), synclink.ko_merged.c:21860:(270.f)] and
	[synclink.ko_merged.c:21842:(269.f), synclink.ko_merged.c:21860:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer and
[REP: 6].tx_holding_buffers[0].buffer
	Cluster ID: 108
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(269.f), synclink.ko_merged.c:21860:(270.f)] and
	[synclink.ko_merged.c:21844:(269.f), synclink.ko_merged.c:21858:(270.f), synclink.ko_merged.c:21859:(270.f), synclink.ko_merged.c:21890:(271.f), synclink.ko_merged.c:21914:(272.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer and
[REP: 6].tx_holding_buffers[0].buffer
	Cluster ID: 141
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(269.f), synclink.ko_merged.c:21860:(270.f)] and
	[synclink.ko_merged.c:21858:(270.f), synclink.ko_merged.c:21859:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer and
[REP: 6].tx_holding_buffers[0].buffer
	Cluster ID: 129
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(269.f), synclink.ko_merged.c:21860:(270.f)] and
	[synclink.ko_merged.c:21860:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer and
[REP: 6].tx_holding_buffers[0].buffer
	Cluster ID: 160
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21844:(269.f), synclink.ko_merged.c:21858:(270.f), synclink.ko_merged.c:21859:(270.f), synclink.ko_merged.c:21890:(271.f), synclink.ko_merged.c:21914:(272.f)] and
	[synclink.ko_merged.c:21860:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer_size and
[REP: 6].tx_holding_buffers[0].buffer_size
	Cluster ID: 109
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21913:(272.f)] and
	[synclink.ko_merged.c:21884:(271.f), synclink.ko_merged.c:21885:(271.f), synclink.ko_merged.c:21889:(271.f), synclink.ko_merged.c:21890:(271.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {[REP: 6].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_buffers[0].buffer_size and
[REP: 6].tx_holding_buffers[0].buffer_size
	Cluster ID: 51
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21913:(272.f)] and
	[synclink.ko_merged.c:21913:(272.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_count and
[REP: 6].tx_holding_count
	Cluster ID: 161
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21880:(271.f), synclink.ko_merged.c:21891:(271.f), synclink.ko_merged.c:21909:(272.f), synclink.ko_merged.c:21915:(272.f), synclink.ko_merged.c:19596:(448.f)] and
	[synclink.ko_merged.c:21866:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_holding_count and
[REP: 6].tx_holding_count
	Cluster ID: 130
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23455:(257.f), synclink.ko_merged.c:21866:(270.f), synclink.ko_merged.c:21891:(271.f), synclink.ko_merged.c:21915:(272.f)] and
	[synclink.ko_merged.c:21866:(270.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].tx_holding_count and
[REP: 6].tx_holding_count
	Cluster ID: 110
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23455:(257.f), synclink.ko_merged.c:21866:(270.f), synclink.ko_merged.c:21891:(271.f), synclink.ko_merged.c:21915:(272.f)] and
	[synclink.ko_merged.c:21880:(271.f), synclink.ko_merged.c:21891:(271.f), synclink.ko_merged.c:21909:(272.f), synclink.ko_merged.c:21915:(272.f), synclink.ko_merged.c:19596:(448.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_holding_count and
[REP: 6].tx_holding_count
	Cluster ID: 52
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23455:(257.f), synclink.ko_merged.c:21866:(270.f), synclink.ko_merged.c:21891:(271.f), synclink.ko_merged.c:21915:(272.f)] and
	[synclink.ko_merged.c:23455:(257.f), synclink.ko_merged.c:21866:(270.f), synclink.ko_merged.c:21891:(271.f), synclink.ko_merged.c:21915:(272.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_timer.base and
[REP: 6].tx_timer.base
	Cluster ID: 53
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10452:(110.f)] and
	[synclink.ko_merged.c:10452:(110.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_timer.data and
[REP: 6].tx_timer.data
	Cluster ID: 54
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19229:(414.f)] and
	[synclink.ko_merged.c:19229:(414.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_timer.function and
[REP: 6].tx_timer.function
	Cluster ID: 55
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19230:(414.f)] and
	[synclink.ko_merged.c:19230:(414.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_timer.lock and
[REP: 6].tx_timer.lock
	Cluster ID: 56
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10456:(110.f)] and
	[synclink.ko_merged.c:10456:(110.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].tx_timer.magic and
[REP: 6].tx_timer.magic
	Cluster ID: 57
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10453:(110.f)] and
	[synclink.ko_merged.c:10453:(110.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].virt_addr and
[REP: 6].virt_addr
	Cluster ID: 58
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21767:(263.f), synclink.ko_merged.c:21791:(264.f)] and
	[synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21767:(263.f), synclink.ko_merged.c:21791:(264.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].virt_addr and
[REP: 6].virt_addr
	Cluster ID: 142
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21767:(263.f), synclink.ko_merged.c:21791:(264.f)] and
	[synclink.ko_merged.c:21787:(264.f), synclink.ko_merged.c:21789:(264.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].virt_addr and
[REP: 6].virt_addr
	Cluster ID: 131
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21767:(263.f), synclink.ko_merged.c:21791:(264.f)] and
	[synclink.ko_merged.c:21791:(264.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].virt_addr and
[REP: 6].virt_addr
	Cluster ID: 111
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(263.f), synclink.ko_merged.c:21767:(263.f), synclink.ko_merged.c:21791:(264.f)] and
	[synclink.ko_merged.c:24007:(246.f), synclink.ko_merged.c:24017:(246.f), synclink.ko_merged.c:24127:(246.f), synclink.ko_merged.c:23589:(254.f), synclink.ko_merged.c:23617:(254.f), synclink.ko_merged.c:23730:(255.f), synclink.ko_merged.c:23735:(255.f), synclink.ko_merged.c:23803:(259.f), synclink.ko_merged.c:23805:(259.f), synclink.ko_merged.c:21768:(263.f), synclink.ko_merged.c:21771:(263.f), synclink.ko_merged.c:21787:(264.f), synclink.ko_merged.c:21789:(264.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].virt_addr and
[REP: 6].virt_addr
	Cluster ID: 162
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24007:(246.f), synclink.ko_merged.c:24017:(246.f), synclink.ko_merged.c:24127:(246.f), synclink.ko_merged.c:23589:(254.f), synclink.ko_merged.c:23617:(254.f), synclink.ko_merged.c:23730:(255.f), synclink.ko_merged.c:23735:(255.f), synclink.ko_merged.c:23803:(259.f), synclink.ko_merged.c:23805:(259.f), synclink.ko_merged.c:21768:(263.f), synclink.ko_merged.c:21771:(263.f), synclink.ko_merged.c:21787:(264.f), synclink.ko_merged.c:21789:(264.f)] and
	[synclink.ko_merged.c:21791:(264.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 6].x_char and
[REP: 6].x_char
	Cluster ID: 112
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23129:(226.f), synclink.ko_merged.c:19789:(478.f), synclink.ko_merged.c:19843:(489.f)] and
	[synclink.ko_merged.c:23085:(226.f), synclink.ko_merged.c:23103:(226.f), synclink.ko_merged.c:23127:(226.f), synclink.ko_merged.c:23128:(226.f), synclink.ko_merged.c:19842:(489.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19793
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19845
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19845
	made empty at: synclink.ko_merged.c:19793
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].x_char and
[REP: 6].x_char
	Cluster ID: 59
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23129:(226.f), synclink.ko_merged.c:19789:(478.f), synclink.ko_merged.c:19843:(489.f)] and
	[synclink.ko_merged.c:23129:(226.f), synclink.ko_merged.c:19789:(478.f), synclink.ko_merged.c:19843:(489.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19793
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19793
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].xmit_buf and
[REP: 6].xmit_buf
	Cluster ID: 113
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(414.f), synclink.ko_merged.c:19273:(419.f)] and
	[synclink.ko_merged.c:19219:(414.f), synclink.ko_merged.c:19221:(414.f), synclink.ko_merged.c:19271:(419.f), synclink.ko_merged.c:19272:(419.f), synclink.ko_merged.c:19475:(436.f), synclink.ko_merged.c:19522:(443.f), synclink.ko_merged.c:19540:(443.f), synclink.ko_merged.c:19578:(448.f), synclink.ko_merged.c:19616:(448.f), synclink.ko_merged.c:19652:(448.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19652
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19652
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].xmit_buf and
[REP: 6].xmit_buf
	Cluster ID: 60
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(414.f), synclink.ko_merged.c:19273:(419.f)] and
	[synclink.ko_merged.c:19220:(414.f), synclink.ko_merged.c:19273:(419.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].xmit_cnt and
[REP: 6].xmit_cnt
	Cluster ID: 114
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23113:(226.f), synclink.ko_merged.c:23136:(226.f), synclink.ko_merged.c:21889:(271.f), synclink.ko_merged.c:19320:(427.f), synclink.ko_merged.c:19490:(436.f), synclink.ko_merged.c:19627:(448.f), synclink.ko_merged.c:19655:(448.f), synclink.ko_merged.c:19766:(473.f)] and
	[synclink.ko_merged.c:22980:(223.f), synclink.ko_merged.c:23084:(226.f), synclink.ko_merged.c:23095:(226.f), synclink.ko_merged.c:23101:(226.f), synclink.ko_merged.c:23113:(226.f), synclink.ko_merged.c:23136:(226.f), synclink.ko_merged.c:19485:(436.f), synclink.ko_merged.c:19490:(436.f), synclink.ko_merged.c:19506:(443.f), synclink.ko_merged.c:19513:(443.f), synclink.ko_merged.c:19539:(443.f), synclink.ko_merged.c:19540:(443.f), synclink.ko_merged.c:19614:(448.f), synclink.ko_merged.c:19616:(448.f), synclink.ko_merged.c:19634:(448.f), synclink.ko_merged.c:19655:(448.f), synclink.ko_merged.c:19663:(448.f), synclink.ko_merged.c:19693:(464.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19634
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19634
	made empty at: synclink.ko_merged.c:19627
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

[REP: 6].xmit_cnt and
[REP: 6].xmit_cnt
	Cluster ID: 61
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23113:(226.f), synclink.ko_merged.c:23136:(226.f), synclink.ko_merged.c:21889:(271.f), synclink.ko_merged.c:19320:(427.f), synclink.ko_merged.c:19490:(436.f), synclink.ko_merged.c:19627:(448.f), synclink.ko_merged.c:19655:(448.f), synclink.ko_merged.c:19766:(473.f)] and
	[synclink.ko_merged.c:23113:(226.f), synclink.ko_merged.c:23136:(226.f), synclink.ko_merged.c:21889:(271.f), synclink.ko_merged.c:19320:(427.f), synclink.ko_merged.c:19490:(436.f), synclink.ko_merged.c:19627:(448.f), synclink.ko_merged.c:19655:(448.f), synclink.ko_merged.c:19766:(473.f)]

	Confidence: used PTA nodes lblSet(11, 11)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f


$$$$$$
Total Warnings: 163


Printing Alias assumptions used by warnings
-----
nc	5	[REP: 4].flags#g/[REP: 4].flags#g	1	1
nc	148	[REP: 6].get_tx_holding_index#g/[REP: 6].get_tx_holding_index#g	11	11
nc	74	[REP: 6].icount.tx#g/[REP: 6].icount.tx#g	11	11
nc	75	[REP: 6].idle_mode#g/[REP: 6].idle_mode#g	11	11
nc	78	[REP: 6].irq_occurred#g/[REP: 6].irq_occurred#g	11	11
nc	84	[REP: 6].loopback_bits#g/[REP: 6].loopback_bits#g	11	11
nc	88	[REP: 6].params.mode#g/[REP: 6].params.mode#g	11	11
nc	103	[REP: 6].tx_active#g/[REP: 6].tx_active#g	11	11
nc	107	[REP: 6].tx_enabled#g/[REP: 6].tx_enabled#g	11	11
nc	65	[REP: 6].blocked_open#g/[REP: 6].blocked_open#g	11	11
nc	6	[REP: 6].blocked_open#g/[REP: 6].blocked_open#g	11	11
nc	7	[REP: 6].buffer_list#g/[REP: 6].buffer_list#g	11	11
nc	66	[REP: 6].buffer_list#g/[REP: 6].buffer_list#g	11	11
nc	133	[REP: 6].buffer_list#g/[REP: 6].buffer_list#g	11	11
nc	116	[REP: 6].buffer_list#g/[REP: 6].buffer_list#g	11	11
nc	146	[REP: 6].buffer_list#g/[REP: 6].buffer_list#g	11	11
nc	8	[REP: 6].buffer_list_phys#g/[REP: 6].buffer_list_phys#g	11	11
nc	67	[REP: 6].buffer_list_phys#g/[REP: 6].buffer_list_phys#g	11	11
nc	9	[REP: 6].cmr_value#g/[REP: 6].cmr_value#g	11	11
nc	68	[REP: 6].cmr_value#g/[REP: 6].cmr_value#g	11	11
nc	10	[REP: 6].count#g/[REP: 6].count#g	11	11
nc	69	[REP: 6].count#g/[REP: 6].count#g	11	11
nc	70	[REP: 6].count#g/[REP: 6].count#g	11	11
nc	11	[REP: 6].count#g/[REP: 6].count#g	11	11
nc	12	[REP: 6].current_rx_buffer#g/[REP: 6].current_rx_buffer#g	11	11
nc	13	[REP: 6].current_tx_buffer#g/[REP: 6].current_tx_buffer#g	11	11
nc	71	[REP: 6].current_tx_buffer#g/[REP: 6].current_tx_buffer#g	11	11
nc	14	[REP: 6].dma_requested#g/[REP: 6].dma_requested#g	11	11
nc	72	[REP: 6].dma_requested#g/[REP: 6].dma_requested#g	11	11
nc	117	[REP: 6].dma_requested#g/[REP: 6].dma_requested#g	11	11
nc	147	[REP: 6].dma_requested#g/[REP: 6].dma_requested#g	11	11
nc	15	[REP: 6].flags#g/[REP: 6].flags#g	11	11
nc	118	[REP: 6].get_tx_holding_index#g/[REP: 6].get_tx_holding_index#g	11	11
nc	73	[REP: 6].get_tx_holding_index#g/[REP: 6].get_tx_holding_index#g	11	11
nc	16	[REP: 6].get_tx_holding_index#g/[REP: 6].get_tx_holding_index#g	11	11
nc	17	[REP: 6].ignore_status_mask#g/[REP: 6].ignore_status_mask#g	11	11
nc	18	[REP: 6].init_error#g/[REP: 6].init_error#g	11	11
nc	19	[REP: 6].intermediate_rxbuffer#g/[REP: 6].intermediate_rxbuffer#g	11	11
nc	76	[REP: 6].intermediate_rxbuffer#g/[REP: 6].intermediate_rxbuffer#g	11	11
nc	134	[REP: 6].intermediate_rxbuffer#g/[REP: 6].intermediate_rxbuffer#g	11	11
nc	119	[REP: 6].intermediate_rxbuffer#g/[REP: 6].intermediate_rxbuffer#g	11	11
nc	149	[REP: 6].intermediate_rxbuffer#g/[REP: 6].intermediate_rxbuffer#g	11	11
nc	20	[REP: 6].io_addr_requested#g/[REP: 6].io_addr_requested#g	11	11
nc	77	[REP: 6].io_addr_requested#g/[REP: 6].io_addr_requested#g	11	11
nc	120	[REP: 6].io_addr_requested#g/[REP: 6].io_addr_requested#g	11	11
nc	150	[REP: 6].io_addr_requested#g/[REP: 6].io_addr_requested#g	11	11
nc	21	[REP: 6].irq_requested#g/[REP: 6].irq_requested#g	11	11
nc	79	[REP: 6].irq_requested#g/[REP: 6].irq_requested#g	11	11
nc	121	[REP: 6].irq_requested#g/[REP: 6].irq_requested#g	11	11
nc	151	[REP: 6].irq_requested#g/[REP: 6].irq_requested#g	11	11
nc	22	[REP: 6].last_mem_alloc#g/[REP: 6].last_mem_alloc#g	11	11
nc	80	[REP: 6].last_mem_alloc#g/[REP: 6].last_mem_alloc#g	11	11
nc	23	[REP: 6].lcr_base#g/[REP: 6].lcr_base#g	11	11
nc	135	[REP: 6].lcr_base#g/[REP: 6].lcr_base#g	11	11
nc	122	[REP: 6].lcr_base#g/[REP: 6].lcr_base#g	11	11
nc	81	[REP: 6].lcr_base#g/[REP: 6].lcr_base#g	11	11
nc	152	[REP: 6].lcr_base#g/[REP: 6].lcr_base#g	11	11
nc	24	[REP: 6].lcr_mem_requested#g/[REP: 6].lcr_mem_requested#g	11	11
nc	82	[REP: 6].lcr_mem_requested#g/[REP: 6].lcr_mem_requested#g	11	11
nc	123	[REP: 6].lcr_mem_requested#g/[REP: 6].lcr_mem_requested#g	11	11
nc	153	[REP: 6].lcr_mem_requested#g/[REP: 6].lcr_mem_requested#g	11	11
nc	25	[REP: 6].link#g/[REP: 6].link#g	11	11
nc	83	[REP: 6].link#g/[REP: 6].link#g	11	11
nc	26	[REP: 6].low_latency#g/[REP: 6].low_latency#g	11	11
nc	27	[REP: 6].memory_base#g/[REP: 6].memory_base#g	11	11
nc	136	[REP: 6].memory_base#g/[REP: 6].memory_base#g	11	11
nc	124	[REP: 6].memory_base#g/[REP: 6].memory_base#g	11	11
nc	85	[REP: 6].memory_base#g/[REP: 6].memory_base#g	11	11
nc	154	[REP: 6].memory_base#g/[REP: 6].memory_base#g	11	11
nc	155	[REP: 6].next_device#g/[REP: 6].next_device#g	11	11
nc	1	[REP: 6].params#g/[REP: 6].params#g	11	11
nc	28	[REP: 6].params.data_bits#g/[REP: 6].params.data_bits#g	11	11
nc	86	[REP: 6].params.data_bits#g/[REP: 6].params.data_bits#g	11	11
nc	29	[REP: 6].params.data_rate#g/[REP: 6].params.data_rate#g	11	11
nc	87	[REP: 6].params.data_rate#g/[REP: 6].params.data_rate#g	11	11
nc	30	[REP: 6].params.parity#g/[REP: 6].params.parity#g	11	11
nc	89	[REP: 6].params.parity#g/[REP: 6].params.parity#g	11	11
nc	31	[REP: 6].params.stop_bits#g/[REP: 6].params.stop_bits#g	11	11
nc	90	[REP: 6].params.stop_bits#g/[REP: 6].params.stop_bits#g	11	11
nc	32	[REP: 6].pending_bh#g/[REP: 6].pending_bh#g	11	11
nc	91	[REP: 6].pending_bh#g/[REP: 6].pending_bh#g	11	11
nc	33	[REP: 6].phys_addr#g/[REP: 6].phys_addr#g	11	11
nc	34	[REP: 6].phys_entry#g/[REP: 6].phys_entry#g	11	11
nc	92	[REP: 6].phys_entry#g/[REP: 6].phys_entry#g	11	11
nc	156	[REP: 6].put_tx_holding_index#g/[REP: 6].put_tx_holding_index#g	11	11
nc	125	[REP: 6].put_tx_holding_index#g/[REP: 6].put_tx_holding_index#g	11	11
nc	93	[REP: 6].put_tx_holding_index#g/[REP: 6].put_tx_holding_index#g	11	11
nc	35	[REP: 6].put_tx_holding_index#g/[REP: 6].put_tx_holding_index#g	11	11
nc	94	[REP: 6].rcc#g/[REP: 6].rcc#g	11	11
nc	36	[REP: 6].rcc#g/[REP: 6].rcc#g	11	11
nc	37	[REP: 6].read_status_mask#g/[REP: 6].read_status_mask#g	11	11
nc	95	[REP: 6].read_status_mask#g/[REP: 6].read_status_mask#g	11	11
nc	38	[REP: 6].rx_buffer_count#g/[REP: 6].rx_buffer_count#g	11	11
nc	137	[REP: 6].rx_buffer_count#g/[REP: 6].rx_buffer_count#g	11	11
nc	96	[REP: 6].rx_buffer_count#g/[REP: 6].rx_buffer_count#g	11	11
nc	157	[REP: 6].rx_buffer_list#g/[REP: 6].rx_buffer_list#g	11	11
nc	97	[REP: 6].rx_buffer_list#g/[REP: 6].rx_buffer_list#g	11	11
nc	39	[REP: 6].rx_buffer_list#g/[REP: 6].rx_buffer_list#g	11	11
nc	126	[REP: 6].rx_buffer_list#g/[REP: 6].rx_buffer_list#g	11	11
nc	138	[REP: 6].rx_buffer_list#g/[REP: 6].rx_buffer_list#g	11	11
nc	98	[REP: 6].serial_signals#g/[REP: 6].serial_signals#g	11	11
nc	40	[REP: 6].serial_signals#g/[REP: 6].serial_signals#g	11	11
nc	41	[REP: 6].shared_mem_requested#g/[REP: 6].shared_mem_requested#g	11	11
nc	99	[REP: 6].shared_mem_requested#g/[REP: 6].shared_mem_requested#g	11	11
nc	127	[REP: 6].shared_mem_requested#g/[REP: 6].shared_mem_requested#g	11	11
nc	158	[REP: 6].shared_mem_requested#g/[REP: 6].shared_mem_requested#g	11	11
nc	42	[REP: 6].start_tx_dma_buffer#g/[REP: 6].start_tx_dma_buffer#g	11	11
nc	43	[REP: 6].status#g/[REP: 6].status#g	11	11
nc	100	[REP: 6].status#g/[REP: 6].status#g	11	11
nc	44	[REP: 6].timeout#g/[REP: 6].timeout#g	11	11
nc	101	[REP: 6].timeout#g/[REP: 6].timeout#g	11	11
nc	102	[REP: 6].tty#g/[REP: 6].tty#g	11	11
nc	45	[REP: 6].tty#g/[REP: 6].tty#g	11	11
nc	46	[REP: 6].tx_buffer_count#g/[REP: 6].tx_buffer_count#g	11	11
nc	139	[REP: 6].tx_buffer_count#g/[REP: 6].tx_buffer_count#g	11	11
nc	104	[REP: 6].tx_buffer_count#g/[REP: 6].tx_buffer_count#g	11	11
nc	47	[REP: 6].tx_buffer_list#g/[REP: 6].tx_buffer_list#g	11	11
nc	128	[REP: 6].tx_buffer_list#g/[REP: 6].tx_buffer_list#g	11	11
nc	140	[REP: 6].tx_buffer_list#g/[REP: 6].tx_buffer_list#g	11	11
nc	105	[REP: 6].tx_buffer_list#g/[REP: 6].tx_buffer_list#g	11	11
nc	159	[REP: 6].tx_buffer_list#g/[REP: 6].tx_buffer_list#g	11	11
nc	48	[REP: 6].tx_dma_buffers_used#g/[REP: 6].tx_dma_buffers_used#g	11	11
nc	106	[REP: 6].tx_dma_buffers_used#g/[REP: 6].tx_dma_buffers_used#g	11	11
nc	49	[REP: 6].tx_holding_buffers#g/[REP: 6].tx_holding_buffers#g	11	11
nc	50	[REP: 6].tx_holding_buffers[0].buffer#g/[REP: 6].tx_holding_buffers[0].buffer#g	11	11
nc	108	[REP: 6].tx_holding_buffers[0].buffer#g/[REP: 6].tx_holding_buffers[0].buffer#g	11	11
nc	141	[REP: 6].tx_holding_buffers[0].buffer#g/[REP: 6].tx_holding_buffers[0].buffer#g	11	11
nc	129	[REP: 6].tx_holding_buffers[0].buffer#g/[REP: 6].tx_holding_buffers[0].buffer#g	11	11
nc	160	[REP: 6].tx_holding_buffers[0].buffer#g/[REP: 6].tx_holding_buffers[0].buffer#g	11	11
nc	109	[REP: 6].tx_holding_buffers[0].buffer_size#g/[REP: 6].tx_holding_buffers[0].buffer_size#g	11	11
nc	51	[REP: 6].tx_holding_buffers[0].buffer_size#g/[REP: 6].tx_holding_buffers[0].buffer_size#g	11	11
nc	161	[REP: 6].tx_holding_count#g/[REP: 6].tx_holding_count#g	11	11
nc	130	[REP: 6].tx_holding_count#g/[REP: 6].tx_holding_count#g	11	11
nc	110	[REP: 6].tx_holding_count#g/[REP: 6].tx_holding_count#g	11	11
nc	52	[REP: 6].tx_holding_count#g/[REP: 6].tx_holding_count#g	11	11
nc	53	[REP: 6].tx_timer.base#g/[REP: 6].tx_timer.base#g	11	11
nc	54	[REP: 6].tx_timer.data#g/[REP: 6].tx_timer.data#g	11	11
nc	55	[REP: 6].tx_timer.function#g/[REP: 6].tx_timer.function#g	11	11
nc	56	[REP: 6].tx_timer.lock#g/[REP: 6].tx_timer.lock#g	11	11
nc	57	[REP: 6].tx_timer.magic#g/[REP: 6].tx_timer.magic#g	11	11
nc	58	[REP: 6].virt_addr#g/[REP: 6].virt_addr#g	11	11
nc	142	[REP: 6].virt_addr#g/[REP: 6].virt_addr#g	11	11
nc	131	[REP: 6].virt_addr#g/[REP: 6].virt_addr#g	11	11
nc	111	[REP: 6].virt_addr#g/[REP: 6].virt_addr#g	11	11
nc	162	[REP: 6].virt_addr#g/[REP: 6].virt_addr#g	11	11
nc	112	[REP: 6].x_char#g/[REP: 6].x_char#g	11	11
nc	59	[REP: 6].x_char#g/[REP: 6].x_char#g	11	11
nc	113	[REP: 6].xmit_buf#g/[REP: 6].xmit_buf#g	11	11
nc	60	[REP: 6].xmit_buf#g/[REP: 6].xmit_buf#g	11	11
nc	114	[REP: 6].xmit_cnt#g/[REP: 6].xmit_cnt#g	11	11
nc	61	[REP: 6].xmit_cnt#g/[REP: 6].xmit_cnt#g	11	11


writeState: writing new state for Andersen to /home/jan/research/relay-race/racetests/synclink/ciltrees/.pta_temp.anders

writeState: Not needed for Steens PTA
Elapsed time (secs): 0.880055
Top heap size (MB): 10
Current heap size (MB): 10
Lifetime allocated bytes (MB): 107
Collections -- minor: 61 major: 12 compactions: 1
Bytes per word: 4
Exhausted tries: 1
return value is 0
ran 1 times
cleared status file: /tmp/temp.EF8qSn
Tue Jan 19 22:01:02 PST 2010
