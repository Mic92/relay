Mon Oct 12 14:20:48 PDT 2009
reserved status file: /tmp/temp.gobW3w
running analysis on /home/jan/research/relay-race/racetests/synclink/ciltrees
Registered summary type: rs
Registered summary type: ss
Registered summary type: rss
Args: 
 ./race_anal.exe -cg /home/jan/research/relay-race/racetests/synclink/ciltrees -r -u jan -st /tmp/temp.gobW3w
Checking for data races
-----
Loading Cil Varinfo ID ranges for lookup tables
Setting Cil Varinfo ID ranges
Resizing VID/CKEY cache to: 12328
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: ENTRY_POINTS
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: SYM_EX
Done reading config file
myIP: 127.0.0.1
using /tmp/relay_scratch to store acquired files
using: /tmp/temp.gobW3w to track status
Initializing Andersen's AA info
Loading function info
Loading tempVar info
Using old PTA results: /home/jan/research/relay-race/racetests/synclink/ciltrees/.pta_temp.anders
Old PTA results loaded
Reached end of /home/jan/research/relay-race/racetests/synclink/ciltrees/calls.anders call graph file
Num funcs: 1087
summary database will use:
	/home/jan/research/relay-race/racetests/synclink/ciltrees/relay_sums
Initializing summary rss
Checking leftover state: rss
Initializing summary ss
Checking leftover state: ss
Initializing summary rs
Checking leftover state: rs
SH: initEscapeable found (0, 1) thread (acts, formals)

Entry points use roots: true
file server will use: 14440
trying to clear old summaries / local srcs, etc.
Scc_cg: Pruned 157 funcs w/out bodies for scc DAG
Starting bottomup analysis
-----
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #891
=================================
Summarizing function: clear_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:891 : 0.00068998336792
TIMES : FUN:165.f : 0.000674962997437
=================================
Finished an SCC (1)
=================================
Summary for function: clear_bit:165.f
=======

SUMS (nm, lo, un, wr, re):	clear_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 165.f : 34
>>> PROGRESS 1/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #0
=================================
Summarizing function: ptep_set_wrprotect : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:0 : 0.000941038131714
TIMES : FUN:3625.f : 0.000930786132812
=================================
Finished an SCC (1)
=================================
Summary for function: ptep_set_wrprotect:3625.f
=======

SUMS (nm, lo, un, wr, re):	ptep_set_wrprotect	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3625.f : 34
>>> PROGRESS 2/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #1
=================================
Summarizing function: nf_reset_debug : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4775.f : 0.00062108039856
TIMES : SCC:1 : 0.000631809234619
=================================
Finished an SCC (1)
=================================
Summary for function: nf_reset_debug:4775.f
=======

SUMS (nm, lo, un, wr, re):	nf_reset_debug	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4775.f : 34
>>> PROGRESS 3/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #2
=================================
Summarizing function: change_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:2 : 0.000643968582153
TIMES : FUN:174.f : 0.000633955001831
=================================
Finished an SCC (1)
=================================
Summary for function: change_bit:174.f
=======

SUMS (nm, lo, un, wr, re):	change_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 174.f : 34
>>> PROGRESS 4/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #3
=================================
Summarizing function: dname_external : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:3 : 0.000946998596191
TIMES : FUN:3049.f : 0.000937938690186
=================================
Finished an SCC (1)
=================================
Summary for function: dname_external:3049.f
=======

SUMS (nm, lo, un, wr, re):	dname_external	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )dentry->d_name.name != (unsigned int )(dentry->d_iname)
SIZES: 3049.f : 50503
>>> PROGRESS 5/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #929
=================================
Summarizing function: atomic_dec_and_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:929 : 0.000696182250977
TIMES : FUN:573.f : 0.000683069229126
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_dec_and_test:573.f
=======

SUMS (nm, lo, un, wr, re):	atomic_dec_and_test	0	0	0	0	

SS Sum:
 -> 
Vval: c != 0
SIZES: 573.f : 34
>>> PROGRESS 6/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #13
=================================
Summarizing function: nf_conntrack_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4768.f : 0.00115990638733
TIMES : SCC:13 : 0.00116991996765
=================================
Finished an SCC (1)
=================================
Summary for function: nf_conntrack_put:4768.f
=======

SUMS (nm, lo, un, wr, re):	nf_conntrack_put	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4768.f : 34
>>> PROGRESS 7/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #4
=================================
Summarizing function: nf_reset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:4 : 0.00103092193604
TIMES : FUN:4773.f : 0.00102281570435
=================================
Finished an SCC (1)
=================================
Summary for function: nf_reset:4773.f
=======

SUMS (nm, lo, un, wr, re):	nf_reset	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4773.f : 64210
>>> PROGRESS 8/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #795
=================================
Summarizing function: __hlist_del : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:795 : 0.000921964645386
TIMES : FUN:1385.f : 0.000900983810425
=================================
Finished an SCC (1)
=================================
Summary for function: __hlist_del:1385.f
=======

SUMS (nm, lo, un, wr, re):	__hlist_del	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1385.f : 258
>>> PROGRESS 9/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #785
=================================
Summarizing function: hlist_del_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:785 : 0.0010998249054
TIMES : FUN:1391.f : 0.00109100341797
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_del_rcu:1391.f
=======

SUMS (nm, lo, un, wr, re):	hlist_del_rcu	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1391.f : 210
>>> PROGRESS 10/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #9
=================================
Summarizing function: __d_drop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3045.f : 0.00111889839172
TIMES : SCC:9 : 0.00112891197205
=================================
Finished an SCC (1)
=================================
Summary for function: __d_drop:3045.f
=======

SUMS (nm, lo, un, wr, re):	__d_drop	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 3045.f : 50616
>>> PROGRESS 11/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #5
=================================
Summarizing function: d_drop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:5 : 0.00215196609497
TIMES : FUN:3047.f : 0.00214409828186
=================================
Finished an SCC (1)
=================================
Summary for function: d_drop:3047.f
=======

SUMS (nm, lo, un, wr, re):	d_drop	0	2	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 3047.f : 50644
>>> PROGRESS 12/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #6
=================================
Summarizing function: __change_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 5

doing lockset
doing guarded access
TIMES : FUN:171.f : 0.000637054443359
TIMES : SCC:6 : 0.000648975372314
=================================
Finished an SCC (1)
=================================
Summary for function: __change_bit:171.f
=======

SUMS (nm, lo, un, wr, re):	__change_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 171.f : 34
>>> PROGRESS 13/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #894
=================================
Summarizing function: atomic_inc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:894 : 0.000618934631348
TIMES : FUN:569.f : 0.000606060028076
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_inc:569.f
=======

SUMS (nm, lo, un, wr, re):	atomic_inc	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 569.f : 34
>>> PROGRESS 14/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #7
=================================
Summarizing function: nf_conntrack_get : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:7 : 0.000919103622437
TIMES : FUN:4771.f : 0.000908851623535
=================================
Finished an SCC (1)
=================================
Summary for function: nf_conntrack_get:4771.f
=======

SUMS (nm, lo, un, wr, re):	nf_conntrack_get	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4771.f : 34
>>> PROGRESS 15/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #8
=================================
Summarizing function: kmalloc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:8 : 0.00182604789734
TIMES : FUN:1895.f : 0.0018150806427
=================================
Finished an SCC (1)
=================================
Summary for function: kmalloc:1895.f
=======

SUMS (nm, lo, un, wr, re):	kmalloc	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1895.f : 316
>>> PROGRESS 16/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #109
=================================
Summarizing function: pte_young : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3545.f : 0.000614881515503
TIMES : SCC:109 : 0.000625848770142
=================================
Finished an SCC (1)
=================================
Summary for function: pte_young:3545.f
=======

SUMS (nm, lo, un, wr, re):	pte_young	0	0	0	0	

SS Sum:
 -> 
Vval: pte.pte_low & 32UL
SIZES: 3545.f : 34
>>> PROGRESS 17/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #881
=================================
Summarizing function: test_and_clear_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:881 : 0.000610828399658
TIMES : FUN:185.f : 0.000598907470703
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_clear_bit:185.f
=======

SUMS (nm, lo, un, wr, re):	test_and_clear_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 185.f : 34
>>> PROGRESS 18/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #10
=================================
Summarizing function: ptep_test_and_clear_young : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:10 : 0.00157809257507
TIMES : FUN:3619.f : 0.00156903266907
=================================
Finished an SCC (1)
=================================
Summary for function: ptep_test_and_clear_young:3619.f
=======

SUMS (nm, lo, un, wr, re):	ptep_test_and_clear_young	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3619.f : 99
>>> PROGRESS 19/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #11
=================================
Summarizing function: __clear_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:168.f : 0.000571012496948
TIMES : SCC:11 : 0.000581979751587
=================================
Finished an SCC (1)
=================================
Summary for function: __clear_bit:168.f
=======

SUMS (nm, lo, un, wr, re):	__clear_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 168.f : 34
>>> PROGRESS 20/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #322
=================================
Summarizing function: prefetch__extinline : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:322 : 0.000560998916626
TIMES : FUN:509.f : 0.000548839569092
=================================
Finished an SCC (1)
=================================
Summary for function: prefetch__extinline:509.f
=======

SUMS (nm, lo, un, wr, re):	prefetch__extinline	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 509.f : 34
>>> PROGRESS 21/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #12
=================================
Summarizing function: prefetch_range : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:12 : 0.00111699104309
TIMES : FUN:1318.f : 0.00110697746277
=================================
Finished an SCC (1)
=================================
Summary for function: prefetch_range:1318.f
=======

SUMS (nm, lo, un, wr, re):	prefetch_range	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1318.f : 34
>>> PROGRESS 22/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #23
=================================
Summarizing function: __cmsg_nxthdr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:23 : 0.000747203826904
TIMES : FUN:4184.f : 0.000736951828003
=================================
Finished an SCC (1)
=================================
Summary for function: __cmsg_nxthdr:4184.f
=======

SUMS (nm, lo, un, wr, re):	__cmsg_nxthdr	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*__cmsg)
  lval = (*$NULL)(sum)

SIZES: 4184.f : 217
>>> PROGRESS 23/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #14
=================================
Summarizing function: cmsg_nxthdr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4189.f : 0.0012059211731
TIMES : SCC:14 : 0.0012149810791
=================================
Finished an SCC (1)
=================================
Summary for function: cmsg_nxthdr:4189.f
=======

SUMS (nm, lo, un, wr, re):	cmsg_nxthdr	0	0	0	3	

SS Sum:
 -> 
Extptr (1):
  lval = (*__cmsg)
  lval = (*$NULL)(sum)

SIZES: 4189.f : 573
>>> PROGRESS 24/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #15
=================================
Summarizing function: get_cycles : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:738.f : 0.000598907470703
TIMES : SCC:15 : 0.000609159469604
=================================
Finished an SCC (1)
=================================
Summary for function: get_cycles:738.f
=======

SUMS (nm, lo, un, wr, re):	get_cycles	0	0	0	0	

SS Sum:
 -> 
Vval: 0ULL
SIZES: 738.f : 34
>>> PROGRESS 25/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #112
=================================
Summarizing function: pte_dirty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3543.f : 0.000591993331909
TIMES : SCC:112 : 0.000602006912231
=================================
Finished an SCC (1)
=================================
Summary for function: pte_dirty:3543.f
=======

SUMS (nm, lo, un, wr, re):	pte_dirty	0	0	0	0	

SS Sum:
 -> 
Vval: pte.pte_low & 64UL
SIZES: 3543.f : 34
>>> PROGRESS 26/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #16
=================================
Summarizing function: ptep_test_and_clear_dirty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:16 : 0.00167608261108
TIMES : FUN:3613.f : 0.00166487693787
=================================
Finished an SCC (1)
=================================
Summary for function: ptep_test_and_clear_dirty:3613.f
=======

SUMS (nm, lo, un, wr, re):	ptep_test_and_clear_dirty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3613.f : 99
>>> PROGRESS 27/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #17
=================================
Summarizing function: __set_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:17 : 0.000591993331909
TIMES : FUN:162.f : 0.000581026077271
=================================
Finished an SCC (1)
=================================
Summary for function: __set_bit:162.f
=======

SUMS (nm, lo, un, wr, re):	__set_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 162.f : 34
>>> PROGRESS 28/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #18
=================================
Summarizing function: account_user_vtime : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2462.f : 0.000617980957031
TIMES : SCC:18 : 0.000629186630249
=================================
Finished an SCC (1)
=================================
Summary for function: account_user_vtime:2462.f
=======

SUMS (nm, lo, un, wr, re):	account_user_vtime	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2462.f : 34
>>> PROGRESS 29/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #19
=================================
Summarizing function: __nodelist_parse : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1310.f : 0.00109004974365
TIMES : SCC:19 : 0.0010998249054
=================================
Finished an SCC (1)
=================================
Summary for function: __nodelist_parse:1310.f
=======

SUMS (nm, lo, un, wr, re):	__nodelist_parse	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1310.f : 34
>>> PROGRESS 30/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #24
=================================
Summarizing function: end_name_hash : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3033.f : 0.000592947006226
TIMES : SCC:24 : 0.000602006912231
=================================
Finished an SCC (1)
=================================
Summary for function: end_name_hash:3033.f
=======

SUMS (nm, lo, un, wr, re):	end_name_hash	0	0	0	0	

SS Sum:
 -> 
Vval: hash
SIZES: 3033.f : 34
>>> PROGRESS 31/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #26
=================================
Summarizing function: partial_name_hash : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3030.f : 0.000669002532959
TIMES : SCC:26 : 0.000680923461914
=================================
Finished an SCC (1)
=================================
Summary for function: partial_name_hash:3030.f
=======

SUMS (nm, lo, un, wr, re):	partial_name_hash	0	0	0	0	

SS Sum:
 -> 
Vval: ((prevhash + (c << 4)) + (c >> 4)) * 11UL
SIZES: 3030.f : 34
>>> PROGRESS 32/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #20
=================================
Summarizing function: full_name_hash : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:20 : 0.00188803672791
TIMES : FUN:3035.f : 0.00188016891479
=================================
Finished an SCC (1)
=================================
Summary for function: full_name_hash:3035.f
=======

SUMS (nm, lo, un, wr, re):	full_name_hash	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3035.f : 99
>>> PROGRESS 33/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #21
=================================
Summarizing function: set_normalized_timespec : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:734.f : 0.000997066497803
TIMES : SCC:21 : 0.00100708007812
=================================
Finished an SCC (1)
=================================
Summary for function: set_normalized_timespec:734.f
=======

SUMS (nm, lo, un, wr, re):	set_normalized_timespec	0	0	2	0	

SS Sum:
 -> 
$SSBOT
SIZES: 734.f : 219
>>> PROGRESS 34/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #22
=================================
Summarizing function: pfn_pmd : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:22 : 0.000684976577759
TIMES : FUN:3609.f : 0.000674962997437
=================================
Finished an SCC (1)
=================================
Summary for function: pfn_pmd:3609.f
=======

SUMS (nm, lo, un, wr, re):	pfn_pmd	0	0	0	1	

SS Sum:
 -> 
Struct:
  .pmd ->  $SSTOP

SIZES: 3609.f : 95
>>> PROGRESS 35/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #292
=================================
Summarizing function: skb_headlen : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:292 : 0.000838994979858
TIMES : FUN:4564.f : 0.000824928283691
=================================
Finished an SCC (1)
=================================
Summary for function: skb_headlen:4564.f
=======

SUMS (nm, lo, un, wr, re):	skb_headlen	0	0	0	2	

SS Sum:
 -> 
Vval: skb->len - skb->data_len
SIZES: 4564.f : 64134
>>> PROGRESS 36/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #25
=================================
Summarizing function: skb_header_pointer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4757.f : 0.00307011604309
TIMES : SCC:25 : 0.00307989120483
=================================
Finished an SCC (1)
=================================
Summary for function: skb_header_pointer:4757.f
=======

SUMS (nm, lo, un, wr, re):	skb_header_pointer	0	0	0	3	

SS Sum:
 -> 
Extptr (4):
  lval = (*buffer)
  lval = (*$NULL)(sum)
  lval = (*(skb->data))

SIZES: 4757.f : 64169
>>> PROGRESS 37/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #27
=================================
Summarizing function: pfn_pte : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:27 : 0.000721216201782
TIMES : FUN:3605.f : 0.000710964202881
=================================
Finished an SCC (1)
=================================
Summary for function: pfn_pte:3605.f
=======

SUMS (nm, lo, un, wr, re):	pfn_pte	0	0	0	1	

SS Sum:
 -> 
Struct:
  .pte_high ->  $SSTOP
  .pte_low ->  $SSTOP

SIZES: 3605.f : 112
>>> PROGRESS 38/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #28
=================================
Summarizing function: generic_ffs : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:153.f : 0.000730037689209
TIMES : SCC:28 : 0.000741004943848
=================================
Finished an SCC (1)
=================================
Summary for function: generic_ffs:153.f
=======

SUMS (nm, lo, un, wr, re):	generic_ffs	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 153.f : 34
>>> PROGRESS 39/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #29
=================================
Summarizing function: __nodelist_scnprintf : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1303.f : 0.00103998184204
TIMES : SCC:29 : 0.00104999542236
=================================
Finished an SCC (1)
=================================
Summary for function: __nodelist_scnprintf:1303.f
=======

SUMS (nm, lo, un, wr, re):	__nodelist_scnprintf	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1303.f : 34
>>> PROGRESS 40/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #30
=================================
Summarizing function: pte_pfn : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:30 : 0.00064492225647
TIMES : FUN:3603.f : 0.000634908676147
=================================
Finished an SCC (1)
=================================
Summary for function: pte_pfn:3603.f
=======

SUMS (nm, lo, un, wr, re):	pte_pfn	0	0	0	0	

SS Sum:
 -> 
Vval: (pte.pte_low >> 12) | (pte.pte_high << 20)
SIZES: 3603.f : 34
>>> PROGRESS 41/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #31
=================================
Summarizing function: iov_length : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:31 : 0.000820159912109
TIMES : FUN:4178.f : 0.000810861587524
=================================
Finished an SCC (1)
=================================
Summary for function: iov_length:4178.f
=======

SUMS (nm, lo, un, wr, re):	iov_length	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4178.f : 184
>>> PROGRESS 42/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #32
=================================
Summarizing function: ssleep : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:32 : 0.000937938690186
TIMES : FUN:4176.f : 0.000926971435547
=================================
Finished an SCC (1)
=================================
Summary for function: ssleep:4176.f
=======

SUMS (nm, lo, un, wr, re):	ssleep	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4176.f : 34
>>> PROGRESS 43/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #33
=================================
Summarizing function: pte_none : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3600.f : 0.000653982162476
TIMES : SCC:33 : 0.000663995742798
=================================
Finished an SCC (1)
=================================
Summary for function: pte_none:3600.f
=======

SUMS (nm, lo, un, wr, re):	pte_none	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3600.f : 34
>>> PROGRESS 44/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #34
=================================
Summarizing function: get_seconds : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:34 : 0.000601053237915
TIMES : FUN:721.f : 0.000590801239014
=================================
Finished an SCC (1)
=================================
Summary for function: get_seconds:721.f
=======

SUMS (nm, lo, un, wr, re):	get_seconds	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 721.f : 179
>>> PROGRESS 45/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #35
=================================
Summarizing function: __nodemask_parse : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:35 : 0.00109505653381
TIMES : FUN:1296.f : 0.00108504295349
=================================
Finished an SCC (1)
=================================
Summary for function: __nodemask_parse:1296.f
=======

SUMS (nm, lo, un, wr, re):	__nodemask_parse	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1296.f : 34
>>> PROGRESS 46/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #36
=================================
Summarizing function: pte_same : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:36 : 0.000653982162476
TIMES : FUN:3596.f : 0.000643014907837
=================================
Finished an SCC (1)
=================================
Summary for function: pte_same:3596.f
=======

SUMS (nm, lo, un, wr, re):	pte_same	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3596.f : 34
>>> PROGRESS 47/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #37
=================================
Summarizing function: alloc_pages_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1869.f : 0.00154900550842
TIMES : SCC:37 : 0.00155687332153
=================================
Finished an SCC (1)
=================================
Summary for function: alloc_pages_node:1869.f
=======

SUMS (nm, lo, un, wr, re):	alloc_pages_node	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1869.f : 34
>>> PROGRESS 48/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #38
=================================
Summarizing function: hw_resend_irq : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:38 : 0.00145506858826
TIMES : FUN:2444.f : 0.00144505500793
=================================
Finished an SCC (1)
=================================
Summary for function: hw_resend_irq:2444.f
=======

SUMS (nm, lo, un, wr, re):	hw_resend_irq	0	0	0	2	

SS Sum:
 -> 
$SSBOT
SIZES: 2444.f : 163
>>> PROGRESS 49/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #39
=================================
Summarizing function: kunmap_skb_frag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:39 : 0.0011031627655
TIMES : FUN:4744.f : 0.0010929107666
=================================
Finished an SCC (1)
=================================
Summary for function: kunmap_skb_frag:4744.f
=======

SUMS (nm, lo, un, wr, re):	kunmap_skb_frag	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4744.f : 34
>>> PROGRESS 50/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #40
=================================
Summarizing function: arch_free_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1865.f : 0.000557899475098
TIMES : SCC:40 : 0.000566959381104
=================================
Finished an SCC (1)
=================================
Summary for function: arch_free_page:1865.f
=======

SUMS (nm, lo, un, wr, re):	arch_free_page	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1865.f : 34
>>> PROGRESS 51/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #41
=================================
Summarizing function: __nodemask_scnprintf : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:41 : 0.00113296508789
TIMES : FUN:1289.f : 0.00112318992615
=================================
Finished an SCC (1)
=================================
Summary for function: __nodemask_scnprintf:1289.f
=======

SUMS (nm, lo, un, wr, re):	__nodemask_scnprintf	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1289.f : 34
>>> PROGRESS 52/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #73
=================================
Summarizing function: rcu_batch_before : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:73 : 0.000648975372314
TIMES : FUN:2992.f : 0.000638008117676
=================================
Finished an SCC (1)
=================================
Summary for function: rcu_batch_before:2992.f
=======

SUMS (nm, lo, un, wr, re):	rcu_batch_before	0	0	0	0	

SS Sum:
 -> 
Vval: a - b < 0L
SIZES: 2992.f : 34
>>> PROGRESS 53/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #48
=================================
Summarizing function: __rcu_pending : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:48 : 0.00132989883423
TIMES : FUN:3010.f : 0.00132083892822
=================================
Finished an SCC (1)
=================================
Summary for function: __rcu_pending:3010.f
=======

SUMS (nm, lo, un, wr, re):	__rcu_pending	0	0	0	8	

SS Sum:
 -> 
$SSTOP
SIZES: 3010.f : 840
>>> PROGRESS 54/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #42
=================================
Summarizing function: rcu_pending : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:42 : 0.00475811958313
TIMES : FUN:3014.f : 0.00475001335144
=================================
Finished an SCC (1)
=================================
Summary for function: rcu_pending:3014.f
=======

SUMS (nm, lo, un, wr, re):	rcu_pending	0	0	0	11	

SS Sum:
 -> 
$SSTOP
SIZES: 3014.f : 966
>>> PROGRESS 55/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #672
=================================
Summarizing function: __xchg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 16	misses: 2

doing lockset
doing guarded access
TIMES : SCC:672 : 0.000802993774414
TIMES : FUN:424.f : 0.000792026519775
=================================
Finished an SCC (1)
=================================
Summary for function: __xchg:424.f
=======

SUMS (nm, lo, un, wr, re):	__xchg	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 424.f : 34
>>> PROGRESS 56/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #43
=================================
Summarizing function: ptep_get_and_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:43 : 0.00131607055664
TIMES : FUN:3589.f : 0.00130581855774
=================================
Finished an SCC (1)
=================================
Summary for function: ptep_get_and_clear:3589.f
=======

SUMS (nm, lo, un, wr, re):	ptep_get_and_clear	0	0	1	1	

SS Sum:
 -> 
Struct:
  .pte_high ->  Vval: ptep->pte_high
  .pte_low ->  $SSTOP

SIZES: 3589.f : 202
>>> PROGRESS 57/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #44
=================================
Summarizing function: ptrace_unlink : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4163.f : 0.00140404701233
TIMES : SCC:44 : 0.00141501426697
=================================
Finished an SCC (1)
=================================
Summary for function: ptrace_unlink:4163.f
=======

SUMS (nm, lo, un, wr, re):	ptrace_unlink	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4163.f : 50524
>>> PROGRESS 58/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #45
=================================
Summarizing function: pud_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:45 : 0.000657081604004
TIMES : FUN:3587.f : 0.000647783279419
=================================
Finished an SCC (1)
=================================
Summary for function: pud_clear:3587.f
=======

SUMS (nm, lo, un, wr, re):	pud_clear	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3587.f : 34
>>> PROGRESS 59/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #46
=================================
Summarizing function: mktime : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:711.f : 0.000762939453125
TIMES : SCC:46 : 0.000771999359131
=================================
Finished an SCC (1)
=================================
Summary for function: mktime:711.f
=======

SUMS (nm, lo, un, wr, re):	mktime	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 711.f : 34
>>> PROGRESS 60/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #837
=================================
Summarizing function: current_thread_info : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:837 : 0.000685930252075
TIMES : FUN:515.f : 0.000673055648804
=================================
Finished an SCC (1)
=================================
Summary for function: current_thread_info:515.f
=======

SUMS (nm, lo, un, wr, re):	current_thread_info	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*ti)

SIZES: 515.f : 34
>>> PROGRESS 61/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #47
=================================
Summarizing function: kmap_skb_frag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4736.f : 0.00634407997131
TIMES : SCC:47 : 0.00635290145874
=================================
Finished an SCC (1)
=================================
Summary for function: kmap_skb_frag:4736.f
=======

SUMS (nm, lo, un, wr, re):	kmap_skb_frag	0	0	1	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4736.f : 50696
>>> PROGRESS 62/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #899
=================================
Summarizing function: num_free_tx_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:899 : 0.000843048095703
TIMES : FUN:5122.f : 0.000830888748169
=================================
Finished an SCC (1)
=================================
Summary for function: num_free_tx_dma_buffers:5122.f
=======

SUMS (nm, lo, un, wr, re):	num_free_tx_dma_buffers	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 5122.f : 55785
>>> PROGRESS 63/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #902
=================================
Summarizing function: __constant_memcpy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:902 : 0.00173997879028
TIMES : FUN:907.f : 0.00172710418701
=================================
Finished an SCC (1)
=================================
Summary for function: __constant_memcpy:907.f
=======

SUMS (nm, lo, un, wr, re):	__constant_memcpy	0	0	1	1	

SS Sum:
 -> 
Extptr (24):
  lval = (*to)

SIZES: 907.f : 378
>>> PROGRESS 64/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #922
=================================
Summarizing function: __memcpy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:922 : 0.000688076019287
TIMES : FUN:900.f : 0.000674962997437
=================================
Finished an SCC (1)
=================================
Summary for function: __memcpy:900.f
=======

SUMS (nm, lo, un, wr, re):	__memcpy	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*to)

SIZES: 900.f : 34
>>> PROGRESS 65/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #901
=================================
Summarizing function: mgsl_load_pci_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:5124.f : 0.00148701667786
TIMES : SCC:901 : 0.00149703025818
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_load_pci_memory:5124.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_load_pci_memory	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 5124.f : 430
>>> PROGRESS 66/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #903
=================================
Summarizing function: mgsl_trace_block : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : SCC:903 : 0.0025360584259
TIMES : FUN:5107.f : 0.00252294540405
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_trace_block:5107.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_trace_block	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5107.f : 150
>>> PROGRESS 67/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #900
=================================
Summarizing function: mgsl_load_tx_dma_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5123.f : 0.0027768611908
TIMES : SCC:900 : 0.00278997421265
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_load_tx_dma_buffer:5123.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_load_tx_dma_buffer	0	0	9	11	

SS Sum:
 -> 
$SSBOT
SIZES: 5123.f : 56761
>>> PROGRESS 68/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #921
=================================
Summarizing function: jiffies_to_msecs : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 1

doing lockset
doing guarded access
TIMES : SCC:921 : 0.000687122344971
TIMES : FUN:775.f : 0.000674962997437
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_msecs:775.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_msecs	0	0	0	0	

SS Sum:
 -> 
Vval: j
SIZES: 775.f : 34
>>> PROGRESS 69/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #920
=================================
Summarizing function: msecs_to_jiffies : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:920 : 0.00110793113708
TIMES : FUN:779.f : 0.00109791755676
=================================
Finished an SCC (1)
=================================
Summary for function: msecs_to_jiffies:779.f
=======

SUMS (nm, lo, un, wr, re):	msecs_to_jiffies	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 779.f : 34
>>> PROGRESS 70/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #898
=================================
Summarizing function: load_next_tx_holding_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:898 : 0.00438404083252
TIMES : FUN:5135.f : 0.00437307357788
=================================
Finished an SCC (1)
=================================
Summary for function: load_next_tx_holding_buffer:5135.f
=======

SUMS (nm, lo, un, wr, re):	load_next_tx_holding_buffer	0	0	12	17	

SS Sum:
 -> 
$SSTOP
SIZES: 5135.f : 57186
>>> PROGRESS 71/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #916
=================================
Summarizing function: inw_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 24	misses: 2

doing lockset
doing guarded access
TIMES : FUN:2854.f : 0.000724077224731
TIMES : SCC:916 : 0.000734090805054
=================================
Finished an SCC (1)
=================================
Summary for function: inw_local:2854.f
=======

SUMS (nm, lo, un, wr, re):	inw_local	0	0	0	0	

SS Sum:
 -> 
Vval: value
SIZES: 2854.f : 34
>>> PROGRESS 72/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #915
=================================
Summarizing function: inw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:915 : 0.00124883651733
TIMES : FUN:2868.f : 0.00123596191406
=================================
Finished an SCC (1)
=================================
Summary for function: inw:2868.f
=======

SUMS (nm, lo, un, wr, re):	inw	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2868.f : 34
>>> PROGRESS 73/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #918
=================================
Summarizing function: outw_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:918 : 0.000638008117676
TIMES : FUN:2851.f : 0.000627040863037
=================================
Finished an SCC (1)
=================================
Summary for function: outw_local:2851.f
=======

SUMS (nm, lo, un, wr, re):	outw_local	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2851.f : 34
>>> PROGRESS 74/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #917
=================================
Summarizing function: outw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:917 : 0.000899791717529
TIMES : FUN:2865.f : 0.000888824462891
=================================
Finished an SCC (1)
=================================
Summary for function: outw:2865.f
=======

SUMS (nm, lo, un, wr, re):	outw	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2865.f : 34
>>> PROGRESS 75/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #913
=================================
Summarizing function: usc_OutDmaReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:913 : 0.00125908851624
TIMES : FUN:5077.f : 0.0012469291687
=================================
Finished an SCC (1)
=================================
Summary for function: usc_OutDmaReg:5077.f
=======

SUMS (nm, lo, un, wr, re):	usc_OutDmaReg	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5077.f : 55679
>>> PROGRESS 76/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #914
=================================
Summarizing function: usc_InDmaReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:914 : 0.00141191482544
TIMES : FUN:5076.f : 0.00139904022217
=================================
Finished an SCC (1)
=================================
Summary for function: usc_InDmaReg:5076.f
=======

SUMS (nm, lo, un, wr, re):	usc_InDmaReg	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 5076.f : 55621
>>> PROGRESS 77/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #272
=================================
Summarizing function: mgsl_isr_transmit_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5149.f : 0.00891804695129
TIMES : SCC:272 : 0.00892806053162
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_transmit_dma:5149.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_transmit_dma	0	0	13	20	

SS Sum:
 -> 
$SSBOT
SIZES: 5149.f : 57513
>>> PROGRESS 78/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #273
=================================
Summarizing function: mgsl_isr_receive_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 36	misses: 2

doing lockset
doing guarded access
TIMES : SCC:273 : 0.00377202033997
TIMES : FUN:5148.f : 0.00376081466675
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_receive_dma:5148.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_receive_dma	0	0	3	6	

SS Sum:
 -> 
$SSBOT
SIZES: 5148.f : 55969
>>> PROGRESS 79/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #910
=================================
Summarizing function: usc_OutReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

doing lockset
doing guarded access
TIMES : SCC:910 : 0.0012629032135
TIMES : FUN:5080.f : 0.00125002861023
=================================
Finished an SCC (1)
=================================
Summary for function: usc_OutReg:5080.f
=======

SUMS (nm, lo, un, wr, re):	usc_OutReg	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5080.f : 55640
>>> PROGRESS 80/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #911
=================================
Summarizing function: usc_InReg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5079.f : 0.00383710861206
TIMES : SCC:911 : 0.00385189056396
=================================
Finished an SCC (1)
=================================
Summary for function: usc_InReg:5079.f
=======

SUMS (nm, lo, un, wr, re):	usc_InReg	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 5079.f : 55582
>>> PROGRESS 81/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #912
=================================
Summarizing function: usc_DmaCmd : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:912 : 0.00122499465942
TIMES : FUN:5078.f : 0.00121307373047
=================================
Finished an SCC (1)
=================================
Summary for function: usc_DmaCmd:5078.f
=======

SUMS (nm, lo, un, wr, re):	usc_DmaCmd	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5078.f : 55622
>>> PROGRESS 82/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #276
=================================
Summarizing function: mgsl_isr_misc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:276 : 0.00539994239807
TIMES : FUN:5147.f : 0.00538897514343
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_misc:5147.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_misc	0	0	2	7	

SS Sum:
 -> 
$SSBOT
SIZES: 5147.f : 55984
>>> PROGRESS 83/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #909
=================================
Summarizing function: usc_RTCmd : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 36	misses: 2

doing lockset
doing guarded access
TIMES : SCC:909 : 0.00118899345398
TIMES : FUN:5081.f : 0.00117778778076
=================================
Finished an SCC (1)
=================================
Summary for function: usc_RTCmd:5081.f
=======

SUMS (nm, lo, un, wr, re):	usc_RTCmd	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5081.f : 55604
>>> PROGRESS 84/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #592
=================================
Summarizing function: usc_stop_transmitter : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5088.f : 0.00830912590027
TIMES : SCC:592 : 0.00831913948059
=================================
Finished an SCC (1)
=================================
Summary for function: usc_stop_transmitter:5088.f
=======

SUMS (nm, lo, un, wr, re):	usc_stop_transmitter	0	0	2	6	

SS Sum:
 -> 
$SSBOT
SIZES: 5088.f : 56012
>>> PROGRESS 85/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #906
=================================
Summarizing function: usc_set_serial_signals : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 30	misses: 2

doing lockset
doing guarded access
TIMES : SCC:906 : 0.00330591201782
TIMES : FUN:5094.f : 0.00329399108887
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_serial_signals:5094.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_serial_signals	0	0	0	4	

SS Sum:
 -> 
$SSBOT
SIZES: 5094.f : 55710
>>> PROGRESS 86/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #907
=================================
Summarizing function: usc_get_serial_signals : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5093.f : 0.00236201286316
TIMES : SCC:907 : 0.0023729801178
=================================
Finished an SCC (1)
=================================
Summary for function: usc_get_serial_signals:5093.f
=======

SUMS (nm, lo, un, wr, re):	usc_get_serial_signals	0	0	1	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5093.f : 55717
>>> PROGRESS 87/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #908
=================================
Summarizing function: usc_load_txfifo : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5090.f : 0.00486993789673
TIMES : SCC:908 : 0.00488591194153
=================================
Finished an SCC (1)
=================================
Summary for function: usc_load_txfifo:5090.f
=======

SUMS (nm, lo, un, wr, re):	usc_load_txfifo	0	0	5	10	

SS Sum:
 -> 
$SSBOT
SIZES: 5090.f : 56579
>>> PROGRESS 88/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #919
=================================
Summarizing function: add_timer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 12	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1960.f : 0.000911951065063
TIMES : SCC:919 : 0.000921964645386
=================================
Finished an SCC (1)
=================================
Summary for function: add_timer:1960.f
=======

SUMS (nm, lo, un, wr, re):	add_timer	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1960.f : 483
>>> PROGRESS 89/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #905
=================================
Summarizing function: usc_start_transmitter : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5087.f : 0.0196299552917
TIMES : SCC:905 : 0.0196409225464
=================================
Finished an SCC (1)
=================================
Summary for function: usc_start_transmitter:5087.f
=======

SUMS (nm, lo, un, wr, re):	usc_start_transmitter	0	0	11	22	

SS Sum:
 -> 
$SSBOT
SIZES: 5087.f : 57961
>>> PROGRESS 90/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #278
=================================
Summarizing function: mgsl_isr_io_pin : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 111	misses: 2

doing lockset
doing guarded access
TIMES : SCC:278 : 0.0130429267883
TIMES : FUN:5146.f : 0.0130310058594
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_io_pin:5146.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_io_pin	0	0	30	42	

SS Sum:
 -> 
$SSBOT
SIZES: 5146.f : 59579
>>> PROGRESS 91/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #282
=================================
Summarizing function: mgsl_isr_transmit_status : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 100	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5145.f : 0.0219640731812
TIMES : SCC:282 : 0.0219750404358
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_transmit_status:5145.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_transmit_status	0	0	11	16	

SS Sum:
 -> 
$SSBOT
SIZES: 5145.f : 56749
>>> PROGRESS 92/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #594
=================================
Summarizing function: mgsl_reset_rx_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 47	misses: 2

doing lockset
doing guarded access
TIMES : SCC:594 : 0.00092887878418
TIMES : FUN:5120.f : 0.000916004180908
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_reset_rx_dma_buffers:5120.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_reset_rx_dma_buffers	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5120.f : 55215
>>> PROGRESS 93/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #363
=================================
Summarizing function: usc_process_rxoverrun_sync : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:363 : 0.00968194007874
TIMES : FUN:5084.f : 0.00967001914978
=================================
Finished an SCC (1)
=================================
Summary for function: usc_process_rxoverrun_sync:5084.f
=======

SUMS (nm, lo, un, wr, re):	usc_process_rxoverrun_sync	0	0	3	11	

SS Sum:
 -> 
$SSBOT
SIZES: 5084.f : 56110
>>> PROGRESS 94/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #904
=================================
Summarizing function: usc_loopmode_active : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 103	misses: 2

doing lockset
doing guarded access
TIMES : SCC:904 : 0.00178003311157
TIMES : FUN:5104.f : 0.00176906585693
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_active:5104.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_active	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 5104.f : 55202
>>> PROGRESS 95/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #283
=================================
Summarizing function: mgsl_isr_receive_status : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:283 : 0.123996973038
TIMES : FUN:5144.f : 0.123980998993
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_receive_status:5144.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_receive_status	0	0	9	18	

SS Sum:
 -> 
$SSBOT
SIZES: 5144.f : 167099
>>> PROGRESS 96/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #472
=================================
Summarizing function: inb_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 40	misses: 2

doing lockset
doing guarded access
TIMES : SCC:472 : 0.000753164291382
TIMES : FUN:2818.f : 0.000741958618164
=================================
Finished an SCC (1)
=================================
Summary for function: inb_local:2818.f
=======

SUMS (nm, lo, un, wr, re):	inb_local	0	0	0	0	

SS Sum:
 -> 
Vval: value
SIZES: 2818.f : 34
>>> PROGRESS 97/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #471
=================================
Summarizing function: inb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2832.f : 0.00105595588684
TIMES : SCC:471 : 0.00106501579285
=================================
Finished an SCC (1)
=================================
Summary for function: inb:2832.f
=======

SUMS (nm, lo, un, wr, re):	inb	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2832.f : 34
>>> PROGRESS 98/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #285
=================================
Summarizing function: mgsl_isr_receive_data : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:285 : 0.0136668682098
TIMES : FUN:5143.f : 0.0136568546295
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_receive_data:5143.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_receive_data	0	0	10	16	

SS Sum:
 -> 
$SSBOT
SIZES: 5143.f : 111943
>>> PROGRESS 99/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #287
=================================
Summarizing function: mgsl_isr_transmit_data : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 36	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5142.f : 0.00417709350586
TIMES : SCC:287 : 0.00418710708618
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_transmit_data:5142.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_transmit_data	0	0	8	15	

SS Sum:
 -> 
$SSBOT
SIZES: 5142.f : 222975
>>> PROGRESS 100/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #289
=================================
Summarizing function: mgsl_isr_null : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 37	misses: 2

doing lockset
doing guarded access
TIMES : SCC:289 : 0.000668048858643
TIMES : FUN:5141.f : 0.000655174255371
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_isr_null:5141.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_isr_null	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 5141.f : 34
>>> PROGRESS 101/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #49
=================================
Summarizing function: mgsl_interrupt : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:49 : 0.0348570346832
TIMES : FUN:5310.f : 0.0348460674286
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_interrupt:5310.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_interrupt	0	1	66	86	

SS Sum:
 -> 
$SSTOP
SIZES: 5310.f : 619093
>>> PROGRESS 102/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #50
=================================
Summarizing function: is_normal : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 258	misses: 5

doing lockset
doing guarded access
TIMES : SCC:50 : 0.000910043716431
TIMES : FUN:1859.f : 0.000900030136108
=================================
Finished an SCC (1)
=================================
Summary for function: is_normal:1859.f
=======

SUMS (nm, lo, un, wr, re):	is_normal	0	0	0	0	

SS Sum:
 -> 
Vval: (unsigned int )zone == (unsigned int )((zone->zone_pgdat)->node_zones + 1)
SIZES: 1859.f : 34
>>> PROGRESS 103/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #51
=================================
Summarizing function: set_pte : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3584.f : 0.000768899917603
TIMES : SCC:51 : 0.000777959823608
=================================
Finished an SCC (1)
=================================
Summary for function: set_pte:3584.f
=======

SUMS (nm, lo, un, wr, re):	set_pte	0	0	2	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3584.f : 202
>>> PROGRESS 104/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #52
=================================
Summarizing function: ptrace_link : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:52 : 0.00131797790527
TIMES : FUN:4159.f : 0.00130605697632
=================================
Finished an SCC (1)
=================================
Summary for function: ptrace_link:4159.f
=======

SUMS (nm, lo, un, wr, re):	ptrace_link	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4159.f : 50460
>>> PROGRESS 105/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #53
=================================
Summarizing function: timespec_equal : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:53 : 0.000906944274902
TIMES : FUN:707.f : 0.000895977020264
=================================
Finished an SCC (1)
=================================
Summary for function: timespec_equal:707.f
=======

SUMS (nm, lo, un, wr, re):	timespec_equal	0	0	0	4	

SS Sum:
 -> 
$SSTOP
SIZES: 707.f : 278
>>> PROGRESS 106/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #842
=================================
Summarizing function: find_first_zero_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:842 : 0.000601053237915
TIMES : FUN:208.f : 0.000590085983276
=================================
Finished an SCC (1)
=================================
Summary for function: find_first_zero_bit:208.f
=======

SUMS (nm, lo, un, wr, re):	find_first_zero_bit	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 208.f : 34
>>> PROGRESS 107/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #54
=================================
Summarizing function: __first_unset_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:54 : 0.00107383728027
TIMES : FUN:1282.f : 0.00106501579285
=================================
Finished an SCC (1)
=================================
Summary for function: __first_unset_node:1282.f
=======

SUMS (nm, lo, un, wr, re):	__first_unset_node	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1282.f : 34
>>> PROGRESS 108/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #55
=================================
Summarizing function: is_highmem : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1857.f : 0.000925064086914
TIMES : SCC:55 : 0.000935077667236
=================================
Finished an SCC (1)
=================================
Summary for function: is_highmem:1857.f
=======

SUMS (nm, lo, un, wr, re):	is_highmem	0	0	0	0	

SS Sum:
 -> 
Vval: (unsigned int )zone == (unsigned int )((zone->zone_pgdat)->node_zones + 2)
SIZES: 1857.f : 34
>>> PROGRESS 109/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #164
=================================
Summarizing function: __pskb_trim : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:164 : 0.00129199028015
TIMES : FUN:4653.f : 0.00128102302551
=================================
Finished an SCC (1)
=================================
Summary for function: __pskb_trim:4653.f
=======

SUMS (nm, lo, un, wr, re):	__pskb_trim	0	0	2	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4653.f : 64107
>>> PROGRESS 110/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #56
=================================
Summarizing function: pskb_trim_rcsum : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:56 : 0.00369501113892
TIMES : FUN:4732.f : 0.00368499755859
=================================
Finished an SCC (1)
=================================
Summary for function: pskb_trim_rcsum:4732.f
=======

SUMS (nm, lo, un, wr, re):	pskb_trim_rcsum	0	0	3	4	

SS Sum:
 -> 
$SSTOP
SIZES: 4732.f : 64207
>>> PROGRESS 111/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #57
=================================
Summarizing function: rcu_bh_qsctr_inc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:57 : 0.000768899917603
TIMES : FUN:3006.f : 0.000759840011597
=================================
Finished an SCC (1)
=================================
Summary for function: rcu_bh_qsctr_inc:3006.f
=======

SUMS (nm, lo, un, wr, re):	rcu_bh_qsctr_inc	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3006.f : 519
>>> PROGRESS 112/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #66
=================================
Summarizing function: pte_x : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3574.f : 0.000575065612793
TIMES : SCC:66 : 0.000584840774536
=================================
Finished an SCC (1)
=================================
Summary for function: pte_x:3574.f
=======

SUMS (nm, lo, un, wr, re):	pte_x	0	0	0	0	

SS Sum:
 -> 
Vval: ! ((pte.pte_low | (pte.pte_high << 32)) & 0x8000000000000000ULL) != 0
SIZES: 3574.f : 34
>>> PROGRESS 113/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #58
=================================
Summarizing function: pte_exec_kernel : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:58 : 0.00106287002563
TIMES : FUN:3581.f : 0.00105500221252
=================================
Finished an SCC (1)
=================================
Summary for function: pte_exec_kernel:3581.f
=======

SUMS (nm, lo, un, wr, re):	pte_exec_kernel	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3581.f : 34
>>> PROGRESS 114/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #59
=================================
Summarizing function: is_normal_idx : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1855.f : 0.000550985336304
TIMES : SCC:59 : 0.00055980682373
=================================
Finished an SCC (1)
=================================
Summary for function: is_normal_idx:1855.f
=======

SUMS (nm, lo, un, wr, re):	is_normal_idx	0	0	0	0	

SS Sum:
 -> 
Vval: idx == 1
SIZES: 1855.f : 34
>>> PROGRESS 115/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #60
=================================
Summarizing function: is_highmem_idx : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1853.f : 0.000545978546143
TIMES : SCC:60 : 0.000555038452148
=================================
Finished an SCC (1)
=================================
Summary for function: is_highmem_idx:1853.f
=======

SUMS (nm, lo, un, wr, re):	is_highmem_idx	0	0	0	0	

SS Sum:
 -> 
Vval: idx == 2
SIZES: 1853.f : 34
>>> PROGRESS 116/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #61
=================================
Summarizing function: rcu_qsctr_inc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:61 : 0.000748872756958
TIMES : FUN:3002.f : 0.000738143920898
=================================
Finished an SCC (1)
=================================
Summary for function: rcu_qsctr_inc:3002.f
=======

SUMS (nm, lo, un, wr, re):	rcu_qsctr_inc	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3002.f : 519
>>> PROGRESS 117/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #115
=================================
Summarizing function: pte_user : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:115 : 0.00062894821167
TIMES : FUN:3541.f : 0.000618934631348
=================================
Finished an SCC (1)
=================================
Summary for function: pte_user:3541.f
=======

SUMS (nm, lo, un, wr, re):	pte_user	0	0	0	0	

SS Sum:
 -> 
Vval: pte.pte_low & 4UL
SIZES: 3541.f : 34
>>> PROGRESS 118/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #62
=================================
Summarizing function: pte_exec : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3576.f : 0.00156807899475
TIMES : SCC:62 : 0.00157713890076
=================================
Finished an SCC (1)
=================================
Summary for function: pte_exec:3576.f
=======

SUMS (nm, lo, un, wr, re):	pte_exec	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3576.f : 34
>>> PROGRESS 119/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #442
=================================
Summarizing function: csum_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4447.f : 0.000662088394165
TIMES : SCC:442 : 0.00067400932312
=================================
Finished an SCC (1)
=================================
Summary for function: csum_add:4447.f
=======

SUMS (nm, lo, un, wr, re):	csum_add	0	0	0	0	

SS Sum:
 -> 
Vval: (csum + addend) + (csum + addend < addend)
SIZES: 4447.f : 34
>>> PROGRESS 120/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #440
=================================
Summarizing function: csum_sub : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:440 : 0.00102591514587
TIMES : FUN:4450.f : 0.00101494789124
=================================
Finished an SCC (1)
=================================
Summary for function: csum_sub:4450.f
=======

SUMS (nm, lo, un, wr, re):	csum_sub	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4450.f : 34
>>> PROGRESS 121/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #63
=================================
Summarizing function: skb_postpull_rcsum : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:63 : 0.00175499916077
TIMES : FUN:4726.f : 0.00174498558044
=================================
Finished an SCC (1)
=================================
Summary for function: skb_postpull_rcsum:4726.f
=======

SUMS (nm, lo, un, wr, re):	skb_postpull_rcsum	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4726.f : 64042
>>> PROGRESS 122/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #64
=================================
Summarizing function: __next_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:64 : 0.0010929107666
TIMES : FUN:1275.f : 0.00108218193054
=================================
Finished an SCC (1)
=================================
Summary for function: __next_node:1275.f
=======

SUMS (nm, lo, un, wr, re):	__next_node	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1275.f : 34
>>> PROGRESS 123/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #65
=================================
Summarizing function: next_zone : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1850.f : 0.000854969024658
TIMES : SCC:65 : 0.000863075256348
=================================
Finished an SCC (1)
=================================
Summary for function: next_zone:1850.f
=======

SUMS (nm, lo, un, wr, re):	next_zone	0	0	0	2	

SS Sum:
 -> 
Extptr (4):
  lval = (*zone)
  lval = (*(zone->zone_pgdat)).node_zones

SIZES: 1850.f : 52548
>>> PROGRESS 124/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #67
=================================
Summarizing function: memory_present : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:67 : 0.000581979751587
TIMES : FUN:1846.f : 0.000571966171265
=================================
Finished an SCC (1)
=================================
Summary for function: memory_present:1846.f
=======

SUMS (nm, lo, un, wr, re):	memory_present	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1846.f : 34
>>> PROGRESS 125/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #68
=================================
Summarizing function: skb_linearize : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:68 : 0.00122094154358
TIMES : FUN:4721.f : 0.00121116638184
=================================
Finished an SCC (1)
=================================
Summary for function: skb_linearize:4721.f
=======

SUMS (nm, lo, un, wr, re):	skb_linearize	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4721.f : 34
>>> PROGRESS 126/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #69
=================================
Summarizing function: rcu_batch_after : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:69 : 0.00059700012207
TIMES : FUN:2995.f : 0.000586986541748
=================================
Finished an SCC (1)
=================================
Summary for function: rcu_batch_after:2995.f
=======

SUMS (nm, lo, un, wr, re):	rcu_batch_after	0	0	0	0	

SS Sum:
 -> 
Vval: a - b > 0L
SIZES: 2995.f : 34
>>> PROGRESS 127/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #70
=================================
Summarizing function: read_seqretry : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:70 : 0.000893115997314
TIMES : FUN:694.f : 0.000882863998413
=================================
Finished an SCC (1)
=================================
Summary for function: read_seqretry:694.f
=======

SUMS (nm, lo, un, wr, re):	read_seqretry	0	0	0	1	

SS Sum:
 -> 
Vval: (iv & 1U) | (sl->sequence ^ iv)
SIZES: 694.f : 260
>>> PROGRESS 128/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #71
=================================
Summarizing function: pgd_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3569.f : 0.000536918640137
TIMES : SCC:71 : 0.000548124313354
=================================
Finished an SCC (1)
=================================
Summary for function: pgd_clear:3569.f
=======

SUMS (nm, lo, un, wr, re):	pgd_clear	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3569.f : 34
>>> PROGRESS 129/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #824
=================================
Summarizing function: find_first_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:216.f : 0.000554084777832
TIMES : SCC:824 : 0.000565052032471
=================================
Finished an SCC (1)
=================================
Summary for function: find_first_bit:216.f
=======

SUMS (nm, lo, un, wr, re):	find_first_bit	0	0	0	0	

SS Sum:
 -> 
Vval: res
SIZES: 216.f : 34
>>> PROGRESS 130/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #72
=================================
Summarizing function: __first_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:72 : 0.00113320350647
TIMES : FUN:1268.f : 0.00112414360046
=================================
Finished an SCC (1)
=================================
Summary for function: __first_node:1268.f
=======

SUMS (nm, lo, un, wr, re):	__first_node	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1268.f : 34
>>> PROGRESS 131/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #74
=================================
Summarizing function: pgd_present : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:74 : 0.000684976577759
TIMES : FUN:3567.f : 0.00067400932312
=================================
Finished an SCC (1)
=================================
Summary for function: pgd_present:3567.f
=======

SUMS (nm, lo, un, wr, re):	pgd_present	0	0	0	0	

SS Sum:
 -> 
Vval: 1
SIZES: 3567.f : 34
>>> PROGRESS 132/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #75
=================================
Summarizing function: read_seqbegin : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:75 : 0.000769138336182
TIMES : FUN:691.f : 0.000759840011597
=================================
Finished an SCC (1)
=================================
Summary for function: read_seqbegin:691.f
=======

SUMS (nm, lo, un, wr, re):	read_seqbegin	0	0	0	1	

SS Sum:
 -> 
Vval: sl->sequence
SIZES: 691.f : 260
>>> PROGRESS 133/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #76
=================================
Summarizing function: tty_schedule_flip : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4141.f : 0.000808000564575
TIMES : SCC:76 : 0.000818014144897
=================================
Finished an SCC (1)
=================================
Summary for function: tty_schedule_flip:4141.f
=======

SUMS (nm, lo, un, wr, re):	tty_schedule_flip	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4141.f : 34
>>> PROGRESS 134/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #77
=================================
Summarizing function: sysv_minor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2990.f : 0.000556945800781
TIMES : SCC:77 : 0.000565052032471
=================================
Finished an SCC (1)
=================================
Summary for function: sysv_minor:2990.f
=======

SUMS (nm, lo, un, wr, re):	sysv_minor	0	0	0	0	

SS Sum:
 -> 
Vval: dev & 262143U
SIZES: 2990.f : 34
>>> PROGRESS 135/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #359
=================================
Summarizing function: bitmap_shift_left : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:359 : 0.00105118751526
TIMES : FUN:1060.f : 0.00103998184204
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_shift_left:1060.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_shift_left	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1060.f : 128
>>> PROGRESS 136/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #78
=================================
Summarizing function: __nodes_shift_left : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:78 : 0.000943183898926
TIMES : FUN:1263.f : 0.00093412399292
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_shift_left:1263.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_shift_left	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1263.f : 218
>>> PROGRESS 137/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #79
=================================
Summarizing function: sysv_major : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:79 : 0.000622034072876
TIMES : FUN:2988.f : 0.000613212585449
=================================
Finished an SCC (1)
=================================
Summary for function: sysv_major:2988.f
=======

SUMS (nm, lo, un, wr, re):	sysv_major	0	0	0	0	

SS Sum:
 -> 
Vval: (dev >> 18) & 16383U
SIZES: 2988.f : 34
>>> PROGRESS 138/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #80
=================================
Summarizing function: pte_mkwrite : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3563.f : 0.000694990158081
TIMES : SCC:80 : 0.000705003738403
=================================
Finished an SCC (1)
=================================
Summary for function: pte_mkwrite:3563.f
=======

SUMS (nm, lo, un, wr, re):	pte_mkwrite	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low | 2UL

SIZES: 3563.f : 34
>>> PROGRESS 139/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #81
=================================
Summarizing function: skb_can_coalesce : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:81 : 0.000861883163452
TIMES : FUN:4713.f : 0.000852108001709
=================================
Finished an SCC (1)
=================================
Summary for function: skb_can_coalesce:4713.f
=======

SUMS (nm, lo, un, wr, re):	skb_can_coalesce	0	0	0	3	

SS Sum:
 -> 
$SSTOP
SIZES: 4713.f : 64394
>>> PROGRESS 140/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #82
=================================
Summarizing function: write_tryseqlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:82 : 0.00132298469543
TIMES : FUN:687.f : 0.0013120174408
=================================
Finished an SCC (1)
=================================
Summary for function: write_tryseqlock:687.f
=======

SUMS (nm, lo, un, wr, re):	write_tryseqlock	1	0	1	1	

SS Sum:
 -> 
$SSTOP
SIZES: 687.f : 268
>>> PROGRESS 141/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #83
=================================
Summarizing function: sysv_encode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2986.f : 0.000627040863037
TIMES : SCC:83 : 0.000637054443359
=================================
Finished an SCC (1)
=================================
Summary for function: sysv_encode_dev:2986.f
=======

SUMS (nm, lo, un, wr, re):	sysv_encode_dev	0	0	0	0	

SS Sum:
 -> 
Vval: (dev & 1048575U) | ((dev >> 20) << 18)
SIZES: 2986.f : 34
>>> PROGRESS 142/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #84
=================================
Summarizing function: pte_mkyoung : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3561.f : 0.000617980957031
TIMES : SCC:84 : 0.000626087188721
=================================
Finished an SCC (1)
=================================
Summary for function: pte_mkyoung:3561.f
=======

SUMS (nm, lo, un, wr, re):	pte_mkyoung	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low | 32UL

SIZES: 3561.f : 34
>>> PROGRESS 143/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #85
=================================
Summarizing function: write_sequnlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:85 : 0.00104594230652
TIMES : FUN:685.f : 0.0010359287262
=================================
Finished an SCC (1)
=================================
Summary for function: write_sequnlock:685.f
=======

SUMS (nm, lo, un, wr, re):	write_sequnlock	0	1	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 685.f : 268
>>> PROGRESS 144/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #86
=================================
Summarizing function: tty_insert_flip_char : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:86 : 0.00116896629333
TIMES : FUN:4135.f : 0.00115895271301
=================================
Finished an SCC (1)
=================================
Summary for function: tty_insert_flip_char:4135.f
=======

SUMS (nm, lo, un, wr, re):	tty_insert_flip_char	0	0	5	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4135.f : 50709
>>> PROGRESS 145/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #87
=================================
Summarizing function: pte_mkdirty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3559.f : 0.000643968582153
TIMES : SCC:87 : 0.000653982162476
=================================
Finished an SCC (1)
=================================
Summary for function: pte_mkdirty:3559.f
=======

SUMS (nm, lo, un, wr, re):	pte_mkdirty	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low | 64UL

SIZES: 3559.f : 34
>>> PROGRESS 146/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #88
=================================
Summarizing function: write_seqlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:683.f : 0.0010290145874
TIMES : SCC:88 : 0.00103807449341
=================================
Finished an SCC (1)
=================================
Summary for function: write_seqlock:683.f
=======

SUMS (nm, lo, un, wr, re):	write_seqlock	1	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 683.f : 268
>>> PROGRESS 147/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #366
=================================
Summarizing function: bitmap_shift_right : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:366 : 0.00101399421692
TIMES : FUN:1055.f : 0.0010039806366
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_shift_right:1055.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_shift_right	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1055.f : 128
>>> PROGRESS 148/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #89
=================================
Summarizing function: __nodes_shift_right : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:89 : 0.000966787338257
TIMES : FUN:1258.f : 0.000959873199463
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_shift_right:1258.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_shift_right	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1258.f : 218
>>> PROGRESS 149/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #90
=================================
Summarizing function: sysv_valid_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2983.f : 0.000648021697998
TIMES : SCC:90 : 0.00065803527832
=================================
Finished an SCC (1)
=================================
Summary for function: sysv_valid_dev:2983.f
=======

SUMS (nm, lo, un, wr, re):	sysv_valid_dev	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2983.f : 34
>>> PROGRESS 150/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #91
=================================
Summarizing function: tty_devnum : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4133.f : 0.000946998596191
TIMES : SCC:91 : 0.00095796585083
=================================
Finished an SCC (1)
=================================
Summary for function: tty_devnum:4133.f
=======

SUMS (nm, lo, un, wr, re):	tty_devnum	0	0	0	3	

SS Sum:
 -> 
Vval: (((tty->driver)->major << 20) | (tty->driver)->minor_start) + tty->index
SIZES: 4133.f : 50457
>>> PROGRESS 151/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #92
=================================
Summarizing function: pte_mkread : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:92 : 0.000668048858643
TIMES : FUN:3557.f : 0.00065803527832
=================================
Finished an SCC (1)
=================================
Summary for function: pte_mkread:3557.f
=======

SUMS (nm, lo, un, wr, re):	pte_mkread	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low | 4UL

SIZES: 3557.f : 34
>>> PROGRESS 152/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #93
=================================
Summarizing function: cap_invert : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:93 : 0.000645160675049
TIMES : FUN:680.f : 0.000635862350464
=================================
Finished an SCC (1)
=================================
Summary for function: cap_invert:680.f
=======

SUMS (nm, lo, un, wr, re):	cap_invert	0	0	0	0	

SS Sum:
 -> 
Vval: ~ c
SIZES: 680.f : 34
>>> PROGRESS 153/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #104
=================================
Summarizing function: new_decode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2972.f : 0.000643968582153
TIMES : SCC:104 : 0.000654220581055
=================================
Finished an SCC (1)
=================================
Summary for function: new_decode_dev:2972.f
=======

SUMS (nm, lo, un, wr, re):	new_decode_dev	0	0	0	0	

SS Sum:
 -> 
Vval: (((dev & 1048320U) >> 8) << 20) | ((dev & 255U) | ((dev >> 12) & 1048320U))
SIZES: 2972.f : 34
>>> PROGRESS 154/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #94
=================================
Summarizing function: huge_decode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:94 : 0.0011830329895
TIMES : FUN:2980.f : 0.00117492675781
=================================
Finished an SCC (1)
=================================
Summary for function: huge_decode_dev:2980.f
=======

SUMS (nm, lo, un, wr, re):	huge_decode_dev	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2980.f : 34
>>> PROGRESS 155/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #95
=================================
Summarizing function: pte_wrprotect : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3555.f : 0.000624895095825
TIMES : SCC:95 : 0.000634908676147
=================================
Finished an SCC (1)
=================================
Summary for function: pte_wrprotect:3555.f
=======

SUMS (nm, lo, un, wr, re):	pte_wrprotect	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low & 4294967293UL

SIZES: 3555.f : 34
>>> PROGRESS 156/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #373
=================================
Summarizing function: bitmap_weight : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:373 : 0.00542593002319
TIMES : FUN:1050.f : 0.00541496276855
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_weight:1050.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_weight	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1050.f : 34
>>> PROGRESS 157/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #96
=================================
Summarizing function: __nodes_weight : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:96 : 0.00109910964966
TIMES : FUN:1254.f : 0.00108814239502
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_weight:1254.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_weight	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1254.f : 34
>>> PROGRESS 158/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #97
=================================
Summarizing function: pte_mkold : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:97 : 0.000717878341675
TIMES : FUN:3553.f : 0.000708103179932
=================================
Finished an SCC (1)
=================================
Summary for function: pte_mkold:3553.f
=======

SUMS (nm, lo, un, wr, re):	pte_mkold	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low & 4294967263UL

SIZES: 3553.f : 34
>>> PROGRESS 159/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #98
=================================
Summarizing function: cap_drop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:98 : 0.000650882720947
TIMES : FUN:676.f : 0.000639915466309
=================================
Finished an SCC (1)
=================================
Summary for function: cap_drop:676.f
=======

SUMS (nm, lo, un, wr, re):	cap_drop	0	0	0	0	

SS Sum:
 -> 
Vval: a & ~ drop
SIZES: 676.f : 34
>>> PROGRESS 160/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #111
=================================
Summarizing function: new_encode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2968.f : 0.000657081604004
TIMES : SCC:111 : 0.000668048858643
=================================
Finished an SCC (1)
=================================
Summary for function: new_encode_dev:2968.f
=======

SUMS (nm, lo, un, wr, re):	new_encode_dev	0	0	0	0	

SS Sum:
 -> 
Vval: (((dev & 1048575U) & 255U) | ((dev >> 20) << 8)) | (((dev & 1048575U) & 4294967040U) << 12)
SIZES: 2968.f : 34
>>> PROGRESS 161/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #99
=================================
Summarizing function: huge_encode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2976.f : 0.00130105018616
TIMES : SCC:99 : 0.00131106376648
=================================
Finished an SCC (1)
=================================
Summary for function: huge_encode_dev:2976.f
=======

SUMS (nm, lo, un, wr, re):	huge_encode_dev	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2976.f : 34
>>> PROGRESS 162/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #100
=================================
Summarizing function: pte_mkclean : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3551.f : 0.000715017318726
TIMES : SCC:100 : 0.000725984573364
=================================
Finished an SCC (1)
=================================
Summary for function: pte_mkclean:3551.f
=======

SUMS (nm, lo, un, wr, re):	pte_mkclean	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low & 4294967231UL

SIZES: 3551.f : 34
>>> PROGRESS 163/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #384
=================================
Summarizing function: bitmap_full : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:384 : 0.00132298469543
TIMES : FUN:1043.f : 0.0013108253479
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_full:1043.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_full	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1043.f : 99
>>> PROGRESS 164/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #101
=================================
Summarizing function: __nodes_full : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:101 : 0.00124001502991
TIMES : FUN:1250.f : 0.00123000144958
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_full:1250.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_full	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1250.f : 169
>>> PROGRESS 165/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #102
=================================
Summarizing function: pte_rdprotect : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:102 : 0.000698089599609
TIMES : FUN:3549.f : 0.000686883926392
=================================
Finished an SCC (1)
=================================
Summary for function: pte_rdprotect:3549.f
=======

SUMS (nm, lo, un, wr, re):	pte_rdprotect	0	0	0	0	

SS Sum:
 -> 
Struct:
  .pte_low ->  Vval: pte.pte_low & 4294967291UL

SIZES: 3549.f : 34
>>> PROGRESS 166/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #103
=================================
Summarizing function: cap_intersect : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:103 : 0.000653028488159
TIMES : FUN:672.f : 0.000643014907837
=================================
Finished an SCC (1)
=================================
Summary for function: cap_intersect:672.f
=======

SUMS (nm, lo, un, wr, re):	cap_intersect	0	0	0	0	

SS Sum:
 -> 
Vval: a & b
SIZES: 672.f : 34
>>> PROGRESS 167/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #105
=================================
Summarizing function: pte_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3547.f : 0.000661849975586
TIMES : SCC:105 : 0.000673055648804
=================================
Finished an SCC (1)
=================================
Summary for function: pte_write:3547.f
=======

SUMS (nm, lo, un, wr, re):	pte_write	0	0	0	0	

SS Sum:
 -> 
Vval: pte.pte_low & 2UL
SIZES: 3547.f : 34
>>> PROGRESS 168/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #169
=================================
Summarizing function: __skb_trim : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4647.f : 0.00111293792725
TIMES : SCC:169 : 0.00112295150757
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_trim:4647.f
=======

SUMS (nm, lo, un, wr, re):	__skb_trim	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4647.f : 64044
>>> PROGRESS 169/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #296
=================================
Summarizing function: skb_is_nonlinear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:296 : 0.000754117965698
TIMES : FUN:4562.f : 0.00074291229248
=================================
Finished an SCC (1)
=================================
Summary for function: skb_is_nonlinear:4562.f
=======

SUMS (nm, lo, un, wr, re):	skb_is_nonlinear	0	0	0	1	

SS Sum:
 -> 
Vval: skb->data_len
SIZES: 4562.f : 63934
>>> PROGRESS 170/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #255
=================================
Summarizing function: skb_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4585.f : 0.00401496887207
TIMES : SCC:255 : 0.00402593612671
=================================
Finished an SCC (1)
=================================
Summary for function: skb_put:4585.f
=======

SUMS (nm, lo, un, wr, re):	skb_put	0	0	2	4	

SS Sum:
 -> 
Extptr (1):
  lval = (*(skb->tail))

SIZES: 4585.f : 64129
>>> PROGRESS 171/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #436
=================================
Summarizing function: csum_block_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:436 : 0.00132083892822
TIMES : FUN:4454.f : 0.00130891799927
=================================
Finished an SCC (1)
=================================
Summary for function: csum_block_add:4454.f
=======

SUMS (nm, lo, un, wr, re):	csum_block_add	0	0	0	0	

SS Sum:
 -> 
Vval: (csum + (((csum2 & 16711935U) << 8) + ((csum2 >> 8) & 16711935U))) + (csum + (((csum2 & 16711935U) << 8) + ((csum2 >> 8) & 16711935U)) < ((csum2 & 16711935U) << 8) + ((csum2 >> 8) & 16711935U))
SIZES: 4454.f : 34
>>> PROGRESS 172/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #636
=================================
Summarizing function: csum_partial_copy_from_user : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:636 : 0.00118589401245
TIMES : FUN:4373.f : 0.0011739730835
=================================
Finished an SCC (1)
=================================
Summary for function: csum_partial_copy_from_user:4373.f
=======

SUMS (nm, lo, un, wr, re):	csum_partial_copy_from_user	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4373.f : 34
>>> PROGRESS 173/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #467
=================================
Summarizing function: csum_and_copy_from_user : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4435.f : 0.00226783752441
TIMES : SCC:467 : 0.00227880477905
=================================
Finished an SCC (1)
=================================
Summary for function: csum_and_copy_from_user:4435.f
=======

SUMS (nm, lo, un, wr, re):	csum_and_copy_from_user	0	0	1	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4435.f : 99
>>> PROGRESS 174/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #106
=================================
Summarizing function: skb_add_data : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:106 : 0.00630497932434
TIMES : FUN:4697.f : 0.00629591941833
=================================
Finished an SCC (1)
=================================
Summary for function: skb_add_data:4697.f
=======

SUMS (nm, lo, un, wr, re):	skb_add_data	0	0	4	8	

SS Sum:
 -> 
$SSTOP
SIZES: 4697.f : 64473
>>> PROGRESS 175/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #396
=================================
Summarizing function: bitmap_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 24	misses: 2

doing lockset
doing guarded access
TIMES : SCC:396 : 0.00137996673584
TIMES : FUN:1036.f : 0.00136780738831
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_empty:1036.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1036.f : 99
>>> PROGRESS 176/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #107
=================================
Summarizing function: __nodes_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:107 : 0.00112700462341
TIMES : FUN:1246.f : 0.00111699104309
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_empty:1246.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1246.f : 169
>>> PROGRESS 177/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #745
=================================
Summarizing function: init_waitqueue_head : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:745 : 0.00137805938721
TIMES : FUN:1414.f : 0.00136685371399
=================================
Finished an SCC (1)
=================================
Summary for function: init_waitqueue_head:1414.f
=======

SUMS (nm, lo, un, wr, re):	init_waitqueue_head	0	0	3	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1414.f : 405
>>> PROGRESS 178/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #108
=================================
Summarizing function: init_completion : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1821.f : 0.00108695030212
TIMES : SCC:108 : 0.00109696388245
=================================
Finished an SCC (1)
=================================
Summary for function: init_completion:1821.f
=======

SUMS (nm, lo, un, wr, re):	init_completion	0	0	4	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1821.f : 525
>>> PROGRESS 179/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #110
=================================
Summarizing function: cap_combine : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:110 : 0.00061821937561
TIMES : FUN:668.f : 0.000607967376709
=================================
Finished an SCC (1)
=================================
Summary for function: cap_combine:668.f
=======

SUMS (nm, lo, un, wr, re):	cap_combine	0	0	0	0	

SS Sum:
 -> 
Vval: a | b
SIZES: 668.f : 34
>>> PROGRESS 180/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #409
=================================
Summarizing function: bitmap_subset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1028.f : 0.00127696990967
TIMES : SCC:409 : 0.00128793716431
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_subset:1028.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_subset	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1028.f : 128
>>> PROGRESS 181/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #113
=================================
Summarizing function: __nodes_subset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:113 : 0.0012059211731
TIMES : FUN:1241.f : 0.00119686126709
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_subset:1241.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_subset	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1241.f : 201
>>> PROGRESS 182/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #114
=================================
Summarizing function: new_valid_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:114 : 0.000552892684937
TIMES : FUN:2966.f : 0.000541925430298
=================================
Finished an SCC (1)
=================================
Summary for function: new_valid_dev:2966.f
=======

SUMS (nm, lo, un, wr, re):	new_valid_dev	0	0	0	0	

SS Sum:
 -> 
Vval: 1
SIZES: 2966.f : 34
>>> PROGRESS 183/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #116
=================================
Summarizing function: old_decode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2964.f : 0.000562906265259
TIMES : SCC:116 : 0.000571966171265
=================================
Finished an SCC (1)
=================================
Summary for function: old_decode_dev:2964.f
=======

SUMS (nm, lo, un, wr, re):	old_decode_dev	0	0	0	0	

SS Sum:
 -> 
Vval: (((val >> 8) & 255) << 20) | (val & 255)
SIZES: 2964.f : 34
>>> PROGRESS 184/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #117
=================================
Summarizing function: skb_padto : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:117 : 0.00462985038757
TIMES : FUN:4689.f : 0.00462007522583
=================================
Finished an SCC (1)
=================================
Summary for function: skb_padto:4689.f
=======

SUMS (nm, lo, un, wr, re):	skb_padto	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4689.f : 63886
>>> PROGRESS 185/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #851
=================================
Summarizing function: variable_test_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:851 : 0.000613927841187
TIMES : FUN:204.f : 0.000602960586548
=================================
Finished an SCC (1)
=================================
Summary for function: variable_test_bit:204.f
=======

SUMS (nm, lo, un, wr, re):	variable_test_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 204.f : 34
>>> PROGRESS 186/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #118
=================================
Summarizing function: bit_spin_is_locked : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:118 : 0.00114297866821
TIMES : FUN:662.f : 0.00113296508789
=================================
Finished an SCC (1)
=================================
Summary for function: bit_spin_is_locked:662.f
=======

SUMS (nm, lo, un, wr, re):	bit_spin_is_locked	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 662.f : 34
>>> PROGRESS 187/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #119
=================================
Summarizing function: old_encode_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:119 : 0.000593900680542
TIMES : FUN:2962.f : 0.000583171844482
=================================
Finished an SCC (1)
=================================
Summary for function: old_encode_dev:2962.f
=======

SUMS (nm, lo, un, wr, re):	old_encode_dev	0	0	0	0	

SS Sum:
 -> 
Vval: ((dev >> 20) << 8) | (dev & 1048575U)
SIZES: 2962.f : 34
>>> PROGRESS 188/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #415
=================================
Summarizing function: bitmap_intersects : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:415 : 0.00316882133484
TIMES : FUN:1021.f : 0.00315403938293
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_intersects:1021.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_intersects	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1021.f : 128
>>> PROGRESS 189/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #120
=================================
Summarizing function: __nodes_intersects : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:120 : 0.00129985809326
TIMES : FUN:1236.f : 0.00129008293152
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_intersects:1236.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_intersects	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1236.f : 201
>>> PROGRESS 190/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #121
=================================
Summarizing function: old_valid_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:121 : 0.000724077224731
TIMES : FUN:2959.f : 0.000711917877197
=================================
Finished an SCC (1)
=================================
Summary for function: old_valid_dev:2959.f
=======

SUMS (nm, lo, un, wr, re):	old_valid_dev	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2959.f : 34
>>> PROGRESS 191/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #422
=================================
Summarizing function: bitmap_equal : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1013.f : 0.00143504142761
TIMES : SCC:422 : 0.00144600868225
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_equal:1013.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_equal	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1013.f : 128
>>> PROGRESS 192/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #122
=================================
Summarizing function: __nodes_equal : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:122 : 0.00290107727051
TIMES : FUN:1231.f : 0.00289106369019
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_equal:1231.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_equal	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1231.f : 201
>>> PROGRESS 193/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #123
=================================
Summarizing function: valid_signal : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1806.f : 0.000606060028076
TIMES : SCC:123 : 0.000614881515503
=================================
Finished an SCC (1)
=================================
Summary for function: valid_signal:1806.f
=======

SUMS (nm, lo, un, wr, re):	valid_signal	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1806.f : 34
>>> PROGRESS 194/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #124
=================================
Summarizing function: bit_spin_unlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:124 : 0.00184392929077
TIMES : FUN:654.f : 0.00183391571045
=================================
Finished an SCC (1)
=================================
Summary for function: bit_spin_unlock:654.f
=======

SUMS (nm, lo, un, wr, re):	bit_spin_unlock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 654.f : 34
>>> PROGRESS 195/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #849
=================================
Summarizing function: __constant_c_and_count_memset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:939.f : 0.00116801261902
TIMES : SCC:849 : 0.00117993354797
=================================
Finished an SCC (1)
=================================
Summary for function: __constant_c_and_count_memset:939.f
=======

SUMS (nm, lo, un, wr, re):	__constant_c_and_count_memset	0	0	1	0	

SS Sum:
 -> 
Extptr (5):
  lval = (*s)

SIZES: 939.f : 167
>>> PROGRESS 196/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #154
=================================
Summarizing function: sigemptyset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:154 : 0.00110292434692
TIMES : FUN:1785.f : 0.00109195709229
=================================
Finished an SCC (1)
=================================
Summary for function: sigemptyset:1785.f
=======

SUMS (nm, lo, un, wr, re):	sigemptyset	0	0	2	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1785.f : 307
>>> PROGRESS 197/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #125
=================================
Summarizing function: init_sigpending : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:125 : 0.00105094909668
TIMES : FUN:1804.f : 0.00104308128357
=================================
Finished an SCC (1)
=================================
Summary for function: init_sigpending:1804.f
=======

SUMS (nm, lo, un, wr, re):	init_sigpending	0	0	4	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1804.f : 516
>>> PROGRESS 198/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #185
=================================
Summarizing function: skb_headroom : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4636.f : 0.00065016746521
TIMES : SCC:185 : 0.00066089630127
=================================
Finished an SCC (1)
=================================
Summary for function: skb_headroom:4636.f
=======

SUMS (nm, lo, un, wr, re):	skb_headroom	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4636.f : 63880
>>> PROGRESS 199/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #395
=================================
Summarizing function: skb_cloned : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:395 : 0.000836849212646
TIMES : FUN:4487.f : 0.000826120376587
=================================
Finished an SCC (1)
=================================
Summary for function: skb_cloned:4487.f
=======

SUMS (nm, lo, un, wr, re):	skb_cloned	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4487.f : 64190
>>> PROGRESS 200/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #126
=================================
Summarizing function: skb_cow : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:126 : 0.0344231128693
TIMES : FUN:4679.f : 0.034411907196
=================================
Finished an SCC (1)
=================================
Summary for function: skb_cow:4679.f
=======

SUMS (nm, lo, un, wr, re):	skb_cow	0	0	0	4	

SS Sum:
 -> 
$SSTOP
SIZES: 4679.f : 64282
>>> PROGRESS 201/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #431
=================================
Summarizing function: bitmap_complement : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1008.f : 0.00108194351196
TIMES : SCC:431 : 0.00109314918518
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_complement:1008.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_complement	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1008.f : 128
>>> PROGRESS 202/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #127
=================================
Summarizing function: __nodes_complement : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1227.f : 0.000910043716431
TIMES : SCC:127 : 0.000920057296753
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_complement:1227.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_complement	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1227.f : 218
>>> PROGRESS 203/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #128
=================================
Summarizing function: reacquire_kernel_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:128 : 0.00296497344971
TIMES : FUN:2377.f : 0.0029559135437
=================================
Finished an SCC (1)
=================================
Summary for function: reacquire_kernel_lock:2377.f
=======

SUMS (nm, lo, un, wr, re):	reacquire_kernel_lock	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2377.f : 50332
>>> PROGRESS 204/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #129
=================================
Summarizing function: siginitsetinv : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:129 : 0.00112700462341
TIMES : FUN:1801.f : 0.00111794471741
=================================
Finished an SCC (1)
=================================
Summary for function: siginitsetinv:1801.f
=======

SUMS (nm, lo, un, wr, re):	siginitsetinv	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1801.f : 310
>>> PROGRESS 205/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #176
=================================
Summarizing function: skb_reserve : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4643.f : 0.000850200653076
TIMES : SCC:176 : 0.000863075256348
=================================
Finished an SCC (1)
=================================
Summary for function: skb_reserve:4643.f
=======

SUMS (nm, lo, un, wr, re):	skb_reserve	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4643.f : 63865
>>> PROGRESS 206/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #138
=================================
Summarizing function: __dev_alloc_skb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4670.f : 0.00239682197571
TIMES : SCC:138 : 0.00240707397461
=================================
Finished an SCC (1)
=================================
Summary for function: __dev_alloc_skb:4670.f
=======

SUMS (nm, lo, un, wr, re):	__dev_alloc_skb	0	0	2	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4670.f : 63861
>>> PROGRESS 207/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #130
=================================
Summarizing function: dev_alloc_skb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4676.f : 0.00179505348206
TIMES : SCC:130 : 0.00180506706238
=================================
Finished an SCC (1)
=================================
Summary for function: dev_alloc_skb:4676.f
=======

SUMS (nm, lo, un, wr, re):	dev_alloc_skb	0	0	2	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4676.f : 63861
>>> PROGRESS 208/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #927
=================================
Summarizing function: test_and_set_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : FUN:177.f : 0.000646829605103
TIMES : SCC:927 : 0.000661134719849
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_set_bit:177.f
=======

SUMS (nm, lo, un, wr, re):	test_and_set_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 177.f : 34
>>> PROGRESS 209/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #131
=================================
Summarizing function: bit_spin_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:131 : 0.00112819671631
TIMES : FUN:650.f : 0.00111699104309
=================================
Finished an SCC (1)
=================================
Summary for function: bit_spin_trylock:650.f
=======

SUMS (nm, lo, un, wr, re):	bit_spin_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 650.f : 34
>>> PROGRESS 210/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #132
=================================
Summarizing function: siginitset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1798.f : 0.00118017196655
TIMES : SCC:132 : 0.0011899471283
=================================
Finished an SCC (1)
=================================
Summary for function: siginitset:1798.f
=======

SUMS (nm, lo, un, wr, re):	siginitset	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1798.f : 310
>>> PROGRESS 211/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #437
=================================
Summarizing function: bitmap_andnot : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:437 : 0.0046591758728
TIMES : FUN:1003.f : 0.00464606285095
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_andnot:1003.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_andnot	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1003.f : 157
>>> PROGRESS 212/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #133
=================================
Summarizing function: __nodes_andnot : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1222.f : 0.00101494789124
TIMES : SCC:133 : 0.00102281570435
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_andnot:1222.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_andnot	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1222.f : 250
>>> PROGRESS 213/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #134
=================================
Summarizing function: prio_tree_right_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2947.f : 0.000931024551392
TIMES : SCC:134 : 0.000939846038818
=================================
Finished an SCC (1)
=================================
Summary for function: prio_tree_right_empty:2947.f
=======

SUMS (nm, lo, un, wr, re):	prio_tree_right_empty	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )node->right == (unsigned int )node
SIZES: 2947.f : 252
>>> PROGRESS 214/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #135
=================================
Summarizing function: sigtestsetmask : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:135 : 0.00087308883667
TIMES : FUN:1795.f : 0.000862836837769
=================================
Finished an SCC (1)
=================================
Summary for function: sigtestsetmask:1795.f
=======

SUMS (nm, lo, un, wr, re):	sigtestsetmask	0	0	0	1	

SS Sum:
 -> 
Vval: (set->sig[0] & mask) != 0UL
SIZES: 1795.f : 185
>>> PROGRESS 215/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #136
=================================
Summarizing function: prio_tree_left_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:136 : 0.000846147537231
TIMES : FUN:2945.f : 0.000837087631226
=================================
Finished an SCC (1)
=================================
Summary for function: prio_tree_left_empty:2945.f
=======

SUMS (nm, lo, un, wr, re):	prio_tree_left_empty	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )node->left == (unsigned int )node
SIZES: 2945.f : 243
>>> PROGRESS 216/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #137
=================================
Summarizing function: free_secdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:137 : 0.000576972961426
TIMES : FUN:3520.f : 0.000566959381104
=================================
Finished an SCC (1)
=================================
Summary for function: free_secdata:3520.f
=======

SUMS (nm, lo, un, wr, re):	free_secdata	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3520.f : 34
>>> PROGRESS 217/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #328
=================================
Summarizing function: rep_nop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:328 : 0.000604867935181
TIMES : FUN:508.f : 0.000592947006226
=================================
Finished an SCC (1)
=================================
Summary for function: rep_nop:508.f
=======

SUMS (nm, lo, un, wr, re):	rep_nop	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 508.f : 34
>>> PROGRESS 218/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #139
=================================
Summarizing function: bit_spin_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:139 : 0.00185298919678
TIMES : FUN:644.f : 0.00184392929077
=================================
Finished an SCC (1)
=================================
Summary for function: bit_spin_lock:644.f
=======

SUMS (nm, lo, un, wr, re):	bit_spin_lock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 644.f : 34
>>> PROGRESS 219/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #140
=================================
Summarizing function: alloc_secdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3519.f : 0.000573873519897
TIMES : SCC:140 : 0.000584840774536
=================================
Finished an SCC (1)
=================================
Summary for function: alloc_secdata:3519.f
=======

SUMS (nm, lo, un, wr, re):	alloc_secdata	0	0	0	0	

SS Sum:
 -> 
Vval: 1
SIZES: 3519.f : 34
>>> PROGRESS 220/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #141
=================================
Summarizing function: prio_tree_root : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2943.f : 0.000815153121948
TIMES : SCC:141 : 0.000823974609375
=================================
Finished an SCC (1)
=================================
Summary for function: prio_tree_root:2943.f
=======

SUMS (nm, lo, un, wr, re):	prio_tree_root	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )node->parent == (unsigned int )node
SIZES: 2943.f : 234
>>> PROGRESS 221/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #441
=================================
Summarizing function: bitmap_xor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:998.f : 0.00112986564636
TIMES : SCC:441 : 0.0011420249939
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_xor:998.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_xor	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 998.f : 157
>>> PROGRESS 222/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #142
=================================
Summarizing function: __nodes_xor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:142 : 0.00106000900269
TIMES : FUN:1217.f : 0.00104999542236
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_xor:1217.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_xor	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1217.f : 250
>>> PROGRESS 223/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #143
=================================
Summarizing function: sigdelsetmask : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : SCC:143 : 0.00102090835571
TIMES : FUN:1792.f : 0.00101113319397
=================================
Finished an SCC (1)
=================================
Summary for function: sigdelsetmask:1792.f
=======

SUMS (nm, lo, un, wr, re):	sigdelsetmask	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1792.f : 186
>>> PROGRESS 224/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #321
=================================
Summarizing function: __skb_dequeue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4535.f : 0.00176596641541
TIMES : SCC:321 : 0.00177812576294
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_dequeue:4535.f
=======

SUMS (nm, lo, un, wr, re):	__skb_dequeue	0	0	5	4	

SS Sum:
 -> 
Extptr (8):
  lval = (*$NULL)(sum)
  lval = (*(list->next))

SIZES: 4535.f : 64055
>>> PROGRESS 225/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #751
=================================
Summarizing function: kfree_skb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:751 : 0.00183200836182
TIMES : FUN:4481.f : 0.00182199478149
=================================
Finished an SCC (1)
=================================
Summary for function: kfree_skb:4481.f
=======

SUMS (nm, lo, un, wr, re):	kfree_skb	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4481.f : 63757
>>> PROGRESS 226/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #144
=================================
Summarizing function: __skb_queue_purge : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4666.f : 0.00416994094849
TIMES : SCC:144 : 0.0041811466217
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_queue_purge:4666.f
=======

SUMS (nm, lo, un, wr, re):	__skb_queue_purge	0	0	5	5	

SS Sum:
 -> 
$SSBOT
SIZES: 4666.f : 64105
>>> PROGRESS 227/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #145
=================================
Summarizing function: sigaddsetmask : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 10	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1789.f : 0.000898122787476
TIMES : SCC:145 : 0.000907897949219
=================================
Finished an SCC (1)
=================================
Summary for function: sigaddsetmask:1789.f
=======

SUMS (nm, lo, un, wr, re):	sigaddsetmask	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1789.f : 186
>>> PROGRESS 228/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #146
=================================
Summarizing function: simple_transaction_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:146 : 0.00129199028015
TIMES : FUN:3514.f : 0.00128197669983
=================================
Finished an SCC (1)
=================================
Summary for function: simple_transaction_set:3514.f
=======

SUMS (nm, lo, un, wr, re):	simple_transaction_set	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3514.f : 50378
>>> PROGRESS 229/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #147
=================================
Summarizing function: skb_orphan : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:147 : 0.00109696388245
TIMES : FUN:4663.f : 0.00108599662781
=================================
Finished an SCC (1)
=================================
Summary for function: skb_orphan:4663.f
=======

SUMS (nm, lo, un, wr, re):	skb_orphan	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4663.f : 63799
>>> PROGRESS 230/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #449
=================================
Summarizing function: bitmap_or : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:993.f : 0.00107288360596
TIMES : SCC:449 : 0.00108504295349
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_or:993.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_or	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 993.f : 157
>>> PROGRESS 231/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #148
=================================
Summarizing function: __nodes_or : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1212.f : 0.00128102302551
TIMES : SCC:148 : 0.00128984451294
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_or:1212.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_or	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1212.f : 250
>>> PROGRESS 232/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #149
=================================
Summarizing function: sigfillset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1787.f : 0.00107192993164
TIMES : SCC:149 : 0.00107979774475
=================================
Finished an SCC (1)
=================================
Summary for function: sigfillset:1787.f
=======

SUMS (nm, lo, un, wr, re):	sigfillset	0	0	2	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1787.f : 326
>>> PROGRESS 233/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #150
=================================
Summarizing function: module_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2362.f : 0.000576972961426
TIMES : SCC:150 : 0.000586986541748
=================================
Finished an SCC (1)
=================================
Summary for function: module_put:2362.f
=======

SUMS (nm, lo, un, wr, re):	module_put	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2362.f : 34
>>> PROGRESS 234/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #151
=================================
Summarizing function: __exittest : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:151 : 0.000622987747192
TIMES : FUN:5812.f : 0.00061297416687
=================================
Finished an SCC (1)
=================================
Summary for function: __exittest:5812.f
=======

SUMS (nm, lo, un, wr, re):	__exittest	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = synclink_exit
SIZES: 5812.f : 34
>>> PROGRESS 235/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #152
=================================
Summarizing function: prio_tree_iter_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2936.f : 0.000867128372192
TIMES : SCC:152 : 0.000875949859619
=================================
Finished an SCC (1)
=================================
Summary for function: prio_tree_iter_init:2936.f
=======

SUMS (nm, lo, un, wr, re):	prio_tree_iter_init	0	0	4	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2936.f : 629
>>> PROGRESS 236/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #153
=================================
Summarizing function: __inittest : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:153 : 0.000586986541748
TIMES : FUN:5811.f : 0.000577211380005
=================================
Finished an SCC (1)
=================================
Summary for function: __inittest:5811.f
=======

SUMS (nm, lo, un, wr, re):	__inittest	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = synclink_init
SIZES: 5811.f : 34
>>> PROGRESS 237/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #155
=================================
Summarizing function: signotset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1783.f : 0.0011579990387
TIMES : SCC:155 : 0.00116896629333
=================================
Finished an SCC (1)
=================================
Summary for function: signotset:1783.f
=======

SUMS (nm, lo, un, wr, re):	signotset	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1783.f : 237
>>> PROGRESS 238/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #166
=================================
Summarizing function: module_is_live : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:166 : 0.000663995742798
TIMES : FUN:2350.f : 0.000653028488159
=================================
Finished an SCC (1)
=================================
Summary for function: module_is_live:2350.f
=======

SUMS (nm, lo, un, wr, re):	module_is_live	0	0	0	1	

SS Sum:
 -> 
Vval: mod->state != 2
SIZES: 2350.f : 50248
>>> PROGRESS 239/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #156
=================================
Summarizing function: try_module_get : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:156 : 0.00216913223267
TIMES : FUN:2358.f : 0.00216102600098
=================================
Finished an SCC (1)
=================================
Summary for function: try_module_get:2358.f
=======

SUMS (nm, lo, un, wr, re):	try_module_get	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2358.f : 50248
>>> PROGRESS 240/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #157
=================================
Summarizing function: pskb_trim : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:157 : 0.00370502471924
TIMES : FUN:4658.f : 0.00369596481323
=================================
Finished an SCC (1)
=================================
Summary for function: pskb_trim:4658.f
=======

SUMS (nm, lo, un, wr, re):	pskb_trim	0	0	2	3	

SS Sum:
 -> 
$SSTOP
SIZES: 4658.f : 127784
>>> PROGRESS 241/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #452
=================================
Summarizing function: bitmap_and : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:452 : 0.0010359287262
TIMES : FUN:988.f : 0.00102496147156
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_and:988.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_and	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 988.f : 157
>>> PROGRESS 242/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #158
=================================
Summarizing function: __nodes_and : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:158 : 0.000975847244263
TIMES : FUN:1207.f : 0.000967025756836
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_and:1207.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_and	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1207.f : 250
>>> PROGRESS 243/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #159
=================================
Summarizing function: pci_enable_msix : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2932.f : 0.000576972961426
TIMES : SCC:159 : 0.000587940216064
=================================
Finished an SCC (1)
=================================
Summary for function: pci_enable_msix:2932.f
=======

SUMS (nm, lo, un, wr, re):	pci_enable_msix	0	0	0	0	

SS Sum:
 -> 
Vval: -1
SIZES: 2932.f : 34
>>> PROGRESS 244/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #160
=================================
Summarizing function: parent_ino : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:160 : 0.00130009651184
TIMES : FUN:3507.f : 0.00129103660583
=================================
Finished an SCC (1)
=================================
Summary for function: parent_ino:3507.f
=======

SUMS (nm, lo, un, wr, re):	parent_ino	0	1	0	1	

SS Sum:
 -> 
Vval: (dentry->d_inode)->i_ino
SIZES: 3507.f : 50204
>>> PROGRESS 245/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #161
=================================
Summarizing function: pci_enable_msi : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:161 : 0.000581979751587
TIMES : FUN:2930.f : 0.000572919845581
=================================
Finished an SCC (1)
=================================
Summary for function: pci_enable_msi:2930.f
=======

SUMS (nm, lo, un, wr, re):	pci_enable_msi	0	0	0	0	

SS Sum:
 -> 
Vval: -1
SIZES: 2930.f : 34
>>> PROGRESS 246/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #162
=================================
Summarizing function: __node_test_and_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:162 : 0.00100088119507
TIMES : FUN:1203.f : 0.000991106033325
=================================
Finished an SCC (1)
=================================
Summary for function: __node_test_and_set:1203.f
=======

SUMS (nm, lo, un, wr, re):	__node_test_and_set	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1203.f : 34
>>> PROGRESS 247/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #163
=================================
Summarizing function: pci_scan_msi_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2928.f : 0.000794172286987
TIMES : SCC:163 : 0.000808000564575
=================================
Finished an SCC (1)
=================================
Summary for function: pci_scan_msi_device:2928.f
=======

SUMS (nm, lo, un, wr, re):	pci_scan_msi_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2928.f : 34
>>> PROGRESS 248/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #829
=================================
Summarizing function: __constant_c_memset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:829 : 0.000930070877075
TIMES : FUN:927.f : 0.000913143157959
=================================
Finished an SCC (1)
=================================
Summary for function: __constant_c_memset:927.f
=======

SUMS (nm, lo, un, wr, re):	__constant_c_memset	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*s)

SIZES: 927.f : 34
>>> PROGRESS 249/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #527
=================================
Summarizing function: bitmap_zero : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:527 : 0.00127696990967
TIMES : FUN:974.f : 0.00126385688782
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_zero:974.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_zero	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 974.f : 99
>>> PROGRESS 250/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #165
=================================
Summarizing function: __nodes_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1200.f : 0.0013210773468
TIMES : SCC:165 : 0.00133514404297
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_clear:1200.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_clear	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1200.f : 186
>>> PROGRESS 251/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #167
=================================
Summarizing function: skb_trim : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4650.f : 0.00282692909241
TIMES : SCC:167 : 0.00283885002136
=================================
Finished an SCC (1)
=================================
Summary for function: skb_trim:4650.f
=======

SUMS (nm, lo, un, wr, re):	skb_trim	0	0	2	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4650.f : 63861
>>> PROGRESS 252/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #523
=================================
Summarizing function: bitmap_fill : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:523 : 0.00146985054016
TIMES : FUN:978.f : 0.00145602226257
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_fill:978.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_fill	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 978.f : 116
>>> PROGRESS 253/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #168
=================================
Summarizing function: __nodes_setall : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:168 : 0.00120496749878
TIMES : FUN:1197.f : 0.00119304656982
=================================
Finished an SCC (1)
=================================
Summary for function: __nodes_setall:1197.f
=======

SUMS (nm, lo, un, wr, re):	__nodes_setall	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1197.f : 203
>>> PROGRESS 254/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #170
=================================
Summarizing function: signandsets : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:170 : 0.00472903251648
TIMES : FUN:1771.f : 0.00471711158752
=================================
Finished an SCC (1)
=================================
Summary for function: signandsets:1771.f
=======

SUMS (nm, lo, un, wr, re):	signandsets	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1771.f : 426
>>> PROGRESS 255/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #171
=================================
Summarizing function: pci_name : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:171 : 0.000887870788574
TIMES : FUN:4071.f : 0.000872850418091
=================================
Finished an SCC (1)
=================================
Summary for function: pci_name:4071.f
=======

SUMS (nm, lo, un, wr, re):	pci_name	0	0	0	0	

SS Sum:
 -> 
Extptr (1):
  lval = (*pdev).dev.bus_id

SIZES: 4071.f : 34
>>> PROGRESS 256/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #172
=================================
Summarizing function: __node_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:172 : 0.00116896629333
TIMES : FUN:1194.f : 0.00115585327148
=================================
Finished an SCC (1)
=================================
Summary for function: __node_clear:1194.f
=======

SUMS (nm, lo, un, wr, re):	__node_clear	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1194.f : 34
>>> PROGRESS 257/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #173
=================================
Summarizing function: insl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:173 : 0.000786066055298
TIMES : FUN:2919.f : 0.000771999359131
=================================
Finished an SCC (1)
=================================
Summary for function: insl:2919.f
=======

SUMS (nm, lo, un, wr, re):	insl	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2919.f : 34
>>> PROGRESS 258/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #174
=================================
Summarizing function: synclink_remove_one : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:5219.f : 0.000565052032471
TIMES : SCC:174 : 0.000576019287109
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_remove_one:5219.f
=======

SUMS (nm, lo, un, wr, re):	synclink_remove_one	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 5219.f : 34
>>> PROGRESS 259/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #728
=================================
Summarizing function: dev_set_drvdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2575.f : 0.000717878341675
TIMES : SCC:728 : 0.000729084014893
=================================
Finished an SCC (1)
=================================
Summary for function: dev_set_drvdata:2575.f
=======

SUMS (nm, lo, un, wr, re):	dev_set_drvdata	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2575.f : 52602
>>> PROGRESS 260/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #175
=================================
Summarizing function: pci_set_drvdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:175 : 0.00292921066284
TIMES : FUN:4068.f : 0.00291895866394
=================================
Finished an SCC (1)
=================================
Summary for function: pci_set_drvdata:4068.f
=======

SUMS (nm, lo, un, wr, re):	pci_set_drvdata	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4068.f : 57214
>>> PROGRESS 261/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #811
=================================
Summarizing function: init_timer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:811 : 0.00131392478943
TIMES : FUN:1950.f : 0.00130319595337
=================================
Finished an SCC (1)
=================================
Summary for function: init_timer:1950.f
=======

SUMS (nm, lo, un, wr, re):	init_timer	0	0	3	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1950.f : 539
>>> PROGRESS 262/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #459
=================================
Summarizing function: mgsl_allocate_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5116.f : 0.00352001190186
TIMES : SCC:459 : 0.00353097915649
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_allocate_device:5116.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_allocate_device	0	0	31	5	

SS Sum:
 -> 
Mustptr -> lval = _a22124_702130_synclink_1
SIZES: 5116.f : 56320
>>> PROGRESS 263/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #460
=================================
Summarizing function: mgsl_add_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 33	misses: 2

doing lockset
doing guarded access
TIMES : SCC:460 : 0.00226283073425
TIMES : FUN:5115.f : 0.00225114822388
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_add_device:5115.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_add_device	0	0	9	18	

SS Sum:
 -> 
$SSBOT
SIZES: 5115.f : 55755
>>> PROGRESS 264/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #177
=================================
Summarizing function: synclink_init_one : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:177 : 0.00457715988159
TIMES : FUN:5218.f : 0.00456690788269
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_init_one:5218.f
=======

SUMS (nm, lo, un, wr, re):	synclink_init_one	0	0	47	26	

SS Sum:
 -> 
$SSTOP
SIZES: 5218.f : 64950
>>> PROGRESS 265/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #788
=================================
Summarizing function: set_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 66	misses: 2

doing lockset
doing guarded access
TIMES : SCC:788 : 0.000667810440063
TIMES : FUN:159.f : 0.000654935836792
=================================
Finished an SCC (1)
=================================
Summary for function: set_bit:159.f
=======

SUMS (nm, lo, un, wr, re):	set_bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 159.f : 34
>>> PROGRESS 266/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #178
=================================
Summarizing function: __node_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:178 : 0.000815868377686
TIMES : FUN:1191.f : 0.000805854797363
=================================
Finished an SCC (1)
=================================
Summary for function: __node_set:1191.f
=======

SUMS (nm, lo, un, wr, re):	__node_set	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1191.f : 34
>>> PROGRESS 267/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #500
=================================
Summarizing function: mgsl_free_intermediate_txbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5134.f : 0.00126004219055
TIMES : SCC:500 : 0.00127100944519
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_intermediate_txbuffer_memory:5134.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_intermediate_txbuffer_memory	0	0	4	2	

SS Sum:
 -> 
$SSBOT
SIZES: 5134.f : 54711
>>> PROGRESS 268/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #501
=================================
Summarizing function: mgsl_free_intermediate_rxbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5132.f : 0.000998020172119
TIMES : SCC:501 : 0.00100898742676
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_intermediate_rxbuffer_memory:5132.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_intermediate_rxbuffer_memory	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5132.f : 54518
>>> PROGRESS 269/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #503
=================================
Summarizing function: mgsl_free_buffer_list_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5130.f : 0.00112295150757
TIMES : SCC:503 : 0.00113391876221
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_buffer_list_memory:5130.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_buffer_list_memory	0	0	3	2	

SS Sum:
 -> 
$SSBOT
SIZES: 5130.f : 54632
>>> PROGRESS 270/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #504
=================================
Summarizing function: mgsl_free_frame_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5128.f : 0.00138878822327
TIMES : SCC:504 : 0.0014009475708
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_frame_memory:5128.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_frame_memory	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 5128.f : 54555
>>> PROGRESS 271/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #502
=================================
Summarizing function: mgsl_free_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:502 : 0.00265002250671
TIMES : FUN:5126.f : 0.00264000892639
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_dma_buffers:5126.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_dma_buffers	0	0	4	7	

SS Sum:
 -> 
$SSBOT
SIZES: 5126.f : 54888
>>> PROGRESS 272/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #542
=================================
Summarizing function: outb_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 12	misses: 2

doing lockset
doing guarded access
TIMES : SCC:542 : 0.000640869140625
TIMES : FUN:2815.f : 0.00062894821167
=================================
Finished an SCC (1)
=================================
Summary for function: outb_local:2815.f
=======

SUMS (nm, lo, un, wr, re):	outb_local	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2815.f : 34
>>> PROGRESS 273/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #541
=================================
Summarizing function: outb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2829.f : 0.000811100006104
TIMES : SCC:541 : 0.000822067260742
=================================
Finished an SCC (1)
=================================
Summary for function: outb:2829.f
=======

SUMS (nm, lo, un, wr, re):	outb	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2829.f : 34
>>> PROGRESS 274/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #537
=================================
Summarizing function: disable_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4992.f : 0.00437712669373
TIMES : SCC:537 : 0.00438714027405
=================================
Finished an SCC (1)
=================================
Summary for function: disable_dma:4992.f
=======

SUMS (nm, lo, un, wr, re):	disable_dma	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4992.f : 34
>>> PROGRESS 275/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #499
=================================
Summarizing function: mgsl_release_resources : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:499 : 0.00546813011169
TIMES : FUN:5114.f : 0.00545716285706
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_release_resources:5114.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_release_resources	0	0	16	25	

SS Sum:
 -> 
$SSBOT
SIZES: 5114.f : 56145
>>> PROGRESS 276/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #457
=================================
Summarizing function: synclink_cleanup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 30	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5806.f : 0.00966310501099
TIMES : SCC:457 : 0.00967502593994
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_cleanup:5806.f
=======

SUMS (nm, lo, un, wr, re):	synclink_cleanup	0	0	17	32	

SS Sum:
 -> 
$SSBOT
SIZES: 5806.f : 56513
>>> PROGRESS 277/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #455
=================================
Summarizing function: synclink_exit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 47	misses: 2

doing lockset
doing guarded access
TIMES : FUN:2340.f : 0.00168013572693
TIMES : SCC:455 : 0.00169110298157
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_exit:2340.f
=======

SUMS (nm, lo, un, wr, re):	synclink_exit	0	0	17	32	

SS Sum:
 -> 
$SSBOT
SIZES: 2340.f : 56514
>>> PROGRESS 278/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #179
=================================
Summarizing function: cleanup_module : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 49	misses: 1

doing lockset
doing guarded access
TIMES : SCC:179 : 0.00206708908081
TIMES : FUN:2341.f : 0.00205779075623
=================================
Finished an SCC (1)
=================================
Summary for function: cleanup_module:2341.f
=======

SUMS (nm, lo, un, wr, re):	cleanup_module	0	0	17	32	

SS Sum:
 -> 
$SSBOT
SIZES: 2341.f : 56514
>>> PROGRESS 279/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #180
=================================
Summarizing function: outsl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 49	misses: 1

doing lockset
doing guarded access
TIMES : SCC:180 : 0.000663042068481
TIMES : FUN:2915.f : 0.000652074813843
=================================
Finished an SCC (1)
=================================
Summary for function: outsl:2915.f
=======

SUMS (nm, lo, un, wr, re):	outsl	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2915.f : 34
>>> PROGRESS 280/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #733
=================================
Summarizing function: dev_get_drvdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:733 : 0.00072193145752
TIMES : FUN:2573.f : 0.000712871551514
=================================
Finished an SCC (1)
=================================
Summary for function: dev_get_drvdata:2573.f
=======

SUMS (nm, lo, un, wr, re):	dev_get_drvdata	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(dev->driver_data))

SIZES: 2573.f : 52530
>>> PROGRESS 281/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #181
=================================
Summarizing function: pci_get_drvdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4065.f : 0.00224995613098
TIMES : SCC:181 : 0.00225901603699
=================================
Finished an SCC (1)
=================================
Summary for function: pci_get_drvdata:4065.f
=======

SUMS (nm, lo, un, wr, re):	pci_get_drvdata	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(pdev->dev.driver_data))

SIZES: 4065.f : 109552
>>> PROGRESS 282/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #461
=================================
Summarizing function: irq_canonicalize : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:461 : 0.00066089630127
TIMES : FUN:2384.f : 0.000648021697998
=================================
Finished an SCC (1)
=================================
Summary for function: irq_canonicalize:2384.f
=======

SUMS (nm, lo, un, wr, re):	irq_canonicalize	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2384.f : 34
>>> PROGRESS 283/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #458
=================================
Summarizing function: mgsl_enum_isa_devices : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:458 : 0.00892496109009
TIMES : FUN:5802.f : 0.00891399383545
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_enum_isa_devices:5802.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_enum_isa_devices	0	0	43	27	

SS Sum:
 -> 
$SSBOT
SIZES: 5802.f : 112312
>>> PROGRESS 284/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #462
=================================
Summarizing function: mgsl_init_tty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 66	misses: 2

doing lockset
doing guarded access
TIMES : SCC:462 : 0.00229096412659
TIMES : FUN:5800.f : 0.00227999687195
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_init_tty:5800.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_init_tty	0	0	11	6	

SS Sum:
 -> 
$SSTOP
SIZES: 5800.f : 50778
>>> PROGRESS 285/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #463
=================================
Summarizing function: mgsl_get_text_ptr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5227.f : 0.000670909881592
TIMES : SCC:463 : 0.00068187713623
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_text_ptr:5227.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_text_ptr	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = mgsl_get_text_ptr
SIZES: 5227.f : 34
>>> PROGRESS 286/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #456
=================================
Summarizing function: synclink_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2337.f : 0.00701189041138
TIMES : SCC:456 : 0.00702309608459
=================================
Finished an SCC (1)
=================================
Summary for function: synclink_init:2337.f
=======

SUMS (nm, lo, un, wr, re):	synclink_init	0	0	72	61	

SS Sum:
 -> 
$SSTOP
SIZES: 2337.f : 115235
>>> PROGRESS 287/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #182
=================================
Summarizing function: init_module : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 141	misses: 2

doing lockset
doing guarded access
TIMES : SCC:182 : 0.00693702697754
TIMES : FUN:2338.f : 0.00692701339722
=================================
Finished an SCC (1)
=================================
Summary for function: init_module:2338.f
=======

SUMS (nm, lo, un, wr, re):	init_module	0	0	72	61	

SS Sum:
 -> 
$SSTOP
SIZES: 2338.f : 115235
>>> PROGRESS 288/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #183
=================================
Summarizing function: pci_domain_nr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 133	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4063.f : 0.000900030136108
TIMES : SCC:183 : 0.000911951065063
=================================
Finished an SCC (1)
=================================
Summary for function: pci_domain_nr:4063.f
=======

SUMS (nm, lo, un, wr, re):	pci_domain_nr	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 4063.f : 34
>>> PROGRESS 289/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #184
=================================
Summarizing function: skb_tailroom : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:184 : 0.00319004058838
TIMES : FUN:4638.f : 0.00317907333374
=================================
Finished an SCC (1)
=================================
Summary for function: skb_tailroom:4638.f
=======

SUMS (nm, lo, un, wr, re):	skb_tailroom	0	0	0	3	

SS Sum:
 -> 
$SSTOP
SIZES: 4638.f : 127468
>>> PROGRESS 290/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #217
=================================
Summarizing function: inl_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2890.f : 0.000767946243286
TIMES : SCC:217 : 0.000779867172241
=================================
Finished an SCC (1)
=================================
Summary for function: inl_local:2890.f
=======

SUMS (nm, lo, un, wr, re):	inl_local	0	0	0	0	

SS Sum:
 -> 
Vval: value
SIZES: 2890.f : 34
>>> PROGRESS 291/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #198
=================================
Summarizing function: inl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:198 : 0.00452613830566
TIMES : FUN:2904.f : 0.00451707839966
=================================
Finished an SCC (1)
=================================
Summary for function: inl:2904.f
=======

SUMS (nm, lo, un, wr, re):	inl	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2904.f : 34
>>> PROGRESS 292/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #316
=================================
Summarizing function: slow_down_io : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2814.f : 0.00056004524231
TIMES : SCC:316 : 0.000571012496948
=================================
Finished an SCC (1)
=================================
Summary for function: slow_down_io:2814.f
=======

SUMS (nm, lo, un, wr, re):	slow_down_io	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2814.f : 34
>>> PROGRESS 293/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #186
=================================
Summarizing function: inl_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:186 : 0.00156092643738
TIMES : FUN:2910.f : 0.00155210494995
=================================
Finished an SCC (1)
=================================
Summary for function: inl_p:2910.f
=======

SUMS (nm, lo, un, wr, re):	inl_p	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2910.f : 34
>>> PROGRESS 294/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #248
=================================
Summarizing function: atomic_sub_and_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:565.f : 0.000577926635742
TIMES : SCC:248 : 0.000587940216064
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_sub_and_test:565.f
=======

SUMS (nm, lo, un, wr, re):	atomic_sub_and_test	0	0	0	0	

SS Sum:
 -> 
Vval: c
SIZES: 565.f : 34
>>> PROGRESS 295/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #387
=================================
Summarizing function: atomic_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:559.f : 0.000550985336304
TIMES : SCC:387 : 0.000563144683838
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_add:559.f
=======

SUMS (nm, lo, un, wr, re):	atomic_add	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 559.f : 34
>>> PROGRESS 296/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #187
=================================
Summarizing function: _raw_write_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:609.f : 0.0012800693512
TIMES : SCC:187 : 0.0012891292572
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_write_trylock:609.f
=======

SUMS (nm, lo, un, wr, re):	_raw_write_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 609.f : 34
>>> PROGRESS 297/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #188
=================================
Summarizing function: sigandsets : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1759.f : 0.0014979839325
TIMES : SCC:188 : 0.0015070438385
=================================
Finished an SCC (1)
=================================
Summary for function: sigandsets:1759.f
=======

SUMS (nm, lo, un, wr, re):	sigandsets	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1759.f : 426
>>> PROGRESS 298/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #189
=================================
Summarizing function: local_sub : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2334.f : 0.000567197799683
TIMES : SCC:189 : 0.000576972961426
=================================
Finished an SCC (1)
=================================
Summary for function: local_sub:2334.f
=======

SUMS (nm, lo, un, wr, re):	local_sub	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2334.f : 34
>>> PROGRESS 299/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #190
=================================
Summarizing function: pci_get_legacy_ide_irq : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:190 : 0.000854015350342
TIMES : FUN:4059.f : 0.00084400177002
=================================
Finished an SCC (1)
=================================
Summary for function: pci_get_legacy_ide_irq:4059.f
=======

SUMS (nm, lo, un, wr, re):	pci_get_legacy_ide_irq	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4059.f : 34
>>> PROGRESS 300/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #222
=================================
Summarizing function: outl_local : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2887.f : 0.000772953033447
TIMES : SCC:222 : 0.000787019729614
=================================
Finished an SCC (1)
=================================
Summary for function: outl_local:2887.f
=======

SUMS (nm, lo, un, wr, re):	outl_local	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2887.f : 34
>>> PROGRESS 301/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #203
=================================
Summarizing function: outl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:203 : 0.00081992149353
TIMES : FUN:2901.f : 0.000809907913208
=================================
Finished an SCC (1)
=================================
Summary for function: outl:2901.f
=======

SUMS (nm, lo, un, wr, re):	outl	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2901.f : 34
>>> PROGRESS 302/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #191
=================================
Summarizing function: outl_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2907.f : 0.00100803375244
TIMES : SCC:191 : 0.00101613998413
=================================
Finished an SCC (1)
=================================
Summary for function: outl_p:2907.f
=======

SUMS (nm, lo, un, wr, re):	outl_p	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2907.f : 34
>>> PROGRESS 303/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #857
=================================
Summarizing function: atomic_dec : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:571.f : 0.000530958175659
TIMES : SCC:857 : 0.000542163848877
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_dec:571.f
=======

SUMS (nm, lo, un, wr, re):	atomic_dec	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 571.f : 34
>>> PROGRESS 304/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #192
=================================
Summarizing function: _raw_read_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:606.f : 0.00110197067261
TIMES : SCC:192 : 0.00111103057861
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_read_trylock:606.f
=======

SUMS (nm, lo, un, wr, re):	_raw_read_trylock	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 606.f : 163
>>> PROGRESS 305/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #193
=================================
Summarizing function: __cpulist_parse : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:193 : 0.00100803375244
TIMES : FUN:1181.f : 0.000997066497803
=================================
Finished an SCC (1)
=================================
Summary for function: __cpulist_parse:1181.f
=======

SUMS (nm, lo, un, wr, re):	__cpulist_parse	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1181.f : 34
>>> PROGRESS 306/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #194
=================================
Summarizing function: local_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:194 : 0.000561952590942
TIMES : FUN:2331.f : 0.000553131103516
=================================
Finished an SCC (1)
=================================
Summary for function: local_add:2331.f
=======

SUMS (nm, lo, un, wr, re):	local_add	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2331.f : 34
>>> PROGRESS 307/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #195
=================================
Summarizing function: pcibios_resource_to_bus : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:195 : 0.000960826873779
TIMES : FUN:4055.f : 0.00095009803772
=================================
Finished an SCC (1)
=================================
Summary for function: pcibios_resource_to_bus:4055.f
=======

SUMS (nm, lo, un, wr, re):	pcibios_resource_to_bus	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4055.f : 447
>>> PROGRESS 308/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #196
=================================
Summarizing function: _raw_write_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:196 : 0.000874042510986
TIMES : FUN:604.f : 0.000863075256348
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_write_lock:604.f
=======

SUMS (nm, lo, un, wr, re):	_raw_write_lock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 604.f : 34
>>> PROGRESS 309/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #197
=================================
Summarizing function: local_dec : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:197 : 0.00059700012207
TIMES : FUN:2329.f : 0.000586032867432
=================================
Finished an SCC (1)
=================================
Summary for function: local_dec:2329.f
=======

SUMS (nm, lo, un, wr, re):	local_dec	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2329.f : 34
>>> PROGRESS 310/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #199
=================================
Summarizing function: _raw_read_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:602.f : 0.000702142715454
TIMES : SCC:199 : 0.000711917877197
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_read_lock:602.f
=======

SUMS (nm, lo, un, wr, re):	_raw_read_lock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 602.f : 34
>>> PROGRESS 311/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #200
=================================
Summarizing function: local_inc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2327.f : 0.000576972961426
TIMES : SCC:200 : 0.000587940216064
=================================
Finished an SCC (1)
=================================
Summary for function: local_inc:2327.f
=======

SUMS (nm, lo, un, wr, re):	local_inc	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2327.f : 34
>>> PROGRESS 312/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #335
=================================
Summarizing function: dma_mapping_error : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:335 : 0.000689029693604
TIMES : FUN:3952.f : 0.000676870346069
=================================
Finished an SCC (1)
=================================
Summary for function: dma_mapping_error:3952.f
=======

SUMS (nm, lo, un, wr, re):	dma_mapping_error	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 3952.f : 34
>>> PROGRESS 313/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #201
=================================
Summarizing function: pci_dma_mapping_error : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:201 : 0.00121784210205
TIMES : FUN:4052.f : 0.00120806694031
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dma_mapping_error:4052.f
=======

SUMS (nm, lo, un, wr, re):	pci_dma_mapping_error	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4052.f : 34
>>> PROGRESS 314/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #202
=================================
Summarizing function: pskb_may_pull : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:202 : 0.0178921222687
TIMES : FUN:4627.f : 0.0178818702698
=================================
Finished an SCC (1)
=================================
Summary for function: pskb_may_pull:4627.f
=======

SUMS (nm, lo, un, wr, re):	pskb_may_pull	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4627.f : 127617
>>> PROGRESS 315/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #204
=================================
Summarizing function: _raw_spin_lock_flags : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 2

doing lockset
doing guarded access
TIMES : FUN:599.f : 0.000599145889282
TIMES : SCC:204 : 0.000609874725342
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_spin_lock_flags:599.f
=======

SUMS (nm, lo, un, wr, re):	_raw_spin_lock_flags	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 599.f : 34
>>> PROGRESS 316/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #205
=================================
Summarizing function: __cpulist_scnprintf : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:205 : 0.00111198425293
TIMES : FUN:1174.f : 0.00110101699829
=================================
Finished an SCC (1)
=================================
Summary for function: __cpulist_scnprintf:1174.f
=======

SUMS (nm, lo, un, wr, re):	__cpulist_scnprintf	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1174.f : 34
>>> PROGRESS 317/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #206
=================================
Summarizing function: _raw_spin_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:597.f : 0.000569820404053
TIMES : SCC:206 : 0.000580072402954
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_spin_lock:597.f
=======

SUMS (nm, lo, un, wr, re):	_raw_spin_lock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 597.f : 34
>>> PROGRESS 318/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #207
=================================
Summarizing function: sigorsets : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1747.f : 0.00157785415649
TIMES : SCC:207 : 0.0015869140625
=================================
Finished an SCC (1)
=================================
Summary for function: sigorsets:1747.f
=======

SUMS (nm, lo, un, wr, re):	sigorsets	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1747.f : 426
>>> PROGRESS 319/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #208
=================================
Summarizing function: inl_local_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2896.f : 0.00508117675781
TIMES : SCC:208 : 0.00508999824524
=================================
Finished an SCC (1)
=================================
Summary for function: inl_local_p:2896.f
=======

SUMS (nm, lo, un, wr, re):	inl_local_p	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2896.f : 34
>>> PROGRESS 320/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #445
=================================
Summarizing function: flush_write_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:445 : 0.000623941421509
TIMES : FUN:2813.f : 0.00061297416687
=================================
Finished an SCC (1)
=================================
Summary for function: flush_write_buffers:2813.f
=======

SUMS (nm, lo, un, wr, re):	flush_write_buffers	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2813.f : 34
>>> PROGRESS 321/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #341
=================================
Summarizing function: dma_sync_sg_for_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3947.f : 0.000815868377686
TIMES : SCC:341 : 0.000824928283691
=================================
Finished an SCC (1)
=================================
Summary for function: dma_sync_sg_for_device:3947.f
=======

SUMS (nm, lo, un, wr, re):	dma_sync_sg_for_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3947.f : 34
>>> PROGRESS 322/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #209
=================================
Summarizing function: pci_dma_sync_sg_for_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:209 : 0.000985860824585
TIMES : FUN:4046.f : 0.000975131988525
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dma_sync_sg_for_device:4046.f
=======

SUMS (nm, lo, un, wr, re):	pci_dma_sync_sg_for_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4046.f : 34
>>> PROGRESS 323/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #210
=================================
Summarizing function: __check_debug_level : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5196.f : 0.000586032867432
TIMES : SCC:210 : 0.00059700012207
=================================
Finished an SCC (1)
=================================
Summary for function: __check_debug_level:5196.f
=======

SUMS (nm, lo, un, wr, re):	__check_debug_level	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = debug_level
SIZES: 5196.f : 34
>>> PROGRESS 324/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #219
=================================
Summarizing function: __pskb_pull : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4614.f : 0.00372099876404
TIMES : SCC:219 : 0.00373196601868
=================================
Finished an SCC (1)
=================================
Summary for function: __pskb_pull:4614.f
=======

SUMS (nm, lo, un, wr, re):	__pskb_pull	0	0	2	3	

SS Sum:
 -> 
Extptr (2):
  lval = (*$NULL)(sum)
  lval = (*(skb->data))

SIZES: 4614.f : 127742
>>> PROGRESS 325/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #211
=================================
Summarizing function: pskb_pull : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:211 : 0.00399589538574
TIMES : FUN:4620.f : 0.00398683547974
=================================
Finished an SCC (1)
=================================
Summary for function: pskb_pull:4620.f
=======

SUMS (nm, lo, un, wr, re):	pskb_pull	0	0	2	3	

SS Sum:
 -> 
$SSTOP
SIZES: 4620.f : 127764
>>> PROGRESS 326/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #212
=================================
Summarizing function: _raw_spin_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:212 : 0.000694990158081
TIMES : FUN:594.f : 0.000684022903442
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_spin_trylock:594.f
=======

SUMS (nm, lo, un, wr, re):	_raw_spin_trylock	0	0	0	0	

SS Sum:
 -> 
Vval: oldval > 0
SIZES: 594.f : 34
>>> PROGRESS 327/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #213
=================================
Summarizing function: outl_local_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:213 : 0.000969171524048
TIMES : FUN:2893.f : 0.000959873199463
=================================
Finished an SCC (1)
=================================
Summary for function: outl_local_p:2893.f
=======

SUMS (nm, lo, un, wr, re):	outl_local_p	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2893.f : 34
>>> PROGRESS 328/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #214
=================================
Summarizing function: copy_siginfo : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:214 : 0.00104594230652
TIMES : FUN:1742.f : 0.00103712081909
=================================
Finished an SCC (1)
=================================
Summary for function: copy_siginfo:1742.f
=======

SUMS (nm, lo, un, wr, re):	copy_siginfo	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1742.f : 1722
>>> PROGRESS 329/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #215
=================================
Summarizing function: __cpumask_parse : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1167.f : 0.00276207923889
TIMES : SCC:215 : 0.00277519226074
=================================
Finished an SCC (1)
=================================
Summary for function: __cpumask_parse:1167.f
=======

SUMS (nm, lo, un, wr, re):	__cpumask_parse	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1167.f : 34
>>> PROGRESS 330/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #216
=================================
Summarizing function: _raw_spin_unlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:216 : 0.000595092773438
TIMES : FUN:591.f : 0.000586032867432
=================================
Finished an SCC (1)
=================================
Summary for function: _raw_spin_unlock:591.f
=======

SUMS (nm, lo, un, wr, re):	_raw_spin_unlock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 591.f : 34
>>> PROGRESS 331/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #349
=================================
Summarizing function: dma_sync_sg_for_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:349 : 0.00066089630127
TIMES : FUN:3942.f : 0.000650882720947
=================================
Finished an SCC (1)
=================================
Summary for function: dma_sync_sg_for_cpu:3942.f
=======

SUMS (nm, lo, un, wr, re):	dma_sync_sg_for_cpu	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3942.f : 34
>>> PROGRESS 332/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #218
=================================
Summarizing function: pci_dma_sync_sg_for_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:218 : 0.00100088119507
TIMES : FUN:4040.f : 0.000992059707642
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dma_sync_sg_for_cpu:4040.f
=======

SUMS (nm, lo, un, wr, re):	pci_dma_sync_sg_for_cpu	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4040.f : 34
>>> PROGRESS 333/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #220
=================================
Summarizing function: sigfindinword : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:220 : 0.000690937042236
TIMES : FUN:1738.f : 0.000680923461914
=================================
Finished an SCC (1)
=================================
Summary for function: sigfindinword:1738.f
=======

SUMS (nm, lo, un, wr, re):	sigfindinword	0	0	0	0	

SS Sum:
 -> 
Vval: word
SIZES: 1738.f : 34
>>> PROGRESS 334/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #226
=================================
Summarizing function: atomic_add_return : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:583.f : 0.000982999801636
TIMES : SCC:226 : 0.000996828079224
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_add_return:583.f
=======

SUMS (nm, lo, un, wr, re):	atomic_add_return	0	0	0	0	

SS Sum:
 -> 
Vval: i + i
SIZES: 583.f : 34
>>> PROGRESS 335/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #221
=================================
Summarizing function: atomic_sub_return : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:587.f : 0.00118589401245
TIMES : SCC:221 : 0.00119590759277
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_sub_return:587.f
=======

SUMS (nm, lo, un, wr, re):	atomic_sub_return	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 587.f : 34
>>> PROGRESS 336/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #223
=================================
Summarizing function: __cpumask_scnprintf : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:223 : 0.00111413002014
TIMES : FUN:1160.f : 0.00110387802124
=================================
Finished an SCC (1)
=================================
Summary for function: __cpumask_scnprintf:1160.f
=======

SUMS (nm, lo, un, wr, re):	__cpumask_scnprintf	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1160.f : 34
>>> PROGRESS 337/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #224
=================================
Summarizing function: __gen_sigismember : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:224 : 0.000580072402954
TIMES : FUN:1734.f : 0.000571012496948
=================================
Finished an SCC (1)
=================================
Summary for function: __gen_sigismember:1734.f
=======

SUMS (nm, lo, un, wr, re):	__gen_sigismember	0	0	0	0	

SS Sum:
 -> 
Vval: ret
SIZES: 1734.f : 34
>>> PROGRESS 338/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #374
=================================
Summarizing function: dma_sync_single_for_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3925.f : 0.000888109207153
TIMES : SCC:374 : 0.000899076461792
=================================
Finished an SCC (1)
=================================
Summary for function: dma_sync_single_for_device:3925.f
=======

SUMS (nm, lo, un, wr, re):	dma_sync_single_for_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3925.f : 34
>>> PROGRESS 339/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #225
=================================
Summarizing function: pci_dma_sync_single_for_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4034.f : 0.000870943069458
TIMES : SCC:225 : 0.000880002975464
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dma_sync_single_for_device:4034.f
=======

SUMS (nm, lo, un, wr, re):	pci_dma_sync_single_for_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4034.f : 34
>>> PROGRESS 340/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #227
=================================
Summarizing function: insw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:227 : 0.000575065612793
TIMES : FUN:2883.f : 0.000566005706787
=================================
Finished an SCC (1)
=================================
Summary for function: insw:2883.f
=======

SUMS (nm, lo, un, wr, re):	insw	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2883.f : 34
>>> PROGRESS 341/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #236
=================================
Summarizing function: __skb_pull : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:236 : 0.00136303901672
TIMES : FUN:4602.f : 0.00135183334351
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_pull:4602.f
=======

SUMS (nm, lo, un, wr, re):	__skb_pull	0	0	2	3	

SS Sum:
 -> 
Extptr (1):
  lval = (*(skb->data))

SIZES: 4602.f : 63686
>>> PROGRESS 342/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #228
=================================
Summarizing function: skb_pull : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:228 : 0.00353002548218
TIMES : FUN:4606.f : 0.00352096557617
=================================
Finished an SCC (1)
=================================
Summary for function: skb_pull:4606.f
=======

SUMS (nm, lo, un, wr, re):	skb_pull	0	0	2	3	

SS Sum:
 -> 
$SSTOP
SIZES: 4606.f : 63708
>>> PROGRESS 343/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #229
=================================
Summarizing function: __const_sigismember : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:229 : 0.000866174697876
TIMES : FUN:1730.f : 0.000854969024658
=================================
Finished an SCC (1)
=================================
Summary for function: __const_sigismember:1730.f
=======

SUMS (nm, lo, un, wr, re):	__const_sigismember	0	0	0	1	

SS Sum:
 -> 
Vval: 1UL & (set->sig[0] >> (_sig - 1) % 32UL)
SIZES: 1730.f : 185
>>> PROGRESS 344/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #230
=================================
Summarizing function: __check_ttymajor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:230 : 0.000618934631348
TIMES : FUN:5180.f : 0.000608921051025
=================================
Finished an SCC (1)
=================================
Summary for function: __check_ttymajor:5180.f
=======

SUMS (nm, lo, un, wr, re):	__check_ttymajor	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = ttymajor
SIZES: 5180.f : 34
>>> PROGRESS 345/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #231
=================================
Summarizing function: atomic_add_negative : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:579.f : 0.000559091567993
TIMES : SCC:231 : 0.000568866729736
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_add_negative:579.f
=======

SUMS (nm, lo, un, wr, re):	atomic_add_negative	0	0	0	0	

SS Sum:
 -> 
Vval: c
SIZES: 579.f : 34
>>> PROGRESS 346/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #232
=================================
Summarizing function: outsw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:232 : 0.000610113143921
TIMES : FUN:2879.f : 0.000598907470703
=================================
Finished an SCC (1)
=================================
Summary for function: outsw:2879.f
=======

SUMS (nm, lo, un, wr, re):	outsw	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2879.f : 34
>>> PROGRESS 347/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #381
=================================
Summarizing function: dma_sync_single_for_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:381 : 0.000548124313354
TIMES : FUN:3920.f : 0.000536203384399
=================================
Finished an SCC (1)
=================================
Summary for function: dma_sync_single_for_cpu:3920.f
=======

SUMS (nm, lo, un, wr, re):	dma_sync_single_for_cpu	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3920.f : 34
>>> PROGRESS 348/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #233
=================================
Summarizing function: pci_dma_sync_single_for_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4028.f : 0.000865936279297
TIMES : SCC:233 : 0.000875949859619
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dma_sync_single_for_cpu:4028.f
=======

SUMS (nm, lo, un, wr, re):	pci_dma_sync_single_for_cpu	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4028.f : 34
>>> PROGRESS 349/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #234
=================================
Summarizing function: __next_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:234 : 0.00106692314148
TIMES : FUN:1152.f : 0.00105714797974
=================================
Finished an SCC (1)
=================================
Summary for function: __next_cpu:1152.f
=======

SUMS (nm, lo, un, wr, re):	__next_cpu	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1152.f : 34
>>> PROGRESS 350/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #235
=================================
Summarizing function: sigdelset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:235 : 0.000610113143921
TIMES : FUN:1727.f : 0.00059986114502
=================================
Finished an SCC (1)
=================================
Summary for function: sigdelset:1727.f
=======

SUMS (nm, lo, un, wr, re):	sigdelset	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1727.f : 34
>>> PROGRESS 351/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #237
=================================
Summarizing function: atomic_inc_and_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:576.f : 0.000565052032471
TIMES : SCC:237 : 0.000574827194214
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_inc_and_test:576.f
=======

SUMS (nm, lo, un, wr, re):	atomic_inc_and_test	0	0	0	0	

SS Sum:
 -> 
Vval: c != 0
SIZES: 576.f : 34
>>> PROGRESS 352/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #238
=================================
Summarizing function: __check_break_on_load : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:238 : 0.000571966171265
TIMES : FUN:5176.f : 0.000562191009521
=================================
Finished an SCC (1)
=================================
Summary for function: __check_break_on_load:5176.f
=======

SUMS (nm, lo, un, wr, re):	__check_break_on_load	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = break_on_load
SIZES: 5176.f : 34
>>> PROGRESS 353/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #239
=================================
Summarizing function: sigaddset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:239 : 0.00054407119751
TIMES : FUN:1724.f : 0.000535011291504
=================================
Finished an SCC (1)
=================================
Summary for function: sigaddset:1724.f
=======

SUMS (nm, lo, un, wr, re):	sigaddset	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1724.f : 34
>>> PROGRESS 354/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #240
=================================
Summarizing function: inw_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2874.f : 0.00235605239868
TIMES : SCC:240 : 0.00236582756042
=================================
Finished an SCC (1)
=================================
Summary for function: inw_p:2874.f
=======

SUMS (nm, lo, un, wr, re):	inw_p	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2874.f : 34
>>> PROGRESS 355/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #392
=================================
Summarizing function: dma_unmap_sg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3914.f : 0.0011579990387
TIMES : SCC:392 : 0.00116896629333
=================================
Finished an SCC (1)
=================================
Summary for function: dma_unmap_sg:3914.f
=======

SUMS (nm, lo, un, wr, re):	dma_unmap_sg	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3914.f : 34
>>> PROGRESS 356/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #241
=================================
Summarizing function: pci_unmap_sg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:241 : 0.000900030136108
TIMES : FUN:4022.f : 0.000890016555786
=================================
Finished an SCC (1)
=================================
Summary for function: pci_unmap_sg:4022.f
=======

SUMS (nm, lo, un, wr, re):	pci_unmap_sg	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4022.f : 34
>>> PROGRESS 357/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #242
=================================
Summarizing function: skb_push : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:242 : 0.116417884827
TIMES : FUN:4597.f : 0.116408109665
=================================
Finished an SCC (1)
=================================
Summary for function: skb_push:4597.f
=======

SUMS (nm, lo, un, wr, re):	skb_push	0	0	2	3	

SS Sum:
 -> 
Extptr (1):
  lval = (*(skb->data))

SIZES: 4597.f : 63686
>>> PROGRESS 358/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #243
=================================
Summarizing function: outw_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:243 : 0.00110483169556
TIMES : FUN:2871.f : 0.00109601020813
=================================
Finished an SCC (1)
=================================
Summary for function: outw_p:2871.f
=======

SUMS (nm, lo, un, wr, re):	outw_p	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2871.f : 34
>>> PROGRESS 359/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #244
=================================
Summarizing function: __first_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:244 : 0.0011191368103
TIMES : FUN:1144.f : 0.00110912322998
=================================
Finished an SCC (1)
=================================
Summary for function: __first_cpu:1144.f
=======

SUMS (nm, lo, un, wr, re):	__first_cpu	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1144.f : 34
>>> PROGRESS 360/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #245
=================================
Summarizing function: blockdev_direct_IO_own_locking : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:245 : 0.00118899345398
TIMES : FUN:3444.f : 0.00117897987366
=================================
Finished an SCC (1)
=================================
Summary for function: blockdev_direct_IO_own_locking:3444.f
=======

SUMS (nm, lo, un, wr, re):	blockdev_direct_IO_own_locking	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3444.f : 34
>>> PROGRESS 361/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #246
=================================
Summarizing function: __skb_push : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:246 : 0.000805854797363
TIMES : FUN:4594.f : 0.00079607963562
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_push:4594.f
=======

SUMS (nm, lo, un, wr, re):	__skb_push	0	0	2	2	

SS Sum:
 -> 
Extptr (1):
  lval = (*(skb->data))

SIZES: 4594.f : 63638
>>> PROGRESS 362/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #268
=================================
Summarizing function: kset_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:268 : 0.000923871994019
TIMES : FUN:2276.f : 0.000913143157959
=================================
Finished an SCC (1)
=================================
Summary for function: kset_put:2276.f
=======

SUMS (nm, lo, un, wr, re):	kset_put	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2276.f : 34
>>> PROGRESS 363/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #247
=================================
Summarizing function: subsys_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2293.f : 0.000828981399536
TIMES : SCC:247 : 0.000838041305542
=================================
Finished an SCC (1)
=================================
Summary for function: subsys_put:2293.f
=======

SUMS (nm, lo, un, wr, re):	subsys_put	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2293.f : 34
>>> PROGRESS 364/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #249
=================================
Summarizing function: on_each_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:249 : 0.0011248588562
TIMES : FUN:1715.f : 0.00111508369446
=================================
Finished an SCC (1)
=================================
Summary for function: on_each_cpu:1715.f
=======

SUMS (nm, lo, un, wr, re):	on_each_cpu	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1715.f : 34
>>> PROGRESS 365/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #418
=================================
Summarizing function: dma_map_sg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:418 : 0.00219821929932
TIMES : FUN:3893.f : 0.00218796730042
=================================
Finished an SCC (1)
=================================
Summary for function: dma_map_sg:3893.f
=======

SUMS (nm, lo, un, wr, re):	dma_map_sg	0	0	1	3	

SS Sum:
 -> 
Vval: nents
SIZES: 3893.f : 50331
>>> PROGRESS 366/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #250
=================================
Summarizing function: pci_map_sg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:250 : 0.00179505348206
TIMES : FUN:4015.f : 0.00178599357605
=================================
Finished an SCC (1)
=================================
Summary for function: pci_map_sg:4015.f
=======

SUMS (nm, lo, un, wr, re):	pci_map_sg	0	0	1	3	

SS Sum:
 -> 
Vval: nents
SIZES: 4015.f : 50331
>>> PROGRESS 367/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #251
=================================
Summarizing function: __cpus_shift_left : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1139.f : 0.00102305412292
TIMES : SCC:251 : 0.00103116035461
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_shift_left:1139.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_shift_left	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1139.f : 217
>>> PROGRESS 368/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #252
=================================
Summarizing function: atomic_sub : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:252 : 0.000596046447754
TIMES : FUN:562.f : 0.000585794448853
=================================
Finished an SCC (1)
=================================
Summary for function: atomic_sub:562.f
=======

SUMS (nm, lo, un, wr, re):	atomic_sub	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 562.f : 34
>>> PROGRESS 369/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #290
=================================
Summarizing function: to_kset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:290 : 0.000876903533936
TIMES : FUN:2265.f : 0.000866174697876
=================================
Finished an SCC (1)
=================================
Summary for function: to_kset:2265.f
=======

SUMS (nm, lo, un, wr, re):	to_kset	0	0	0	0	

SS Sum:
 -> 
Extptr (1):
  lval = (*kobj)

SIZES: 2265.f : 34
>>> PROGRESS 370/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #279
=================================
Summarizing function: kset_get : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2270.f : 0.00143599510193
TIMES : SCC:279 : 0.00144505500793
=================================
Finished an SCC (1)
=================================
Summary for function: kset_get:2270.f
=======

SUMS (nm, lo, un, wr, re):	kset_get	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2270.f : 34
>>> PROGRESS 371/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #253
=================================
Summarizing function: subsys_get : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:2285.f : 0.00116014480591
TIMES : SCC:253 : 0.00116801261902
=================================
Finished an SCC (1)
=================================
Summary for function: subsys_get:2285.f
=======

SUMS (nm, lo, un, wr, re):	subsys_get	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2285.f : 34
>>> PROGRESS 372/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #254
=================================
Summarizing function: inw_local_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:254 : 0.00126194953918
TIMES : FUN:2860.f : 0.00125408172607
=================================
Finished an SCC (1)
=================================
Summary for function: inw_local_p:2860.f
=======

SUMS (nm, lo, un, wr, re):	inw_local_p	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2860.f : 34
>>> PROGRESS 373/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #256
=================================
Summarizing function: __cpus_shift_right : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:256 : 0.00116896629333
TIMES : FUN:1134.f : 0.00115704536438
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_shift_right:1134.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_shift_right	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1134.f : 217
>>> PROGRESS 374/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #401
=================================
Summarizing function: dma_unmap_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3908.f : 0.00108909606934
TIMES : SCC:401 : 0.0010998249054
=================================
Finished an SCC (1)
=================================
Summary for function: dma_unmap_page:3908.f
=======

SUMS (nm, lo, un, wr, re):	dma_unmap_page	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3908.f : 34
>>> PROGRESS 375/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #257
=================================
Summarizing function: pci_unmap_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4009.f : 0.000905990600586
TIMES : SCC:257 : 0.000913858413696
=================================
Finished an SCC (1)
=================================
Summary for function: pci_unmap_page:4009.f
=======

SUMS (nm, lo, un, wr, re):	pci_unmap_page	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4009.f : 34
>>> PROGRESS 376/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #310
=================================
Summarizing function: clear_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:521.f : 0.00123310089111
TIMES : SCC:310 : 0.00124287605286
=================================
Finished an SCC (1)
=================================
Summary for function: clear_thread_flag:521.f
=======

SUMS (nm, lo, un, wr, re):	clear_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 521.f : 34
>>> PROGRESS 377/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #258
=================================
Summarizing function: clear_need_resched : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:558.f : 0.000844955444336
TIMES : SCC:258 : 0.000854969024658
=================================
Finished an SCC (1)
=================================
Summary for function: clear_need_resched:558.f
=======

SUMS (nm, lo, un, wr, re):	clear_need_resched	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 558.f : 34
>>> PROGRESS 378/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #313
=================================
Summarizing function: set_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:518.f : 0.00123000144958
TIMES : SCC:313 : 0.00123906135559
=================================
Finished an SCC (1)
=================================
Summary for function: set_thread_flag:518.f
=======

SUMS (nm, lo, un, wr, re):	set_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 518.f : 34
>>> PROGRESS 379/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #259
=================================
Summarizing function: set_need_resched : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:557.f : 0.000881195068359
TIMES : SCC:259 : 0.000890970230103
=================================
Finished an SCC (1)
=================================
Summary for function: set_need_resched:557.f
=======

SUMS (nm, lo, un, wr, re):	set_need_resched	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 557.f : 34
>>> PROGRESS 380/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #432
=================================
Summarizing function: fix_to_virt : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:432 : 0.000921010971069
TIMES : FUN:1582.f : 0.000909805297852
=================================
Finished an SCC (1)
=================================
Summary for function: fix_to_virt:1582.f
=======

SUMS (nm, lo, un, wr, re):	fix_to_virt	0	0	0	0	

SS Sum:
 -> 
Vval: 4294963200UL - (idx << 12)
SIZES: 1582.f : 34
>>> PROGRESS 381/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #260
=================================
Summarizing function: logical_smp_processor_id : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1707.f : 0.00482702255249
TIMES : SCC:260 : 0.0048360824585
=================================
Finished an SCC (1)
=================================
Summary for function: logical_smp_processor_id:1707.f
=======

SUMS (nm, lo, un, wr, re):	logical_smp_processor_id	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1707.f : 95
>>> PROGRESS 382/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #261
=================================
Summarizing function: outw_local_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:261 : 0.00103688240051
TIMES : FUN:2857.f : 0.00102806091309
=================================
Finished an SCC (1)
=================================
Summary for function: outw_local_p:2857.f
=======

SUMS (nm, lo, un, wr, re):	outw_local_p	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2857.f : 34
>>> PROGRESS 383/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #262
=================================
Summarizing function: blockdev_direct_IO_no_locking : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:262 : 0.00104904174805
TIMES : FUN:3432.f : 0.00103902816772
=================================
Finished an SCC (1)
=================================
Summary for function: blockdev_direct_IO_no_locking:3432.f
=======

SUMS (nm, lo, un, wr, re):	blockdev_direct_IO_no_locking	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3432.f : 34
>>> PROGRESS 384/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #267
=================================
Summarizing function: get_apic_id : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:267 : 0.000612020492554
TIMES : FUN:1701.f : 0.000602006912231
=================================
Finished an SCC (1)
=================================
Summary for function: get_apic_id:1701.f
=======

SUMS (nm, lo, un, wr, re):	get_apic_id	0	0	0	0	

SS Sum:
 -> 
Vval: (x >> 24) & 255UL
SIZES: 1701.f : 34
>>> PROGRESS 385/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #263
=================================
Summarizing function: hard_smp_processor_id : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:263 : 0.00295615196228
TIMES : FUN:1703.f : 0.00294613838196
=================================
Finished an SCC (1)
=================================
Summary for function: hard_smp_processor_id:1703.f
=======

SUMS (nm, lo, un, wr, re):	hard_smp_processor_id	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1703.f : 95
>>> PROGRESS 386/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #264
=================================
Summarizing function: get_ktype : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:2278.f : 0.000883102416992
TIMES : SCC:264 : 0.000891923904419
=================================
Finished an SCC (1)
=================================
Summary for function: get_ktype:2278.f
=======

SUMS (nm, lo, un, wr, re):	get_ktype	0	0	0	3	

SS Sum:
 -> 
Extptr (8):
  lval = (*(k->ktype))
  lval = (*((k->kset)->ktype))

SIZES: 2278.f : 50142
>>> PROGRESS 387/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #265
=================================
Summarizing function: __skb_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4578.f : 0.00307703018188
TIMES : SCC:265 : 0.00308680534363
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_put:4578.f
=======

SUMS (nm, lo, un, wr, re):	__skb_put	0	0	2	3	

SS Sum:
 -> 
Extptr (1):
  lval = (*(skb->tail))

SIZES: 4578.f : 127506
>>> PROGRESS 388/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #266
=================================
Summarizing function: __cpus_full : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:266 : 0.00109887123108
TIMES : FUN:1126.f : 0.00108909606934
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_full:1126.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_full	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1126.f : 168
>>> PROGRESS 389/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #412
=================================
Summarizing function: dma_map_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:412 : 0.00108981132507
TIMES : FUN:3901.f : 0.00107908248901
=================================
Finished an SCC (1)
=================================
Summary for function: dma_map_page:3901.f
=======

SUMS (nm, lo, un, wr, re):	dma_map_page	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3901.f : 95
>>> PROGRESS 390/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #269
=================================
Summarizing function: pci_map_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4001.f : 0.00116014480591
TIMES : SCC:269 : 0.00116896629333
=================================
Finished an SCC (1)
=================================
Summary for function: pci_map_page:4001.f
=======

SUMS (nm, lo, un, wr, re):	pci_map_page	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4001.f : 95
>>> PROGRESS 391/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #271
=================================
Summarizing function: __cpus_weight : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1130.f : 0.000983953475952
TIMES : SCC:271 : 0.000993013381958
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_weight:1130.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_weight	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1130.f : 34
>>> PROGRESS 392/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #270
=================================
Summarizing function: num_booting_cpus : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:270 : 0.000958919525146
TIMES : FUN:1699.f : 0.000950813293457
=================================
Finished an SCC (1)
=================================
Summary for function: num_booting_cpus:1699.f
=======

SUMS (nm, lo, un, wr, re):	num_booting_cpus	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1699.f : 34
>>> PROGRESS 393/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #274
=================================
Summarizing function: __cpus_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:274 : 0.00112295150757
TIMES : FUN:1122.f : 0.00111293792725
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_empty:1122.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1122.f : 168
>>> PROGRESS 394/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #275
=================================
Summarizing function: insb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2847.f : 0.000542163848877
TIMES : SCC:275 : 0.00055193901062
=================================
Finished an SCC (1)
=================================
Summary for function: insb:2847.f
=======

SUMS (nm, lo, un, wr, re):	insb	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2847.f : 34
>>> PROGRESS 395/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #277
=================================
Summarizing function: skb_fill_page_desc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4571.f : 0.000918865203857
TIMES : SCC:277 : 0.000930070877075
=================================
Finished an SCC (1)
=================================
Summary for function: skb_fill_page_desc:4571.f
=======

SUMS (nm, lo, un, wr, re):	skb_fill_page_desc	0	0	4	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4571.f : 63957
>>> PROGRESS 396/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #280
=================================
Summarizing function: blockdev_direct_IO : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3420.f : 0.00104808807373
TIMES : SCC:280 : 0.00105810165405
=================================
Finished an SCC (1)
=================================
Summary for function: blockdev_direct_IO:3420.f
=======

SUMS (nm, lo, un, wr, re):	blockdev_direct_IO	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3420.f : 34
>>> PROGRESS 397/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #425
=================================
Summarizing function: dma_unmap_single : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:425 : 0.00101590156555
TIMES : FUN:3887.f : 0.00100612640381
=================================
Finished an SCC (1)
=================================
Summary for function: dma_unmap_single:3887.f
=======

SUMS (nm, lo, un, wr, re):	dma_unmap_single	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3887.f : 34
>>> PROGRESS 398/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #281
=================================
Summarizing function: pci_unmap_single : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:281 : 0.000953912734985
TIMES : FUN:3995.f : 0.000944137573242
=================================
Finished an SCC (1)
=================================
Summary for function: pci_unmap_single:3995.f
=======

SUMS (nm, lo, un, wr, re):	pci_unmap_single	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3995.f : 34
>>> PROGRESS 399/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #284
=================================
Summarizing function: outsb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2843.f : 0.000614166259766
TIMES : SCC:284 : 0.000627040863037
=================================
Finished an SCC (1)
=================================
Summary for function: outsb:2843.f
=======

SUMS (nm, lo, un, wr, re):	outsb	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2843.f : 34
>>> PROGRESS 400/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #286
=================================
Summarizing function: __cpus_subset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:286 : 0.00110292434692
TIMES : FUN:1117.f : 0.00109314918518
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_subset:1117.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_subset	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1117.f : 200
>>> PROGRESS 401/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #288
=================================
Summarizing function: skb_pagelen : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4566.f : 0.00278615951538
TIMES : SCC:288 : 0.00279498100281
=================================
Finished an SCC (1)
=================================
Summary for function: skb_pagelen:4566.f
=======

SUMS (nm, lo, un, wr, re):	skb_pagelen	0	0	0	4	

SS Sum:
 -> 
$SSTOP
SIZES: 4566.f : 127958
>>> PROGRESS 402/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #291
=================================
Summarizing function: do_generic_file_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:291 : 0.000888824462891
TIMES : FUN:3414.f : 0.000878095626831
=================================
Finished an SCC (1)
=================================
Summary for function: do_generic_file_read:3414.f
=======

SUMS (nm, lo, un, wr, re):	do_generic_file_read	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3414.f : 50018
>>> PROGRESS 403/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #293
=================================
Summarizing function: inb_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:293 : 0.00124287605286
TIMES : FUN:2838.f : 0.00123405456543
=================================
Finished an SCC (1)
=================================
Summary for function: inb_p:2838.f
=======

SUMS (nm, lo, un, wr, re):	inb_p	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2838.f : 34
>>> PROGRESS 404/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #487
=================================
Summarizing function: virt_to_phys : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:487 : 0.000602960586548
TIMES : FUN:2766.f : 0.000592947006226
=================================
Finished an SCC (1)
=================================
Summary for function: virt_to_phys:2766.f
=======

SUMS (nm, lo, un, wr, re):	virt_to_phys	0	0	0	0	

SS Sum:
 -> 
Vval: (unsigned long )address - 3221225472UL
SIZES: 2766.f : 34
>>> PROGRESS 405/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #435
=================================
Summarizing function: dma_map_single : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3879.f : 0.00163698196411
TIMES : SCC:435 : 0.00164699554443
=================================
Finished an SCC (1)
=================================
Summary for function: dma_map_single:3879.f
=======

SUMS (nm, lo, un, wr, re):	dma_map_single	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3879.f : 34
>>> PROGRESS 406/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #294
=================================
Summarizing function: pci_map_single : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3988.f : 0.00105214118958
TIMES : SCC:294 : 0.00106000900269
=================================
Finished an SCC (1)
=================================
Summary for function: pci_map_single:3988.f
=======

SUMS (nm, lo, un, wr, re):	pci_map_single	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3988.f : 34
>>> PROGRESS 407/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #295
=================================
Summarizing function: __cpus_intersects : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1112.f : 0.00111103057861
TIMES : SCC:295 : 0.00112009048462
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_intersects:1112.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_intersects	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1112.f : 200
>>> PROGRESS 408/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #297
=================================
Summarizing function: outb_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:297 : 0.000956058502197
TIMES : FUN:2835.f : 0.000946998596191
=================================
Finished an SCC (1)
=================================
Summary for function: outb_p:2835.f
=======

SUMS (nm, lo, un, wr, re):	outb_p	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2835.f : 34
>>> PROGRESS 409/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #298
=================================
Summarizing function: __cpus_equal : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:298 : 0.00117111206055
TIMES : FUN:1107.f : 0.00116205215454
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_equal:1107.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_equal	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1107.f : 200
>>> PROGRESS 410/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #299
=================================
Summarizing function: pci_free_consistent : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:299 : 0.00088906288147
TIMES : FUN:3982.f : 0.000879049301147
=================================
Finished an SCC (1)
=================================
Summary for function: pci_free_consistent:3982.f
=======

SUMS (nm, lo, un, wr, re):	pci_free_consistent	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3982.f : 34
>>> PROGRESS 411/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #303
=================================
Summarizing function: __skb_unlink : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4551.f : 0.00088095664978
TIMES : SCC:303 : 0.000890970230103
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_unlink:4551.f
=======

SUMS (nm, lo, un, wr, re):	__skb_unlink	0	0	4	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4551.f : 63752
>>> PROGRESS 412/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #355
=================================
Summarizing function: skb_peek_tail : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:355 : 0.000731945037842
TIMES : FUN:4513.f : 0.000719785690308
=================================
Finished an SCC (1)
=================================
Summary for function: skb_peek_tail:4513.f
=======

SUMS (nm, lo, un, wr, re):	skb_peek_tail	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(list_->prev))

SIZES: 4513.f : 63494
>>> PROGRESS 413/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #300
=================================
Summarizing function: __skb_dequeue_tail : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:300 : 0.00339198112488
TIMES : FUN:4557.f : 0.00338196754456
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_dequeue_tail:4557.f
=======

SUMS (nm, lo, un, wr, re):	__skb_dequeue_tail	0	0	3	2	

SS Sum:
 -> 
Extptr (1):
  lval = (*(list->prev))

SIZES: 4557.f : 127163
>>> PROGRESS 414/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #301
=================================
Summarizing function: test_and_clear_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 8	misses: 2

doing lockset
doing guarded access
TIMES : FUN:528.f : 0.00759601593018
TIMES : SCC:301 : 0.00760698318481
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_clear_thread_flag:528.f
=======

SUMS (nm, lo, un, wr, re):	test_and_clear_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 528.f : 34
>>> PROGRESS 415/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #302
=================================
Summarizing function: __cpus_complement : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:302 : 0.00158095359802
TIMES : FUN:1103.f : 0.00156688690186
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_complement:1103.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_complement	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1103.f : 217
>>> PROGRESS 416/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #304
=================================
Summarizing function: pci_alloc_consistent : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:304 : 0.00115609169006
TIMES : FUN:3975.f : 0.00114488601685
=================================
Finished an SCC (1)
=================================
Summary for function: pci_alloc_consistent:3975.f
=======

SUMS (nm, lo, un, wr, re):	pci_alloc_consistent	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3975.f : 34
>>> PROGRESS 417/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #305
=================================
Summarizing function: test_and_set_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:524.f : 0.00189280509949
TIMES : SCC:305 : 0.00190210342407
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_set_thread_flag:524.f
=======

SUMS (nm, lo, un, wr, re):	test_and_set_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 524.f : 34
>>> PROGRESS 418/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #306
=================================
Summarizing function: kobject_name : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:2249.f : 0.000770092010498
TIMES : SCC:306 : 0.00078010559082
=================================
Finished an SCC (1)
=================================
Summary for function: kobject_name:2249.f
=======

SUMS (nm, lo, un, wr, re):	kobject_name	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(kobj->k_name))

SIZES: 2249.f : 50020
>>> PROGRESS 419/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #307
=================================
Summarizing function: inb_local_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:307 : 0.00127387046814
TIMES : FUN:2824.f : 0.00126504898071
=================================
Finished an SCC (1)
=================================
Summary for function: inb_local_p:2824.f
=======

SUMS (nm, lo, un, wr, re):	inb_local_p	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2824.f : 34
>>> PROGRESS 420/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #308
=================================
Summarizing function: __cpus_andnot : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:308 : 0.00106692314148
TIMES : FUN:1098.f : 0.00105786323547
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_andnot:1098.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_andnot	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1098.f : 249
>>> PROGRESS 421/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #315
=================================
Summarizing function: __skb_insert : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : SCC:315 : 0.00104808807373
TIMES : FUN:4541.f : 0.00103688240051
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_insert:4541.f
=======

SUMS (nm, lo, un, wr, re):	__skb_insert	0	0	9	4	

SS Sum:
 -> 
$SSBOT
SIZES: 4541.f : 63892
>>> PROGRESS 422/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #309
=================================
Summarizing function: __skb_append : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:309 : 0.00207710266113
TIMES : FUN:4547.f : 0.00206804275513
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_append:4547.f
=======

SUMS (nm, lo, un, wr, re):	__skb_append	0	0	3	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4547.f : 63647
>>> PROGRESS 423/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #311
=================================
Summarizing function: outb_local_p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 13	misses: 1

doing lockset
doing guarded access
TIMES : SCC:311 : 0.00111722946167
TIMES : FUN:2821.f : 0.00110697746277
=================================
Finished an SCC (1)
=================================
Summary for function: outb_local_p:2821.f
=======

SUMS (nm, lo, un, wr, re):	outb_local_p	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2821.f : 34
>>> PROGRESS 424/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #330
=================================
Summarizing function: dma_supported : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3954.f : 0.000588893890381
TIMES : SCC:330 : 0.000600814819336
=================================
Finished an SCC (1)
=================================
Summary for function: dma_supported:3954.f
=======

SUMS (nm, lo, un, wr, re):	dma_supported	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3954.f : 34
>>> PROGRESS 425/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #312
=================================
Summarizing function: pci_dma_supported : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:312 : 0.00116300582886
TIMES : FUN:3970.f : 0.00115299224854
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dma_supported:3970.f
=======

SUMS (nm, lo, un, wr, re):	pci_dma_supported	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3970.f : 34
>>> PROGRESS 426/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #314
=================================
Summarizing function: __cpus_xor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1093.f : 0.0010359287262
TIMES : SCC:314 : 0.0010449886322
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_xor:1093.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_xor	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1093.f : 249
>>> PROGRESS 427/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #317
=================================
Summarizing function: __cpus_or : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : SCC:317 : 0.00105285644531
TIMES : FUN:1088.f : 0.00104522705078
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_or:1088.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_or	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1088.f : 249
>>> PROGRESS 428/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #318
=================================
Summarizing function: dma_cache_sync : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3962.f : 0.000915050506592
TIMES : SCC:318 : 0.000924825668335
=================================
Finished an SCC (1)
=================================
Summary for function: dma_cache_sync:3962.f
=======

SUMS (nm, lo, un, wr, re):	dma_cache_sync	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3962.f : 34
>>> PROGRESS 429/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #319
=================================
Summarizing function: prefetchw__extinline : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:319 : 0.000591993331909
TIMES : FUN:511.f : 0.000581979751587
=================================
Finished an SCC (1)
=================================
Summary for function: prefetchw__extinline:511.f
=======

SUMS (nm, lo, un, wr, re):	prefetchw__extinline	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 511.f : 34
>>> PROGRESS 430/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #320
=================================
Summarizing function: dma_get_cache_alignment : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3961.f : 0.00057315826416
TIMES : SCC:320 : 0.00058388710022
=================================
Finished an SCC (1)
=================================
Summary for function: dma_get_cache_alignment:3961.f
=======

SUMS (nm, lo, un, wr, re):	dma_get_cache_alignment	0	0	0	0	

SS Sum:
 -> 
Vval: 128
SIZES: 3961.f : 34
>>> PROGRESS 431/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #347
=================================
Summarizing function: apic_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1642.f : 0.00112199783325
TIMES : SCC:347 : 0.00112986564636
=================================
Finished an SCC (1)
=================================
Summary for function: apic_write:1642.f
=======

SUMS (nm, lo, un, wr, re):	apic_write	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1642.f : 95
>>> PROGRESS 432/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #323
=================================
Summarizing function: ack_APIC_irq : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1659.f : 0.000850915908813
TIMES : SCC:323 : 0.000859975814819
=================================
Finished an SCC (1)
=================================
Summary for function: ack_APIC_irq:1659.f
=======

SUMS (nm, lo, un, wr, re):	ack_APIC_irq	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1659.f : 95
>>> PROGRESS 433/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #324
=================================
Summarizing function: __cpus_and : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1083.f : 0.00435900688171
TIMES : SCC:324 : 0.00436878204346
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_and:1083.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_and	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1083.f : 249
>>> PROGRESS 434/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #367
=================================
Summarizing function: readb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2780.f : 0.00070595741272
TIMES : SCC:367 : 0.000716924667358
=================================
Finished an SCC (1)
=================================
Summary for function: readb:2780.f
=======

SUMS (nm, lo, un, wr, re):	readb	0	0	0	1	

SS Sum:
 -> 
Vval: (*addr)
SIZES: 2780.f : 99
>>> PROGRESS 435/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #325
=================================
Summarizing function: check_signature : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2807.f : 0.00145196914673
TIMES : SCC:325 : 0.00146102905273
=================================
Finished an SCC (1)
=================================
Summary for function: check_signature:2807.f
=======

SUMS (nm, lo, un, wr, re):	check_signature	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2807.f : 141
>>> PROGRESS 436/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #326
=================================
Summarizing function: dma_set_mask : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:326 : 0.00129318237305
TIMES : FUN:3957.f : 0.00128412246704
=================================
Finished an SCC (1)
=================================
Summary for function: dma_set_mask:3957.f
=======

SUMS (nm, lo, un, wr, re):	dma_set_mask	0	0	1	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3957.f : 52424
>>> PROGRESS 437/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #332
=================================
Summarizing function: apic_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1653.f : 0.0012321472168
TIMES : SCC:332 : 0.00124216079712
=================================
Finished an SCC (1)
=================================
Summary for function: apic_read:1653.f
=======

SUMS (nm, lo, un, wr, re):	apic_read	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1653.f : 95
>>> PROGRESS 438/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #327
=================================
Summarizing function: apic_wait_icr_idle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:327 : 0.00133180618286
TIMES : FUN:1656.f : 0.00132417678833
=================================
Finished an SCC (1)
=================================
Summary for function: apic_wait_icr_idle:1656.f
=======

SUMS (nm, lo, un, wr, re):	apic_wait_icr_idle	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1656.f : 95
>>> PROGRESS 439/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #329
=================================
Summarizing function: __cpu_test_and_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1079.f : 0.00102400779724
TIMES : SCC:329 : 0.00103306770325
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_test_and_set:1079.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_test_and_set	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1079.f : 34
>>> PROGRESS 440/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #331
=================================
Summarizing function: __skb_queue_tail : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:331 : 0.000988960266113
TIMES : FUN:4529.f : 0.000978946685791
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_queue_tail:4529.f
=======

SUMS (nm, lo, un, wr, re):	__skb_queue_tail	0	0	6	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4529.f : 63768
>>> PROGRESS 441/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #333
=================================
Summarizing function: memcpy_toio : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:333 : 0.00082802772522
TIMES : FUN:2803.f : 0.000818014144897
=================================
Finished an SCC (1)
=================================
Summary for function: memcpy_toio:2803.f
=======

SUMS (nm, lo, un, wr, re):	memcpy_toio	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2803.f : 34
>>> PROGRESS 442/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #334
=================================
Summarizing function: insert_inode_hash : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:334 : 0.00254821777344
TIMES : FUN:3377.f : 0.00253796577454
=================================
Finished an SCC (1)
=================================
Summary for function: insert_inode_hash:3377.f
=======

SUMS (nm, lo, un, wr, re):	insert_inode_hash	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3377.f : 50029
>>> PROGRESS 443/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #336
=================================
Summarizing function: __cpus_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1076.f : 0.000933885574341
TIMES : SCC:336 : 0.000943183898926
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_clear:1076.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_clear	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1076.f : 185
>>> PROGRESS 444/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #337
=================================
Summarizing function: memcpy_fromio : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:337 : 0.000788927078247
TIMES : FUN:2799.f : 0.00078010559082
=================================
Finished an SCC (1)
=================================
Summary for function: memcpy_fromio:2799.f
=======

SUMS (nm, lo, un, wr, re):	memcpy_fromio	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2799.f : 34
>>> PROGRESS 445/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #338
=================================
Summarizing function: load_esp0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:498.f : 0.00132417678833
TIMES : SCC:338 : 0.00133299827576
=================================
Finished an SCC (1)
=================================
Summary for function: load_esp0:498.f
=======

SUMS (nm, lo, un, wr, re):	load_esp0	0	0	2	3	

SS Sum:
 -> 
$SSBOT
SIZES: 498.f : 4705
>>> PROGRESS 446/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #339
=================================
Summarizing function: __cpus_setall : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:339 : 0.000936985015869
TIMES : FUN:1073.f : 0.000927925109863
=================================
Finished an SCC (1)
=================================
Summary for function: __cpus_setall:1073.f
=======

SUMS (nm, lo, un, wr, re):	__cpus_setall	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1073.f : 202
>>> PROGRESS 447/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #340
=================================
Summarizing function: __skb_queue_head : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:340 : 0.000962018966675
TIMES : FUN:4523.f : 0.000952959060669
=================================
Finished an SCC (1)
=================================
Summary for function: __skb_queue_head:4523.f
=======

SUMS (nm, lo, un, wr, re):	__skb_queue_head	0	0	6	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4523.f : 63740
>>> PROGRESS 448/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #342
=================================
Summarizing function: apic_write_atomic : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:342 : 0.00127601623535
TIMES : FUN:1646.f : 0.00126695632935
=================================
Finished an SCC (1)
=================================
Summary for function: apic_write_atomic:1646.f
=======

SUMS (nm, lo, un, wr, re):	apic_write_atomic	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1646.f : 34
>>> PROGRESS 449/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #343
=================================
Summarizing function: __cpu_clear : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:343 : 0.000818967819214
TIMES : FUN:1070.f : 0.000808954238892
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_clear:1070.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_clear	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1070.f : 34
>>> PROGRESS 450/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #640
=================================
Summarizing function: __memset_generic : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:921.f : 0.000572919845581
TIMES : SCC:640 : 0.00058388710022
=================================
Finished an SCC (1)
=================================
Summary for function: __memset_generic:921.f
=======

SUMS (nm, lo, un, wr, re):	__memset_generic	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*s)

SIZES: 921.f : 34
>>> PROGRESS 451/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #344
=================================
Summarizing function: memset_io : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:344 : 0.000797986984253
TIMES : FUN:2795.f : 0.000788927078247
=================================
Finished an SCC (1)
=================================
Summary for function: memset_io:2795.f
=======

SUMS (nm, lo, un, wr, re):	memset_io	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2795.f : 34
>>> PROGRESS 452/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #345
=================================
Summarizing function: skb_queue_head_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4519.f : 0.00336503982544
TIMES : SCC:345 : 0.00337409973145
=================================
Finished an SCC (1)
=================================
Summary for function: skb_queue_head_init:4519.f
=======

SUMS (nm, lo, un, wr, re):	skb_queue_head_init	0	0	4	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4519.f : 63603
>>> PROGRESS 453/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #346
=================================
Summarizing function: __cpu_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:346 : 0.000800132751465
TIMES : FUN:1067.f : 0.000791072845459
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_set:1067.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_set	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1067.f : 34
>>> PROGRESS 454/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #348
=================================
Summarizing function: writel : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:348 : 0.000672817230225
TIMES : FUN:2792.f : 0.000663995742798
=================================
Finished an SCC (1)
=================================
Summary for function: writel:2792.f
=======

SUMS (nm, lo, un, wr, re):	writel	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2792.f : 99
>>> PROGRESS 455/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #350
=================================
Summarizing function: skb_queue_len : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4516.f : 0.00071907043457
TIMES : SCC:350 : 0.000730037689209
=================================
Finished an SCC (1)
=================================
Summary for function: skb_queue_len:4516.f
=======

SUMS (nm, lo, un, wr, re):	skb_queue_len	0	0	0	1	

SS Sum:
 -> 
Vval: list_->qlen
SIZES: 4516.f : 63433
>>> PROGRESS 456/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #351
=================================
Summarizing function: __mwait : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:351 : 0.000575065612793
TIMES : FUN:490.f : 0.000563859939575
=================================
Finished an SCC (1)
=================================
Summary for function: __mwait:490.f
=======

SUMS (nm, lo, un, wr, re):	__mwait	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 490.f : 34
>>> PROGRESS 457/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #352
=================================
Summarizing function: writew : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:352 : 0.000673055648804
TIMES : FUN:2789.f : 0.000663995742798
=================================
Finished an SCC (1)
=================================
Summary for function: writew:2789.f
=======

SUMS (nm, lo, un, wr, re):	writew	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2789.f : 99
>>> PROGRESS 458/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #753
=================================
Summarizing function: get_current : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:753 : 0.002681016922
TIMES : FUN:1409.f : 0.00267100334167
=================================
Finished an SCC (1)
=================================
Summary for function: get_current:1409.f
=======

SUMS (nm, lo, un, wr, re):	get_current	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1409.f : 50037
>>> PROGRESS 459/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #353
=================================
Summarizing function: try_to_freeze : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2213.f : 0.00237798690796
TIMES : SCC:353 : 0.00238609313965
=================================
Finished an SCC (1)
=================================
Summary for function: try_to_freeze:2213.f
=======

SUMS (nm, lo, un, wr, re):	try_to_freeze	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2213.f : 50072
>>> PROGRESS 460/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #354
=================================
Summarizing function: iget : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3363.f : 0.00138211250305
TIMES : SCC:354 : 0.00139188766479
=================================
Finished an SCC (1)
=================================
Summary for function: iget:3363.f
=======

SUMS (nm, lo, un, wr, re):	iget	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3363.f : 49985
>>> PROGRESS 461/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #356
=================================
Summarizing function: __monitor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:356 : 0.000567197799683
TIMES : FUN:486.f : 0.000556945800781
=================================
Finished an SCC (1)
=================================
Summary for function: __monitor:486.f
=======

SUMS (nm, lo, un, wr, re):	__monitor	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 486.f : 34
>>> PROGRESS 462/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #357
=================================
Summarizing function: writeb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:357 : 0.000714063644409
TIMES : FUN:2786.f : 0.000705003738403
=================================
Finished an SCC (1)
=================================
Summary for function: writeb:2786.f
=======

SUMS (nm, lo, un, wr, re):	writeb	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2786.f : 99
>>> PROGRESS 463/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #358
=================================
Summarizing function: dma_sync_single_range_for_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3936.f : 0.000770807266235
TIMES : SCC:358 : 0.000781059265137
=================================
Finished an SCC (1)
=================================
Summary for function: dma_sync_single_range_for_device:3936.f
=======

SUMS (nm, lo, un, wr, re):	dma_sync_single_range_for_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3936.f : 34
>>> PROGRESS 464/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #360
=================================
Summarizing function: skb_peek : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:360 : 0.000707864761353
TIMES : FUN:4510.f : 0.000697135925293
=================================
Finished an SCC (1)
=================================
Summary for function: skb_peek:4510.f
=======

SUMS (nm, lo, un, wr, re):	skb_peek	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(list_->next))

SIZES: 4510.f : 63408
>>> PROGRESS 465/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #361
=================================
Summarizing function: clear_in_cr4 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:484.f : 0.000622987747192
TIMES : SCC:361 : 0.000633001327515
=================================
Finished an SCC (1)
=================================
Summary for function: clear_in_cr4:484.f
=======

SUMS (nm, lo, un, wr, re):	clear_in_cr4	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 484.f : 96
>>> PROGRESS 466/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #362
=================================
Summarizing function: readl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:362 : 0.000673055648804
TIMES : FUN:2784.f : 0.000635862350464
=================================
Finished an SCC (1)
=================================
Summary for function: readl:2784.f
=======

SUMS (nm, lo, un, wr, re):	readl	0	0	0	1	

SS Sum:
 -> 
Vval: (*addr)
SIZES: 2784.f : 99
>>> PROGRESS 467/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #364
=================================
Summarizing function: set_in_cr4 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:364 : 0.000589847564697
TIMES : FUN:482.f : 0.000581026077271
=================================
Finished an SCC (1)
=================================
Summary for function: set_in_cr4:482.f
=======

SUMS (nm, lo, un, wr, re):	set_in_cr4	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 482.f : 96
>>> PROGRESS 468/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #365
=================================
Summarizing function: readw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2782.f : 0.000661849975586
TIMES : SCC:365 : 0.000669956207275
=================================
Finished an SCC (1)
=================================
Summary for function: readw:2782.f
=======

SUMS (nm, lo, un, wr, re):	readw	0	0	0	1	

SS Sum:
 -> 
Vval: (*addr)
SIZES: 2782.f : 99
>>> PROGRESS 469/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #368
=================================
Summarizing function: dma_sync_single_range_for_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:368 : 0.000552892684937
TIMES : FUN:3930.f : 0.000542163848877
=================================
Finished an SCC (1)
=================================
Summary for function: dma_sync_single_range_for_cpu:3930.f
=======

SUMS (nm, lo, un, wr, re):	dma_sync_single_range_for_cpu	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3930.f : 34
>>> PROGRESS 470/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #369
=================================
Summarizing function: skb_unshare : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4504.f : 0.0030620098114
TIMES : SCC:369 : 0.00307083129883
=================================
Finished an SCC (1)
=================================
Summary for function: skb_unshare:4504.f
=======

SUMS (nm, lo, un, wr, re):	skb_unshare	0	0	0	3	

SS Sum:
 -> 
$SSTOP
SIZES: 4504.f : 127915
>>> PROGRESS 471/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #370
=================================
Summarizing function: set_task_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

doing lockset
doing guarded access
TIMES : SCC:370 : 0.000750064849854
TIMES : FUN:2203.f : 0.000738859176636
=================================
Finished an SCC (1)
=================================
Summary for function: set_task_cpu:2203.f
=======

SUMS (nm, lo, un, wr, re):	set_task_cpu	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2203.f : 49991
>>> PROGRESS 472/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #371
=================================
Summarizing function: cpuid_edx : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:477.f : 0.000651836395264
TIMES : SCC:371 : 0.000663042068481
=================================
Finished an SCC (1)
=================================
Summary for function: cpuid_edx:477.f
=======

SUMS (nm, lo, un, wr, re):	cpuid_edx	0	0	0	0	

SS Sum:
 -> 
Vval: edx
SIZES: 477.f : 34
>>> PROGRESS 473/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #372
=================================
Summarizing function: task_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2201.f : 0.000746965408325
TIMES : SCC:372 : 0.000756978988647
=================================
Finished an SCC (1)
=================================
Summary for function: task_cpu:2201.f
=======

SUMS (nm, lo, un, wr, re):	task_cpu	0	0	0	1	

SS Sum:
 -> 
Vval: (p->thread_info)->cpu
SIZES: 2201.f : 49991
>>> PROGRESS 474/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #375
=================================
Summarizing function: cpuid_ecx : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:473.f : 0.000598192214966
TIMES : SCC:375 : 0.000608921051025
=================================
Finished an SCC (1)
=================================
Summary for function: cpuid_ecx:473.f
=======

SUMS (nm, lo, un, wr, re):	cpuid_ecx	0	0	0	0	

SS Sum:
 -> 
Vval: ecx
SIZES: 473.f : 34
>>> PROGRESS 475/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #378
=================================
Summarizing function: skb_shared : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4496.f : 0.000650882720947
TIMES : SCC:378 : 0.000661849975586
=================================
Finished an SCC (1)
=================================
Summary for function: skb_shared:4496.f
=======

SUMS (nm, lo, un, wr, re):	skb_shared	0	0	0	1	

SS Sum:
 -> 
Vval: skb->users.counter != 1
SIZES: 4496.f : 63393
>>> PROGRESS 476/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #376
=================================
Summarizing function: skb_share_check : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4498.f : 0.00372385978699
TIMES : SCC:376 : 0.00373291969299
=================================
Finished an SCC (1)
=================================
Summary for function: skb_share_check:4498.f
=======

SUMS (nm, lo, un, wr, re):	skb_share_check	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4498.f : 63433
>>> PROGRESS 477/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #377
=================================
Summarizing function: IS_ERR : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:377 : 0.00106287002563
TIMES : FUN:3346.f : 0.00105214118958
=================================
Finished an SCC (1)
=================================
Summary for function: IS_ERR:3346.f
=======

SUMS (nm, lo, un, wr, re):	IS_ERR	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3346.f : 34
>>> PROGRESS 478/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #379
=================================
Summarizing function: io_apic_modify : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:379 : 0.000944137573242
TIMES : FUN:1620.f : 0.000932931900024
=================================
Finished an SCC (1)
=================================
Summary for function: io_apic_modify:1620.f
=======

SUMS (nm, lo, un, wr, re):	io_apic_modify	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1620.f : 95
>>> PROGRESS 479/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #836
=================================
Summarizing function: test_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:836 : 0.00145888328552
TIMES : FUN:532.f : 0.00144910812378
=================================
Finished an SCC (1)
=================================
Summary for function: test_thread_flag:532.f
=======

SUMS (nm, lo, un, wr, re):	test_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 532.f : 34
>>> PROGRESS 480/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #394
=================================
Summarizing function: need_resched : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:2187.f : 0.00148797035217
TIMES : SCC:394 : 0.00149893760681
=================================
Finished an SCC (1)
=================================
Summary for function: need_resched:2187.f
=======

SUMS (nm, lo, un, wr, re):	need_resched	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2187.f : 34
>>> PROGRESS 481/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #380
=================================
Summarizing function: lock_need_resched : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:380 : 0.00431799888611
TIMES : FUN:2195.f : 0.00430917739868
=================================
Finished an SCC (1)
=================================
Summary for function: lock_need_resched:2195.f
=======

SUMS (nm, lo, un, wr, re):	lock_need_resched	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2195.f : 34
>>> PROGRESS 482/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #382
=================================
Summarizing function: cpuid_ebx : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:469.f : 0.000653982162476
TIMES : SCC:382 : 0.000663995742798
=================================
Finished an SCC (1)
=================================
Summary for function: cpuid_ebx:469.f
=======

SUMS (nm, lo, un, wr, re):	cpuid_ebx	0	0	0	0	

SS Sum:
 -> 
Vval: ebx
SIZES: 469.f : 34
>>> PROGRESS 483/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #383
=================================
Summarizing function: PTR_ERR : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:383 : 0.000767946243286
TIMES : FUN:3344.f : 0.000757217407227
=================================
Finished an SCC (1)
=================================
Summary for function: PTR_ERR:3344.f
=======

SUMS (nm, lo, un, wr, re):	PTR_ERR	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*ptr)

SIZES: 3344.f : 34
>>> PROGRESS 484/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #385
=================================
Summarizing function: phys_to_virt : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:385 : 0.00062108039856
TIMES : FUN:2768.f : 0.000610828399658
=================================
Finished an SCC (1)
=================================
Summary for function: phys_to_virt:2768.f
=======

SUMS (nm, lo, un, wr, re):	phys_to_virt	0	0	0	0	

SS Sum:
 -> 
Vval: address + 3221225472UL
SIZES: 2768.f : 34
>>> PROGRESS 485/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #386
=================================
Summarizing function: skb_header_release : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4493.f : 0.0013599395752
TIMES : SCC:386 : 0.0013701915741
=================================
Finished an SCC (1)
=================================
Summary for function: skb_header_release:4493.f
=======

SUMS (nm, lo, un, wr, re):	skb_header_release	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4493.f : 63413
>>> PROGRESS 486/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #388
=================================
Summarizing function: ERR_PTR : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:388 : 0.000630855560303
TIMES : FUN:3342.f : 0.00062108039856
=================================
Finished an SCC (1)
=================================
Summary for function: ERR_PTR:3342.f
=======

SUMS (nm, lo, un, wr, re):	ERR_PTR	0	0	0	0	

SS Sum:
 -> 
Vval: error
SIZES: 3342.f : 34
>>> PROGRESS 487/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #389
=================================
Summarizing function: cpuid_eax : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:389 : 0.00068211555481
TIMES : FUN:466.f : 0.000670909881592
=================================
Finished an SCC (1)
=================================
Summary for function: cpuid_eax:466.f
=======

SUMS (nm, lo, un, wr, re):	cpuid_eax	0	0	0	0	

SS Sum:
 -> 
Vval: eax
SIZES: 466.f : 34
>>> PROGRESS 488/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #390
=================================
Summarizing function: io_apic_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1615.f : 0.000785112380981
TIMES : SCC:390 : 0.000795125961304
=================================
Finished an SCC (1)
=================================
Summary for function: io_apic_write:1615.f
=======

SUMS (nm, lo, un, wr, re):	io_apic_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1615.f : 34
>>> PROGRESS 489/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #391
=================================
Summarizing function: skb_header_cloned : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:391 : 0.000802993774414
TIMES : FUN:4490.f : 0.000792980194092
=================================
Finished an SCC (1)
=================================
Summary for function: skb_header_cloned:4490.f
=======

SUMS (nm, lo, un, wr, re):	skb_header_cloned	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 4490.f : 63728
>>> PROGRESS 490/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #393
=================================
Summarizing function: io_apic_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1612.f : 0.000770807266235
TIMES : SCC:393 : 0.000781059265137
=================================
Finished an SCC (1)
=================================
Summary for function: io_apic_read:1612.f
=======

SUMS (nm, lo, un, wr, re):	io_apic_read	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1612.f : 34
>>> PROGRESS 491/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #882
=================================
Summarizing function: netdev_priv : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:882 : 0.000663995742798
TIMES : FUN:4785.f : 0.000653028488159
=================================
Finished an SCC (1)
=================================
Summary for function: netdev_priv:4785.f
=======

SUMS (nm, lo, un, wr, re):	netdev_priv	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dev)

SIZES: 4785.f : 34
>>> PROGRESS 492/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #419
=================================
Summarizing function: dev_to_hdlc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:419 : 0.00108194351196
TIMES : FUN:5043.f : 0.00107192993164
=================================
Finished an SCC (1)
=================================
Summary for function: dev_to_hdlc:5043.f
=======

SUMS (nm, lo, un, wr, re):	dev_to_hdlc	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dev)

SIZES: 5043.f : 34
>>> PROGRESS 493/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #397
=================================
Summarizing function: hdlc_type_trans : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5060.f : 0.0396981239319
TIMES : SCC:397 : 0.0397090911865
=================================
Finished an SCC (1)
=================================
Summary for function: hdlc_type_trans:5060.f
=======

SUMS (nm, lo, un, wr, re):	hdlc_type_trans	0	0	2	2	

SS Sum:
 -> 
$SSTOP
SIZES: 5060.f : 66424
>>> PROGRESS 494/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #398
=================================
Summarizing function: cpuid_count : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:459.f : 0.000854015350342
TIMES : SCC:398 : 0.00086498260498
=================================
Finished an SCC (1)
=================================
Summary for function: cpuid_count:459.f
=======

SUMS (nm, lo, un, wr, re):	cpuid_count	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 459.f : 34
>>> PROGRESS 495/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #399
=================================
Summarizing function: disable_edge_ioapic_irq : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:399 : 0.000798940658569
TIMES : FUN:1608.f : 0.000786781311035
=================================
Finished an SCC (1)
=================================
Summary for function: disable_edge_ioapic_irq:1608.f
=======

SUMS (nm, lo, un, wr, re):	disable_edge_ioapic_irq	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1608.f : 34
>>> PROGRESS 496/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #400
=================================
Summarizing function: allow_write_access : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:400 : 0.00114798545837
TIMES : FUN:3333.f : 0.00113487243652
=================================
Finished an SCC (1)
=================================
Summary for function: allow_write_access:3333.f
=======

SUMS (nm, lo, un, wr, re):	allow_write_access	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3333.f : 34
>>> PROGRESS 497/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #402
=================================
Summarizing function: use_pci_vector : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:402 : 0.00084400177002
TIMES : FUN:1607.f : 0.000830888748169
=================================
Finished an SCC (1)
=================================
Summary for function: use_pci_vector:1607.f
=======

SUMS (nm, lo, un, wr, re):	use_pci_vector	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 1607.f : 34
>>> PROGRESS 498/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #403
=================================
Summarizing function: hdlc_stats : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:403 : 0.00140810012817
TIMES : FUN:5057.f : 0.00139594078064
=================================
Finished an SCC (1)
=================================
Summary for function: hdlc_stats:5057.f
=======

SUMS (nm, lo, un, wr, re):	hdlc_stats	0	0	0	0	

SS Sum:
 -> 
Extptr (1):
  lval = (*dev).stats

SIZES: 5057.f : 34
>>> PROGRESS 499/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #404
=================================
Summarizing function: put_write_access : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:404 : 0.00221514701843
TIMES : FUN:3331.f : 0.00219798088074
=================================
Finished an SCC (1)
=================================
Summary for function: put_write_access:3331.f
=======

SUMS (nm, lo, un, wr, re):	put_write_access	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3331.f : 34
>>> PROGRESS 500/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #405
=================================
Summarizing function: hdlc_proto_detach : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:405 : 0.00127911567688
TIMES : FUN:5055.f : 0.00126194953918
=================================
Finished an SCC (1)
=================================
Summary for function: hdlc_proto_detach:5055.f
=======

SUMS (nm, lo, un, wr, re):	hdlc_proto_detach	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5055.f : 66294
>>> PROGRESS 501/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #424
=================================
Summarizing function: clear_ti_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:424 : 0.00203084945679
TIMES : FUN:541.f : 0.00201296806335
=================================
Finished an SCC (1)
=================================
Summary for function: clear_ti_thread_flag:541.f
=======

SUMS (nm, lo, un, wr, re):	clear_ti_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 541.f : 34
>>> PROGRESS 502/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #423
=================================
Summarizing function: clear_tsk_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:423 : 0.0018630027771
TIMES : FUN:2162.f : 0.00185108184814
=================================
Finished an SCC (1)
=================================
Summary for function: clear_tsk_thread_flag:2162.f
=======

SUMS (nm, lo, un, wr, re):	clear_tsk_thread_flag	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 2162.f : 49984
>>> PROGRESS 503/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #406
=================================
Summarizing function: clear_tsk_need_resched : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2179.f : 0.00257706642151
TIMES : SCC:406 : 0.00258898735046
=================================
Finished an SCC (1)
=================================
Summary for function: clear_tsk_need_resched:2179.f
=======

SUMS (nm, lo, un, wr, re):	clear_tsk_need_resched	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 2179.f : 49984
>>> PROGRESS 504/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #407
=================================
Summarizing function: skb_get : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:407 : 0.0036940574646
TIMES : FUN:4479.f : 0.00368404388428
=================================
Finished an SCC (1)
=================================
Summary for function: skb_get:4479.f
=======

SUMS (nm, lo, un, wr, re):	skb_get	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*skb)

SIZES: 4479.f : 34
>>> PROGRESS 505/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #408
=================================
Summarizing function: cpuid : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:408 : 0.000829935073853
TIMES : FUN:453.f : 0.000815868377686
=================================
Finished an SCC (1)
=================================
Summary for function: cpuid:453.f
=======

SUMS (nm, lo, un, wr, re):	cpuid	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 453.f : 34
>>> PROGRESS 506/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #428
=================================
Summarizing function: set_ti_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:428 : 0.000992059707642
TIMES : FUN:538.f : 0.000981092453003
=================================
Finished an SCC (1)
=================================
Summary for function: set_ti_thread_flag:538.f
=======

SUMS (nm, lo, un, wr, re):	set_ti_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 538.f : 34
>>> PROGRESS 507/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #427
=================================
Summarizing function: set_tsk_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:427 : 0.00125598907471
TIMES : FUN:2159.f : 0.00124311447144
=================================
Finished an SCC (1)
=================================
Summary for function: set_tsk_thread_flag:2159.f
=======

SUMS (nm, lo, un, wr, re):	set_tsk_thread_flag	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 2159.f : 49984
>>> PROGRESS 508/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #410
=================================
Summarizing function: set_tsk_need_resched : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:410 : 0.0019748210907
TIMES : FUN:2177.f : 0.00196313858032
=================================
Finished an SCC (1)
=================================
Summary for function: set_tsk_need_resched:2177.f
=======

SUMS (nm, lo, un, wr, re):	set_tsk_need_resched	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 2177.f : 49984
>>> PROGRESS 509/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #411
=================================
Summarizing function: skb_queue_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:411 : 0.00121212005615
TIMES : FUN:4477.f : 0.0011990070343
=================================
Finished an SCC (1)
=================================
Summary for function: skb_queue_empty:4477.f
=======

SUMS (nm, lo, un, wr, re):	skb_queue_empty	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )list->next == (unsigned int )((struct sk_buff *)list)
SIZES: 4477.f : 63354
>>> PROGRESS 510/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #413
=================================
Summarizing function: debug_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:413 : 0.00110006332397
TIMES : FUN:5049.f : 0.00108885765076
=================================
Finished an SCC (1)
=================================
Summary for function: debug_frame:5049.f
=======

SUMS (nm, lo, un, wr, re):	debug_frame	0	0	0	2	

SS Sum:
 -> 
$SSBOT
SIZES: 5049.f : 63397
>>> PROGRESS 511/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #414
=================================
Summarizing function: dev_to_pvc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:414 : 0.000692129135132
TIMES : FUN:5047.f : 0.000679969787598
=================================
Finished an SCC (1)
=================================
Summary for function: dev_to_pvc:5047.f
=======

SUMS (nm, lo, un, wr, re):	dev_to_pvc	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(dev->priv))

SIZES: 5047.f : 63314
>>> PROGRESS 512/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #417
=================================
Summarizing function: test_and_clear_ti_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:548.f : 0.00101590156555
TIMES : SCC:417 : 0.00102710723877
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_clear_ti_thread_flag:548.f
=======

SUMS (nm, lo, un, wr, re):	test_and_clear_ti_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 548.f : 34
>>> PROGRESS 513/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #416
=================================
Summarizing function: test_and_clear_tsk_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2169.f : 0.00100302696228
TIMES : SCC:416 : 0.0010130405426
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_clear_tsk_thread_flag:2169.f
=======

SUMS (nm, lo, un, wr, re):	test_and_clear_tsk_thread_flag	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2169.f : 49984
>>> PROGRESS 514/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #421
=================================
Summarizing function: test_and_set_ti_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:421 : 0.00254797935486
TIMES : FUN:544.f : 0.00253796577454
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_set_ti_thread_flag:544.f
=======

SUMS (nm, lo, un, wr, re):	test_and_set_ti_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 544.f : 34
>>> PROGRESS 515/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #420
=================================
Summarizing function: test_and_set_tsk_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2165.f : 0.00103402137756
TIMES : SCC:420 : 0.00104188919067
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_set_tsk_thread_flag:2165.f
=======

SUMS (nm, lo, un, wr, re):	test_and_set_tsk_thread_flag	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2165.f : 49984
>>> PROGRESS 516/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #426
=================================
Summarizing function: virt_to_fix : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:426 : 0.00113892555237
TIMES : FUN:1584.f : 0.00112915039062
=================================
Finished an SCC (1)
=================================
Summary for function: virt_to_fix:1584.f
=======

SUMS (nm, lo, un, wr, re):	virt_to_fix	0	0	0	0	

SS Sum:
 -> 
Vval: (4294963200UL - (vaddr & 4294963200UL)) >> 12
SIZES: 1584.f : 34
>>> PROGRESS 517/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #429
=================================
Summarizing function: invalidate_remote_inode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:429 : 0.000966787338257
TIMES : FUN:3309.f : 0.00095796585083
=================================
Finished an SCC (1)
=================================
Summary for function: invalidate_remote_inode:3309.f
=======

SUMS (nm, lo, un, wr, re):	invalidate_remote_inode	0	0	0	2	

SS Sum:
 -> 
$SSBOT
SIZES: 3309.f : 50067
>>> PROGRESS 518/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #430
=================================
Summarizing function: csum_block_sub : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:430 : 0.00105404853821
TIMES : FUN:4459.f : 0.0010449886322
=================================
Finished an SCC (1)
=================================
Summary for function: csum_block_sub:4459.f
=======

SUMS (nm, lo, un, wr, re):	csum_block_sub	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4459.f : 34
>>> PROGRESS 519/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #433
=================================
Summarizing function: task_unlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2157.f : 0.000880002975464
TIMES : SCC:433 : 0.000890016555786
=================================
Finished an SCC (1)
=================================
Summary for function: task_unlock:2157.f
=======

SUMS (nm, lo, un, wr, re):	task_unlock	0	1	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2157.f : 49948
>>> PROGRESS 520/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #434
=================================
Summarizing function: task_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:434 : 0.000877857208252
TIMES : FUN:2155.f : 0.000869035720825
=================================
Finished an SCC (1)
=================================
Summary for function: task_lock:2155.f
=======

SUMS (nm, lo, un, wr, re):	task_lock	1	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2155.f : 49948
>>> PROGRESS 521/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #438
=================================
Summarizing function: acpi_irq_balance_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:438 : 0.00055193901062
TIMES : FUN:1577.f : 0.000543117523193
=================================
Finished an SCC (1)
=================================
Summary for function: acpi_irq_balance_set:1577.f
=======

SUMS (nm, lo, un, wr, re):	acpi_irq_balance_set	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 1577.f : 34
>>> PROGRESS 522/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #832
=================================
Summarizing function: list_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:832 : 0.000714778900146
TIMES : FUN:1361.f : 0.000703811645508
=================================
Finished an SCC (1)
=================================
Summary for function: list_empty:1361.f
=======

SUMS (nm, lo, un, wr, re):	list_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1361.f : 156
>>> PROGRESS 523/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #439
=================================
Summarizing function: thread_group_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2151.f : 0.00113081932068
TIMES : SCC:439 : 0.00114011764526
=================================
Finished an SCC (1)
=================================
Summary for function: thread_group_empty:2151.f
=======

SUMS (nm, lo, un, wr, re):	thread_group_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2151.f : 49983
>>> PROGRESS 524/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #451
=================================
Summarizing function: __set_64bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:414.f : 0.000637054443359
TIMES : SCC:451 : 0.00065016746521
=================================
Finished an SCC (1)
=================================
Summary for function: __set_64bit:414.f
=======

SUMS (nm, lo, un, wr, re):	__set_64bit	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 414.f : 34
>>> PROGRESS 525/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #443
=================================
Summarizing function: __set_64bit_var : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:443 : 0.000802993774414
TIMES : FUN:421.f : 0.000794172286987
=================================
Finished an SCC (1)
=================================
Summary for function: __set_64bit_var:421.f
=======

SUMS (nm, lo, un, wr, re):	__set_64bit_var	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 421.f : 34
>>> PROGRESS 526/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #444
=================================
Summarizing function: pci_dac_dma_sync_single_for_device : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:444 : 0.000813961029053
TIMES : FUN:3871.f : 0.000805139541626
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dac_dma_sync_single_for_device:3871.f
=======

SUMS (nm, lo, un, wr, re):	pci_dac_dma_sync_single_for_device	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3871.f : 34
>>> PROGRESS 527/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #632
=================================
Summarizing function: __cmpxchg : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:632 : 0.000726938247681
TIMES : FUN:428.f : 0.000715017318726
=================================
Finished an SCC (1)
=================================
Summary for function: __cmpxchg:428.f
=======

SUMS (nm, lo, un, wr, re):	__cmpxchg	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 428.f : 34
>>> PROGRESS 528/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #446
=================================
Summarizing function: __acpi_release_global_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1569.f : 0.00169801712036
TIMES : SCC:446 : 0.00170683860779
=================================
Finished an SCC (1)
=================================
Summary for function: __acpi_release_global_lock:1569.f
=======

SUMS (nm, lo, un, wr, re):	__acpi_release_global_lock	0	0	0	1	

SS Sum:
 -> 
Vval: (*lock) & 1U
SIZES: 1569.f : 99
>>> PROGRESS 529/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #447
=================================
Summarizing function: sppp_of : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:447 : 0.00130605697632
TIMES : FUN:5019.f : 0.00129508972168
=================================
Finished an SCC (1)
=================================
Summary for function: sppp_of:5019.f
=======

SUMS (nm, lo, un, wr, re):	sppp_of	0	0	0	2	

SS Sum:
 -> 
Extptr (3):
  lval = (*((*(dev->priv)))).sppp

SIZES: 5019.f : 64060
>>> PROGRESS 530/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #448
=================================
Summarizing function: __set_64bit_constant : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:418.f : 0.000880002975464
TIMES : SCC:448 : 0.00088906288147
=================================
Finished an SCC (1)
=================================
Summary for function: __set_64bit_constant:418.f
=======

SUMS (nm, lo, un, wr, re):	__set_64bit_constant	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 418.f : 34
>>> PROGRESS 531/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #450
=================================
Summarizing function: pci_dac_dma_sync_single_for_cpu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:450 : 0.000545024871826
TIMES : FUN:3866.f : 0.000534057617188
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dac_dma_sync_single_for_cpu:3866.f
=======

SUMS (nm, lo, un, wr, re):	pci_dac_dma_sync_single_for_cpu	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3866.f : 34
>>> PROGRESS 532/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #453
=================================
Summarizing function: pci_dac_dma_to_offset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3863.f : 0.000580072402954
TIMES : SCC:453 : 0.000589847564697
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dac_dma_to_offset:3863.f
=======

SUMS (nm, lo, un, wr, re):	pci_dac_dma_to_offset	0	0	0	0	

SS Sum:
 -> 
Vval: dma_addr & 4095ULL
SIZES: 3863.f : 34
>>> PROGRESS 533/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #454
=================================
Summarizing function: main : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:454 : 0.00635313987732
TIMES : FUN:6163.f : 0.00634407997131
=================================
Finished an SCC (1)
=================================
Summary for function: main:6163.f
=======

SUMS (nm, lo, un, wr, re):	main	0	0	72	61	

SS Sum:
 -> 
Vval: 0
SIZES: 6163.f : 115241
>>> PROGRESS 534/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #464
=================================
Summarizing function: get_limit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 185	misses: 2

doing lockset
doing guarded access
TIMES : FUN:411.f : 0.000610828399658
TIMES : SCC:464 : 0.000622987747192
=================================
Finished an SCC (1)
=================================
Summary for function: get_limit:411.f
=======

SUMS (nm, lo, un, wr, re):	get_limit	0	0	0	0	

SS Sum:
 -> 
Vval: __limit + 1UL
SIZES: 411.f : 34
>>> PROGRESS 535/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #465
=================================
Summarizing function: __acpi_acquire_global_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:465 : 0.00160598754883
TIMES : FUN:1560.f : 0.00159692764282
=================================
Finished an SCC (1)
=================================
Summary for function: __acpi_acquire_global_lock:1560.f
=======

SUMS (nm, lo, un, wr, re):	__acpi_acquire_global_lock	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1560.f : 99
>>> PROGRESS 536/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #466
=================================
Summarizing function: pci_dac_dma_to_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:466 : 0.000612020492554
TIMES : FUN:3860.f : 0.000602006912231
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dac_dma_to_page:3860.f
=======

SUMS (nm, lo, un, wr, re):	pci_dac_dma_to_page	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3860.f : 95
>>> PROGRESS 537/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #468
=================================
Summarizing function: _get_base : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:408.f : 0.000586986541748
TIMES : SCC:468 : 0.00059700012207
=================================
Finished an SCC (1)
=================================
Summary for function: _get_base:408.f
=======

SUMS (nm, lo, un, wr, re):	_get_base	0	0	0	0	

SS Sum:
 -> 
Vval: __base
SIZES: 408.f : 34
>>> PROGRESS 538/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #469
=================================
Summarizing function: bitmap_copy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:469 : 0.00424098968506
TIMES : FUN:983.f : 0.00423192977905
=================================
Finished an SCC (1)
=================================
Summary for function: bitmap_copy:983.f
=======

SUMS (nm, lo, un, wr, re):	bitmap_copy	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 983.f : 128
>>> PROGRESS 539/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #470
=================================
Summarizing function: get_dma_residue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:470 : 0.00127410888672
TIMES : FUN:5008.f : 0.00126504898071
=================================
Finished an SCC (1)
=================================
Summary for function: get_dma_residue:5008.f
=======

SUMS (nm, lo, un, wr, re):	get_dma_residue	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 5008.f : 34
>>> PROGRESS 540/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #473
=================================
Summarizing function: pci_dac_page_to_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3855.f : 0.000630140304565
TIMES : SCC:473 : 0.000640869140625
=================================
Finished an SCC (1)
=================================
Summary for function: pci_dac_page_to_dma:3855.f
=======

SUMS (nm, lo, un, wr, re):	pci_dac_page_to_dma	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3855.f : 95
>>> PROGRESS 541/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #474
=================================
Summarizing function: set_dma_count : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:474 : 0.000937938690186
TIMES : FUN:5005.f : 0.00092887878418
=================================
Finished an SCC (1)
=================================
Summary for function: set_dma_count:5005.f
=======

SUMS (nm, lo, un, wr, re):	set_dma_count	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 5005.f : 34
>>> PROGRESS 542/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #724
=================================
Summarizing function: strcat : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:724 : 0.000631093978882
TIMES : FUN:856.f : 0.000618934631348
=================================
Finished an SCC (1)
=================================
Summary for function: strcat:856.f
=======

SUMS (nm, lo, un, wr, re):	strcat	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dest)

SIZES: 856.f : 34
>>> PROGRESS 543/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #477
=================================
Summarizing function: line_info : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:477 : 0.0109980106354
TIMES : FUN:5671.f : 0.0109870433807
=================================
Finished an SCC (1)
=================================
Summary for function: line_info:5671.f
=======

SUMS (nm, lo, un, wr, re):	line_info	0	1	2	28	

SS Sum:
 -> 
$SSTOP
SIZES: 5671.f : 166860
>>> PROGRESS 544/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #476
=================================
Summarizing function: mgsl_read_proc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 58	misses: 6

doing lockset
doing guarded access
TIMES : SCC:476 : 0.0112869739532
TIMES : FUN:5716.f : 0.0112769603729
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_read_proc:5716.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_read_proc	0	1	4	31	

SS Sum:
 -> 
$SSTOP
SIZES: 5716.f : 167061
>>> PROGRESS 545/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #671
=================================
Summarizing function: test_ti_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 28	misses: 5

doing lockset
doing guarded access
TIMES : SCC:671 : 0.00107192993164
TIMES : FUN:552.f : 0.001060962677
=================================
Finished an SCC (1)
=================================
Summary for function: test_ti_thread_flag:552.f
=======

SUMS (nm, lo, un, wr, re):	test_ti_thread_flag	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 552.f : 34
>>> PROGRESS 546/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #670
=================================
Summarizing function: test_tsk_thread_flag : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:670 : 0.00115704536438
TIMES : FUN:2173.f : 0.00114583969116
=================================
Finished an SCC (1)
=================================
Summary for function: test_tsk_thread_flag:2173.f
=======

SUMS (nm, lo, un, wr, re):	test_tsk_thread_flag	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2173.f : 49939
>>> PROGRESS 547/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #669
=================================
Summarizing function: signal_pending : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:669 : 0.0105719566345
TIMES : FUN:2181.f : 0.0105600357056
=================================
Finished an SCC (1)
=================================
Summary for function: signal_pending:2181.f
=======

SUMS (nm, lo, un, wr, re):	signal_pending	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 2181.f : 49939
>>> PROGRESS 548/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #479
=================================
Summarizing function: block_til_ready : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5631.f : 0.0100359916687
TIMES : SCC:479 : 0.010046005249
=================================
Finished an SCC (1)
=================================
Summary for function: block_til_ready:5631.f
=======

SUMS (nm, lo, un, wr, re):	block_til_ready	0	1	9	14	

SS Sum:
 -> 
$SSTOP
SIZES: 5631.f : 110960
>>> PROGRESS 549/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #483
=================================
Summarizing function: mgsl_alloc_intermediate_txbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 39	misses: 7

doing lockset
doing guarded access
TIMES : SCC:483 : 0.00140500068665
TIMES : FUN:5133.f : 0.00139403343201
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_intermediate_txbuffer_memory:5133.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_intermediate_txbuffer_memory	0	0	2	3	

SS Sum:
 -> 
$SSTOP
SIZES: 5133.f : 54324
>>> PROGRESS 550/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #484
=================================
Summarizing function: mgsl_alloc_intermediate_rxbuffer_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:484 : 0.000767946243286
TIMES : FUN:5131.f : 0.000756025314331
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_intermediate_rxbuffer_memory:5131.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_intermediate_rxbuffer_memory	0	0	1	1	

SS Sum:
 -> 
$SSTOP
SIZES: 5131.f : 54080
>>> PROGRESS 551/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #485
=================================
Summarizing function: mgsl_alloc_buffer_list_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:485 : 0.00470781326294
TIMES : FUN:5129.f : 0.0046980381012
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_buffer_list_memory:5129.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_buffer_list_memory	0	0	8	9	

SS Sum:
 -> 
$SSTOP
SIZES: 5129.f : 54941
>>> PROGRESS 552/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #486
=================================
Summarizing function: mgsl_alloc_frame_memory : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5127.f : 0.00178098678589
TIMES : SCC:486 : 0.00179195404053
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_alloc_frame_memory:5127.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_alloc_frame_memory	0	0	3	4	

SS Sum:
 -> 
$SSTOP
SIZES: 5127.f : 54283
>>> PROGRESS 553/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #488
=================================
Summarizing function: mgsl_reset_tx_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:488 : 0.00114393234253
TIMES : FUN:5121.f : 0.00113296508789
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_reset_tx_dma_buffers:5121.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_reset_tx_dma_buffers	0	0	7	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5121.f : 54293
>>> PROGRESS 554/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #482
=================================
Summarizing function: mgsl_allocate_dma_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:5125.f : 0.0101101398468
TIMES : SCC:482 : 0.0101211071014
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_allocate_dma_buffers:5125.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_allocate_dma_buffers	0	0	24	17	

SS Sum:
 -> 
$SSTOP
SIZES: 5125.f : 111578
>>> PROGRESS 555/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #489
=================================
Summarizing function: mgsl_memory_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 60	misses: 2

doing lockset
doing guarded access
TIMES : SCC:489 : 0.00166416168213
TIMES : FUN:5111.f : 0.00165295600891
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_memory_test:5111.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_memory_test	0	0	2	4	

SS Sum:
 -> 
$SSTOP
SIZES: 5111.f : 54379
>>> PROGRESS 556/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #490
=================================
Summarizing function: ioremap : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:490 : 0.00102591514587
TIMES : FUN:2771.f : 0.00101613998413
=================================
Finished an SCC (1)
=================================
Summary for function: ioremap:2771.f
=======

SUMS (nm, lo, un, wr, re):	ioremap	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2771.f : 34
>>> PROGRESS 557/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #531
=================================
Summarizing function: set_dma_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:531 : 0.000883817672729
TIMES : FUN:4996.f : 0.00087308883667
=================================
Finished an SCC (1)
=================================
Summary for function: set_dma_mode:4996.f
=======

SUMS (nm, lo, un, wr, re):	set_dma_mode	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4996.f : 34
>>> PROGRESS 558/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #540
=================================
Summarizing function: enable_dma : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:540 : 0.000840902328491
TIMES : FUN:4990.f : 0.000829935073853
=================================
Finished an SCC (1)
=================================
Summary for function: enable_dma:4990.f
=======

SUMS (nm, lo, un, wr, re):	enable_dma	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4990.f : 34
>>> PROGRESS 559/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #481
=================================
Summarizing function: mgsl_claim_resources : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5113.f : 0.010705947876
TIMES : SCC:481 : 0.0107169151306
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_claim_resources:5113.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_claim_resources	0	0	34	34	

SS Sum:
 -> 
$SSTOP
SIZES: 5113.f : 168362
>>> PROGRESS 560/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #495
=================================
Summarizing function: usc_reset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 149	misses: 2

doing lockset
doing guarded access
TIMES : SCC:495 : 0.00399494171143
TIMES : FUN:5095.f : 0.00398397445679
=================================
Finished an SCC (1)
=================================
Summary for function: usc_reset:5095.f
=======

SUMS (nm, lo, un, wr, re):	usc_reset	0	0	6	6	

SS Sum:
 -> 
$SSBOT
SIZES: 5095.f : 54700
>>> PROGRESS 561/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #589
=================================
Summarizing function: usc_set_txidle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 14	misses: 2

doing lockset
doing guarded access
TIMES : SCC:589 : 0.00339508056641
TIMES : FUN:5089.f : 0.00338292121887
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_txidle:5089.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_txidle	0	0	2	6	

SS Sum:
 -> 
$SSBOT
SIZES: 5089.f : 110068
>>> PROGRESS 562/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #595
=================================
Summarizing function: usc_stop_receiver : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5086.f : 0.00548696517944
TIMES : SCC:595 : 0.0054988861084
=================================
Finished an SCC (1)
=================================
Summary for function: usc_stop_receiver:5086.f
=======

SUMS (nm, lo, un, wr, re):	usc_stop_receiver	0	0	3	5	

SS Sum:
 -> 
$SSBOT
SIZES: 5086.f : 165424
>>> PROGRESS 563/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #588
=================================
Summarizing function: usc_set_sdlc_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 36	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5097.f : 0.0276110172272
TIMES : SCC:588 : 0.0276260375977
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_sdlc_mode:5097.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_sdlc_mode	0	0	9	15	

SS Sum:
 -> 
$SSBOT
SIZES: 5097.f : 167793
>>> PROGRESS 564/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #590
=================================
Summarizing function: usc_enable_loopback : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 209	misses: 2

doing lockset
doing guarded access
TIMES : SCC:590 : 0.0152950286865
TIMES : FUN:5092.f : 0.0152840614319
=================================
Finished an SCC (1)
=================================
Summary for function: usc_enable_loopback:5092.f
=======

SUMS (nm, lo, un, wr, re):	usc_enable_loopback	0	0	1	4	

SS Sum:
 -> 
$SSBOT
SIZES: 5092.f : 54313
>>> PROGRESS 565/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #492
=================================
Summarizing function: mgsl_dma_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 44	misses: 2

doing lockset
doing guarded access
TIMES : SCC:492 : 0.0286021232605
TIMES : FUN:5110.f : 0.028589963913
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_dma_test:5110.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_dma_test	0	1	19	26	

SS Sum:
 -> 
$SSTOP
SIZES: 5110.f : 168384
>>> PROGRESS 566/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #493
=================================
Summarizing function: mgsl_irq_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 168	misses: 7

doing lockset
doing guarded access
TIMES : FUN:5109.f : 0.00686311721802
TIMES : SCC:493 : 0.00687408447266
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_irq_test:5109.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_irq_test	0	1	7	7	

SS Sum:
 -> 
$SSTOP
SIZES: 5109.f : 108743
>>> PROGRESS 567/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #494
=================================
Summarizing function: mgsl_register_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 62	misses: 5

doing lockset
doing guarded access
TIMES : SCC:494 : 0.00964999198914
TIMES : FUN:5108.f : 0.0096390247345
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_register_test:5108.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_register_test	0	1	6	9	

SS Sum:
 -> 
$SSTOP
SIZES: 5108.f : 109104
>>> PROGRESS 568/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #491
=================================
Summarizing function: mgsl_adapter_test : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 76	misses: 3

doing lockset
doing guarded access
TIMES : FUN:5112.f : 0.00970101356506
TIMES : SCC:491 : 0.00971293449402
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_adapter_test:5112.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_adapter_test	0	1	21	31	

SS Sum:
 -> 
$SSTOP
SIZES: 5112.f : 169145
>>> PROGRESS 569/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #585
=================================
Summarizing function: usc_enable_async_clock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 74	misses: 8

doing lockset
doing guarded access
TIMES : FUN:5099.f : 0.0158140659332
TIMES : SCC:585 : 0.0158240795135
=================================
Finished an SCC (1)
=================================
Summary for function: usc_enable_async_clock:5099.f
=======

SUMS (nm, lo, un, wr, re):	usc_enable_async_clock	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5099.f : 109596
>>> PROGRESS 570/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #587
=================================
Summarizing function: usc_loopback_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 31	misses: 2

doing lockset
doing guarded access
TIMES : SCC:587 : 0.0180439949036
TIMES : FUN:5100.f : 0.0180330276489
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopback_frame:5100.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopback_frame	0	0	11	15	

SS Sum:
 -> 
$SSBOT
SIZES: 5100.f : 168163
>>> PROGRESS 571/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #584
=================================
Summarizing function: usc_set_async_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 95	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5098.f : 0.0171089172363
TIMES : SCC:584 : 0.0171201229095
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_async_mode:5098.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_async_mode	0	0	11	19	

SS Sum:
 -> 
$SSBOT
SIZES: 5098.f : 113071
>>> PROGRESS 572/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #591
=================================
Summarizing function: usc_enable_aux_clock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 123	misses: 2

doing lockset
doing guarded access
TIMES : SCC:591 : 0.00382494926453
TIMES : FUN:5091.f : 0.00381398200989
=================================
Finished an SCC (1)
=================================
Summary for function: usc_enable_aux_clock:5091.f
=======

SUMS (nm, lo, un, wr, re):	usc_enable_aux_clock	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 5091.f : 109560
>>> PROGRESS 573/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #586
=================================
Summarizing function: usc_set_sync_mode : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 23	misses: 2

doing lockset
doing guarded access
TIMES : SCC:586 : 0.0117781162262
TIMES : FUN:5096.f : 0.011766910553
=================================
Finished an SCC (1)
=================================
Summary for function: usc_set_sync_mode:5096.f
=======

SUMS (nm, lo, un, wr, re):	usc_set_sync_mode	0	0	11	16	

SS Sum:
 -> 
$SSBOT
SIZES: 5096.f : 112789
>>> PROGRESS 574/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #593
=================================
Summarizing function: usc_start_receiver : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 67	misses: 2

doing lockset
doing guarded access
TIMES : SCC:593 : 0.0104780197144
TIMES : FUN:5085.f : 0.0104658603668
=================================
Finished an SCC (1)
=================================
Summary for function: usc_start_receiver:5085.f
=======

SUMS (nm, lo, un, wr, re):	usc_start_receiver	0	0	5	9	

SS Sum:
 -> 
$SSBOT
SIZES: 5085.f : 274810
>>> PROGRESS 575/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #583
=================================
Summarizing function: mgsl_program_hw : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 109	misses: 2

doing lockset
doing guarded access
TIMES : SCC:583 : 0.0259389877319
TIMES : FUN:5334.f : 0.0259280204773
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_program_hw:5334.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_program_hw	0	1	21	27	

SS Sum:
 -> 
$SSBOT
SIZES: 5334.f : 387978
>>> PROGRESS 576/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #582
=================================
Summarizing function: mgsl_change_params : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 186	misses: 3

doing lockset
doing guarded access
TIMES : SCC:582 : 0.0089099407196
TIMES : FUN:5225.f : 0.00889706611633
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_change_params:5225.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_change_params	0	1	29	35	

SS Sum:
 -> 
$SSBOT
SIZES: 5225.f : 279895
>>> PROGRESS 577/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #738
=================================
Summarizing function: capable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 48	misses: 3

doing lockset
doing guarded access
TIMES : SCC:738 : 0.00164890289307
TIMES : FUN:2118.f : 0.00163793563843
=================================
Finished an SCC (1)
=================================
Summary for function: capable:2118.f
=======

SUMS (nm, lo, un, wr, re):	capable	0	0	1	3	

SS Sum:
 -> 
$SSTOP
SIZES: 2118.f : 99950
>>> PROGRESS 578/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #480
=================================
Summarizing function: startup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:480 : 0.0210680961609
TIMES : FUN:5320.f : 0.0210571289062
=================================
Finished an SCC (1)
=================================
Summary for function: startup:5320.f
=======

SUMS (nm, lo, un, wr, re):	startup	0	1	80	83	

SS Sum:
 -> 
$SSTOP
SIZES: 5320.f : 445408
>>> PROGRESS 579/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #896
=================================
Summarizing function: mgsl_paranoia_check : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 237	misses: 7

doing lockset
doing guarded access
TIMES : FUN:5230.f : 0.000619888305664
TIMES : SCC:896 : 0.000633955001831
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_paranoia_check:5230.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_paranoia_check	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 5230.f : 34
>>> PROGRESS 580/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #478
=================================
Summarizing function: mgsl_open : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:478 : 0.0326681137085
TIMES : FUN:5660.f : 0.0326550006866
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_open:5660.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_open	0	2	91	98	

SS Sum:
 -> 
$SSTOP
SIZES: 5660.f : 501587
>>> PROGRESS 581/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #498
=================================
Summarizing function: shutdown : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 191	misses: 10

doing lockset
doing guarded access
TIMES : SCC:498 : 0.0267119407654
TIMES : FUN:5326.f : 0.0267000198364
=================================
Finished an SCC (1)
=================================
Summary for function: shutdown:5326.f
=======

SUMS (nm, lo, un, wr, re):	shutdown	0	1	24	33	

SS Sum:
 -> 
$SSBOT
SIZES: 5326.f : 387342
>>> PROGRESS 582/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #850
=================================
Summarizing function: mgsl_flush_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 107	misses: 6

doing lockset
doing guarded access
TIMES : SCC:850 : 0.00452303886414
TIMES : FUN:5380.f : 0.0045120716095
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_flush_buffer:5380.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_flush_buffer	0	1	3	4	

SS Sum:
 -> 
$SSBOT
SIZES: 5380.f : 54026
>>> PROGRESS 583/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #496
=================================
Summarizing function: mgsl_hangup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 5

doing lockset
doing guarded access
TIMES : FUN:5626.f : 0.0143811702728
TIMES : SCC:496 : 0.0143930912018
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_hangup:5626.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_hangup	0	2	29	36	

SS Sum:
 -> 
$SSBOT
SIZES: 5626.f : 387760
>>> PROGRESS 584/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #506
=================================
Summarizing function: mgsl_bh_action : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 61	misses: 8

doing lockset
doing guarded access
TIMES : SCC:506 : 0.00180196762085
TIMES : FUN:5250.f : 0.00179100036621
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_action:5250.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_action	0	1	3	1	

SS Sum:
 -> 
$SSTOP
SIZES: 5250.f : 54033
>>> PROGRESS 585/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #507
=================================
Summarizing function: mgsl_bh_status : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:507 : 0.00104689598083
TIMES : FUN:5140.f : 0.00103497505188
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_status:5140.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_status	0	0	4	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5140.f : 53963
>>> PROGRESS 586/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #511
=================================
Summarizing function: ldisc_receive_buf : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5234.f : 0.00138592720032
TIMES : SCC:511 : 0.00139689445496
=================================
Finished an SCC (1)
=================================
Summary for function: ldisc_receive_buf:5234.f
=======

SUMS (nm, lo, un, wr, re):	ldisc_receive_buf	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 5234.f : 49814
>>> PROGRESS 587/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #512
=================================
Summarizing function: mgsl_free_rx_frame_buffers : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5117.f : 0.00100588798523
TIMES : SCC:512 : 0.00101685523987
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_free_rx_frame_buffers:5117.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_free_rx_frame_buffers	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 5117.f : 53913
>>> PROGRESS 588/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #509
=================================
Summarizing function: mgsl_get_raw_rx_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:509 : 0.0103249549866
TIMES : FUN:5119.f : 0.0103139877319
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_raw_rx_frame:5119.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_raw_rx_frame	0	1	11	27	

SS Sum:
 -> 
$SSTOP
SIZES: 5119.f : 274758
>>> PROGRESS 589/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #510
=================================
Summarizing function: mgsl_get_rx_frame : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 23	misses: 5

doing lockset
doing guarded access
TIMES : SCC:510 : 0.0193099975586
TIMES : FUN:5118.f : 0.0192999839783
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_rx_frame:5118.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_rx_frame	0	1	13	31	

SS Sum:
 -> 
$SSTOP
SIZES: 5118.f : 275210
>>> PROGRESS 590/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #508
=================================
Summarizing function: mgsl_bh_receive : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 41	misses: 5

doing lockset
doing guarded access
TIMES : FUN:5138.f : 0.0279259681702
TIMES : SCC:508 : 0.0279369354248
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_receive:5138.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_receive	0	1	13	38	

SS Sum:
 -> 
$SSBOT
SIZES: 5138.f : 331136
>>> PROGRESS 591/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #576
=================================
Summarizing function: usc_loopmode_send_done : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 95	misses: 12

doing lockset
doing guarded access
TIMES : FUN:5105.f : 0.00165200233459
TIMES : SCC:576 : 0.00166201591492
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_send_done:5105.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_send_done	0	0	2	4	

SS Sum:
 -> 
$SSBOT
SIZES: 5105.f : 109472
>>> PROGRESS 592/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #514
=================================
Summarizing function: mgsl_bh_transmit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : SCC:514 : 0.0036609172821
TIMES : FUN:5139.f : 0.00365090370178
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_transmit:5139.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_transmit	0	1	2	8	

SS Sum:
 -> 
$SSBOT
SIZES: 5139.f : 109651
>>> PROGRESS 593/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #505
=================================
Summarizing function: mgsl_bh_handler : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 5

doing lockset
doing guarded access
TIMES : SCC:505 : 0.0152649879456
TIMES : FUN:5137.f : 0.015251159668
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_bh_handler:5137.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_bh_handler	0	1	22	42	

SS Sum:
 -> 
$SSBOT
SIZES: 5137.f : 439534
>>> PROGRESS 594/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #575
=================================
Summarizing function: usc_loopmode_cancel_transmit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 70	misses: 9

doing lockset
doing guarded access
TIMES : SCC:575 : 0.00561809539795
TIMES : FUN:5102.f : 0.0056049823761
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_cancel_transmit:5102.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_cancel_transmit	0	0	2	5	

SS Sum:
 -> 
$SSBOT
SIZES: 5102.f : 165101
>>> PROGRESS 595/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #513
=================================
Summarizing function: mgsl_tx_timeout : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 13	misses: 2

doing lockset
doing guarded access
TIMES : SCC:513 : 0.145584106445
TIMES : FUN:5101.f : 0.145570993423
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_tx_timeout:5101.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_tx_timeout	0	1	7	14	

SS Sum:
 -> 
$SSBOT
SIZES: 5101.f : 273102
>>> PROGRESS 596/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #520
=================================
Summarizing function: mgsl_wait_until_sent : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 15	misses: 7

doing lockset
doing guarded access
TIMES : SCC:520 : 0.0162630081177
TIMES : FUN:5226.f : 0.0162498950958
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_wait_until_sent:5226.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_wait_until_sent	0	0	0	13	

SS Sum:
 -> 
$SSBOT
SIZES: 5226.f : 209637
>>> PROGRESS 597/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #497
=================================
Summarizing function: mgsl_close : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 16	misses: 2

doing lockset
doing guarded access
TIMES : SCC:497 : 0.0356669425964
TIMES : FUN:5595.f : 0.0356571674347
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_close:5595.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_close	0	1	30	68	

SS Sum:
 -> 
$SSBOT
SIZES: 5595.f : 649495
>>> PROGRESS 598/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #518
=================================
Summarizing function: mgsl_start : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 162	misses: 9

doing lockset
doing guarded access
TIMES : SCC:518 : 0.009516954422
TIMES : FUN:5245.f : 0.00950503349304
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_start:5245.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_start	0	1	11	23	

SS Sum:
 -> 
$SSBOT
SIZES: 5245.f : 111758
>>> PROGRESS 599/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #886
=================================
Summarizing function: constant_test_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 33	misses: 5

doing lockset
doing guarded access
TIMES : FUN:201.f : 0.000765085220337
TIMES : SCC:886 : 0.000777959823608
=================================
Finished an SCC (1)
=================================
Summary for function: constant_test_bit:201.f
=======

SUMS (nm, lo, un, wr, re):	constant_test_bit	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 201.f : 99
>>> PROGRESS 600/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #515
=================================
Summarizing function: mgsl_set_termios : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:515 : 0.0125041007996
TIMES : FUN:5588.f : 0.0124931335449
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_set_termios:5588.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_set_termios	0	2	41	63	

SS Sum:
 -> 
$SSBOT
SIZES: 5588.f : 392566
>>> PROGRESS 601/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #516
=================================
Summarizing function: mgsl_flush_chars : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 108	misses: 9

doing lockset
doing guarded access
TIMES : FUN:5350.f : 0.00718593597412
TIMES : SCC:516 : 0.00719594955444
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_flush_chars:5350.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_flush_chars	0	1	20	34	

SS Sum:
 -> 
$SSBOT
SIZES: 5350.f : 168778
>>> PROGRESS 602/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #517
=================================
Summarizing function: mgsl_put_char : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 55	misses: 5

doing lockset
doing guarded access
TIMES : SCC:517 : 0.00594115257263
TIMES : FUN:5343.f : 0.00592994689941
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_put_char:5343.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_put_char	0	1	3	7	

SS Sum:
 -> 
$SSBOT
SIZES: 5343.f : 54158
>>> PROGRESS 603/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #519
=================================
Summarizing function: mgsl_stop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 3

doing lockset
doing guarded access
TIMES : FUN:5240.f : 0.00310683250427
TIMES : SCC:519 : 0.00311803817749
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_stop:5240.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_stop	0	1	2	8	

SS Sum:
 -> 
$SSBOT
SIZES: 5240.f : 109803
>>> PROGRESS 604/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #521
=================================
Summarizing function: tiocmset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 8	misses: 5

doing lockset
doing guarded access
TIMES : FUN:5152.f : 0.00279593467712
TIMES : SCC:521 : 0.00280690193176
=================================
Finished an SCC (1)
=================================
Summary for function: tiocmset:5152.f
=======

SUMS (nm, lo, un, wr, re):	tiocmset	0	1	1	6	

SS Sum:
 -> 
Vval: 0
SIZES: 5152.f : 109638
>>> PROGRESS 605/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #522
=================================
Summarizing function: tiocmget : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 4

doing lockset
doing guarded access
TIMES : SCC:522 : 0.00659012794495
TIMES : FUN:5151.f : 0.00657987594604
=================================
Finished an SCC (1)
=================================
Summary for function: tiocmget:5151.f
=======

SUMS (nm, lo, un, wr, re):	tiocmget	0	1	1	5	

SS Sum:
 -> 
$SSTOP
SIZES: 5151.f : 109615
>>> PROGRESS 606/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #571
=================================
Summarizing function: mgsl_loopmode_send_done : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 4

doing lockset
doing guarded access
TIMES : SCC:571 : 0.00308609008789
TIMES : FUN:5162.f : 0.00307488441467
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_loopmode_send_done:5162.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_loopmode_send_done	0	1	2	6	

SS Sum:
 -> 
Vval: 0
SIZES: 5162.f : 163276
>>> PROGRESS 607/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #729
=================================
Summarizing function: waitqueue_active : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 3

doing lockset
doing guarded access
TIMES : FUN:1424.f : 0.00499606132507
TIMES : SCC:729 : 0.00500702857971
=================================
Finished an SCC (1)
=================================
Summary for function: waitqueue_active:1424.f
=======

SUMS (nm, lo, un, wr, re):	waitqueue_active	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1424.f : 382
>>> PROGRESS 608/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #572
=================================
Summarizing function: mgsl_wait_event : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:572 : 0.0226671695709
TIMES : FUN:5161.f : 0.0226550102234
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_wait_event:5161.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_wait_event	0	1	6	11	

SS Sum:
 -> 
$SSTOP
SIZES: 5161.f : 265601
>>> PROGRESS 609/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #573
=================================
Summarizing function: mgsl_rxenable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 51	misses: 7

doing lockset
doing guarded access
TIMES : FUN:5160.f : 0.00773310661316
TIMES : SCC:573 : 0.00774383544922
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_rxenable:5160.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_rxenable	0	1	5	10	

SS Sum:
 -> 
Vval: 0
SIZES: 5160.f : 328605
>>> PROGRESS 610/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #574
=================================
Summarizing function: mgsl_txabort : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 23	misses: 4

doing lockset
doing guarded access
TIMES : SCC:574 : 0.00458312034607
TIMES : FUN:5159.f : 0.00457191467285
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_txabort:5159.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_txabort	0	1	2	10	

SS Sum:
 -> 
Vval: 0
SIZES: 5159.f : 219011
>>> PROGRESS 611/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #578
=================================
Summarizing function: usc_loopmode_insert_request : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 11	misses: 4

doing lockset
doing guarded access
TIMES : FUN:5103.f : 0.00424599647522
TIMES : SCC:578 : 0.00425601005554
=================================
Finished an SCC (1)
=================================
Summary for function: usc_loopmode_insert_request:5103.f
=======

SUMS (nm, lo, un, wr, re):	usc_loopmode_insert_request	0	0	2	4	

SS Sum:
 -> 
$SSBOT
SIZES: 5103.f : 164980
>>> PROGRESS 612/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #577
=================================
Summarizing function: mgsl_txenable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 9	misses: 2

doing lockset
doing guarded access
TIMES : SCC:577 : 0.0119450092316
TIMES : FUN:5158.f : 0.0119340419769
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_txenable:5158.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_txenable	0	1	13	23	

SS Sum:
 -> 
Vval: 0
SIZES: 5158.f : 112227
>>> PROGRESS 613/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #579
=================================
Summarizing function: mgsl_set_txidle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 49	misses: 4

doing lockset
doing guarded access
TIMES : SCC:579 : 0.00309801101685
TIMES : FUN:5157.f : 0.00308799743652
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_set_txidle:5157.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_set_txidle	0	1	3	7	

SS Sum:
 -> 
Vval: 0
SIZES: 5157.f : 163836
>>> PROGRESS 614/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #580
=================================
Summarizing function: mgsl_get_txidle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 8	misses: 4

doing lockset
doing guarded access
TIMES : FUN:5156.f : 0.00135803222656
TIMES : SCC:580 : 0.00136995315552
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_txidle:5156.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_txidle	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 5156.f : 53819
>>> PROGRESS 615/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #581
=================================
Summarizing function: mgsl_set_params : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:581 : 0.0113000869751
TIMES : FUN:5155.f : 0.0112891197205
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_set_params:5155.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_set_params	0	1	30	36	

SS Sum:
 -> 
$SSTOP
SIZES: 5155.f : 334190
>>> PROGRESS 616/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #596
=================================
Summarizing function: mgsl_get_params : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 67	misses: 8

doing lockset
doing guarded access
TIMES : FUN:5154.f : 0.00986504554749
TIMES : SCC:596 : 0.00987601280212
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_params:5154.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_params	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 5154.f : 112
>>> PROGRESS 617/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #597
=================================
Summarizing function: mgsl_get_stats : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:597 : 0.00137805938721
TIMES : FUN:5153.f : 0.00136804580688
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_get_stats:5153.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_get_stats	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 5153.f : 112
>>> PROGRESS 618/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #668
=================================
Summarizing function: modem_input_wait : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5497.f : 0.0123698711395
TIMES : SCC:668 : 0.0123789310455
=================================
Finished an SCC (1)
=================================
Summary for function: modem_input_wait:5497.f
=======

SUMS (nm, lo, un, wr, re):	modem_input_wait	0	1	5	3	

SS Sum:
 -> 
$SSTOP
SIZES: 5497.f : 153945
>>> PROGRESS 619/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #570
=================================
Summarizing function: mgsl_ioctl_common : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 22	misses: 7

doing lockset
doing guarded access
TIMES : FUN:5106.f : 0.054013967514
TIMES : SCC:570 : 0.0540277957916
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_ioctl_common:5106.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_ioctl_common	0	1	49	56	

SS Sum:
 -> 
$SSTOP
SIZES: 5106.f : 655826
>>> PROGRESS 620/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #569
=================================
Summarizing function: mgsl_ioctl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 170	misses: 19

doing lockset
doing guarded access
TIMES : SCC:569 : 0.0317261219025
TIMES : FUN:5550.f : 0.0317142009735
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_ioctl:5550.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_ioctl	0	1	49	58	

SS Sum:
 -> 
$SSTOP
SIZES: 5550.f : 655987
>>> PROGRESS 621/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #608
=================================
Summarizing function: mgsl_break : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 104	misses: 4

doing lockset
doing guarded access
TIMES : FUN:5542.f : 0.00767207145691
TIMES : SCC:608 : 0.00768184661865
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_break:5542.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_break	0	1	0	5	

SS Sum:
 -> 
$SSBOT
SIZES: 5542.f : 164920
>>> PROGRESS 622/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #840
=================================
Summarizing function: mgsl_send_xchar : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 14	misses: 4

doing lockset
doing guarded access
TIMES : SCC:840 : 0.00656080245972
TIMES : FUN:5385.f : 0.00654888153076
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_send_xchar:5385.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_send_xchar	0	1	11	23	

SS Sum:
 -> 
$SSBOT
SIZES: 5385.f : 112012
>>> PROGRESS 623/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #817
=================================
Summarizing function: mgsl_unthrottle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 34	misses: 4

doing lockset
doing guarded access
TIMES : FUN:5396.f : 0.00676202774048
TIMES : SCC:817 : 0.00677299499512
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_unthrottle:5396.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_unthrottle	0	2	13	31	

SS Sum:
 -> 
$SSBOT
SIZES: 5396.f : 168013
>>> PROGRESS 624/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #826
=================================
Summarizing function: mgsl_throttle : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 37	misses: 7

doing lockset
doing guarded access
TIMES : SCC:826 : 0.00852203369141
TIMES : FUN:5391.f : 0.00851106643677
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_throttle:5391.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_throttle	0	2	12	30	

SS Sum:
 -> 
$SSBOT
SIZES: 5391.f : 167989
>>> PROGRESS 625/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #863
=================================
Summarizing function: mgsl_write_room : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 37	misses: 7

doing lockset
doing guarded access
TIMES : SCC:863 : 0.00154304504395
TIMES : FUN:5371.f : 0.00153207778931
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_write_room:5371.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_write_room	0	0	0	5	

SS Sum:
 -> 
$SSTOP
SIZES: 5371.f : 53943
>>> PROGRESS 626/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #897
=================================
Summarizing function: save_tx_buffer_request : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:5136.f : 0.00140690803528
TIMES : SCC:897 : 0.00141906738281
=================================
Finished an SCC (1)
=================================
Summary for function: save_tx_buffer_request:5136.f
=======

SUMS (nm, lo, un, wr, re):	save_tx_buffer_request	0	0	3	4	

SS Sum:
 -> 
$SSTOP
SIZES: 5136.f : 54034
>>> PROGRESS 627/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #895
=================================
Summarizing function: mgsl_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:895 : 0.0123610496521
TIMES : FUN:5355.f : 0.0123500823975
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_write:5355.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_write	0	1	25	44	

SS Sum:
 -> 
$SSTOP
SIZES: 5355.f : 225503
>>> PROGRESS 628/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #475
=================================
Summarizing function: f : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 124	misses: 7

doing lockset
doing guarded access
TIMES : FUN:6155.f : 0.194939851761
TIMES : SCC:475 : 0.19495177269
=================================
Finished an SCC (1)
=================================
Summary for function: f:6155.f
=======

SUMS (nm, lo, un, wr, re):	f	0	19	290	431	

SS Sum:
 -> 
Vval: 0
SIZES: 6155.f : 3725190
>>> PROGRESS 629/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #524
=================================
Summarizing function: down_trylock : synclink.ko_merged.c
-----
doing symstate
TIMES : SCC:524 : 0.000564098358154
TIMES : FUN:1553.f : 0.000554084777832
=================================
Finished an SCC (1)
=================================
Summary for function: down_trylock:1553.f
=======

SUMS (nm, lo, un, wr, re):	down_trylock	1	0	0	0	

SS Sum:
 -> 
Vval: result
SIZES: 1553.f : 147
>>> PROGRESS 630/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #529
=================================
Summarizing function: set_dma_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 899	misses: 62

doing lockset
doing guarded access
TIMES : FUN:4999.f : 0.00414204597473
TIMES : SCC:529 : 0.00415301322937
=================================
Finished an SCC (1)
=================================
Summary for function: set_dma_page:4999.f
=======

SUMS (nm, lo, un, wr, re):	set_dma_page	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4999.f : 34
>>> PROGRESS 631/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #525
=================================
Summarizing function: set_dma_addr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 1

doing lockset
doing guarded access
TIMES : FUN:5002.f : 0.00111508369446
TIMES : SCC:525 : 0.00112318992615
=================================
Finished an SCC (1)
=================================
Summary for function: set_dma_addr:5002.f
=======

SUMS (nm, lo, un, wr, re):	set_dma_addr	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 5002.f : 34
>>> PROGRESS 632/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #526
=================================
Summarizing function: down_interruptible : synclink.ko_merged.c
-----
doing symstate
TIMES : SCC:526 : 0.000694036483765
TIMES : FUN:1550.f : 0.000683069229126
=================================
Finished an SCC (1)
=================================
Summary for function: down_interruptible:1550.f
=======

SUMS (nm, lo, un, wr, re):	down_interruptible	1	0	0	0	

SS Sum:
 -> 
Vval: result
SIZES: 1550.f : 147
>>> PROGRESS 633/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #528
=================================
Summarizing function: mmdrop : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:528 : 0.00395488739014
TIMES : FUN:2124.f : 0.0039439201355
=================================
Finished an SCC (1)
=================================
Summary for function: mmdrop:2124.f
=======

SUMS (nm, lo, un, wr, re):	mmdrop	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2124.f : 34
>>> PROGRESS 634/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #530
=================================
Summarizing function: csum_and_copy_to_user : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:530 : 0.0048828125
TIMES : FUN:4422.f : 0.00487399101257
=================================
Finished an SCC (1)
=================================
Summary for function: csum_and_copy_to_user:4422.f
=======

SUMS (nm, lo, un, wr, re):	csum_and_copy_to_user	0	0	1	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4422.f : 99
>>> PROGRESS 635/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #532
=================================
Summarizing function: console_verbose : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:395.f : 0.000715970993042
TIMES : SCC:532 : 0.000729084014893
=================================
Finished an SCC (1)
=================================
Summary for function: console_verbose:395.f
=======

SUMS (nm, lo, un, wr, re):	console_verbose	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 395.f : 141
>>> PROGRESS 636/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #533
=================================
Summarizing function: console_silent : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:533 : 0.000642061233521
TIMES : FUN:394.f : 0.000632047653198
=================================
Finished an SCC (1)
=================================
Summary for function: console_silent:394.f
=======

SUMS (nm, lo, un, wr, re):	console_silent	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 394.f : 112
>>> PROGRESS 637/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #534
=================================
Summarizing function: clear_dma_ff : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:534 : 0.00359201431274
TIMES : FUN:4994.f : 0.00358200073242
=================================
Finished an SCC (1)
=================================
Summary for function: clear_dma_ff:4994.f
=======

SUMS (nm, lo, un, wr, re):	clear_dma_ff	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4994.f : 34
>>> PROGRESS 638/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #535
=================================
Summarizing function: capable___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:535 : 0.00174403190613
TIMES : FUN:6143.f : 0.00173497200012
=================================
Finished an SCC (1)
=================================
Summary for function: capable___0:6143.f
=======

SUMS (nm, lo, un, wr, re):	capable___0	0	0	1	3	

SS Sum:
 -> 
$SSTOP
SIZES: 6143.f : 99942
>>> PROGRESS 639/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #546
=================================
Summarizing function: sema_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:546 : 0.00127911567688
TIMES : FUN:1537.f : 0.00126791000366
=================================
Finished an SCC (1)
=================================
Summary for function: sema_init:1537.f
=======

SUMS (nm, lo, un, wr, re):	sema_init	0	0	5	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1537.f : 879
>>> PROGRESS 640/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #536
=================================
Summarizing function: init_MUTEX_LOCKED : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:536 : 0.00108599662781
TIMES : FUN:1542.f : 0.0010769367218
=================================
Finished an SCC (1)
=================================
Summary for function: init_MUTEX_LOCKED:1542.f
=======

SUMS (nm, lo, un, wr, re):	init_MUTEX_LOCKED	0	0	5	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1542.f : 879
>>> PROGRESS 641/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #538
=================================
Summarizing function: kernel_map_pages : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3841.f : 0.000655889511108
TIMES : SCC:538 : 0.000668048858643
=================================
Finished an SCC (1)
=================================
Summary for function: kernel_map_pages:3841.f
=======

SUMS (nm, lo, un, wr, re):	kernel_map_pages	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3841.f : 34
>>> PROGRESS 642/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #539
=================================
Summarizing function: init_MUTEX : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:539 : 0.00106692314148
TIMES : FUN:1540.f : 0.00105881690979
=================================
Finished an SCC (1)
=================================
Summary for function: init_MUTEX:1540.f
=======

SUMS (nm, lo, un, wr, re):	init_MUTEX	0	0	5	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1540.f : 917
>>> PROGRESS 643/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #543
=================================
Summarizing function: sigdelsetmask___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 1

doing lockset
doing guarded access
TIMES : SCC:543 : 0.000996112823486
TIMES : FUN:6140.f : 0.000983953475952
=================================
Finished an SCC (1)
=================================
Summary for function: sigdelsetmask___0:6140.f
=======

SUMS (nm, lo, un, wr, re):	sigdelsetmask___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6140.f : 186
>>> PROGRESS 644/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #784
=================================
Summarizing function: generic_fls : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:784 : 0.000773906707764
TIMES : FUN:156.f : 0.000762939453125
=================================
Finished an SCC (1)
=================================
Summary for function: generic_fls:156.f
=======

SUMS (nm, lo, un, wr, re):	generic_fls	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 156.f : 34
>>> PROGRESS 645/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #544
=================================
Summarizing function: roundup_pow_of_two : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:389.f : 0.00368785858154
TIMES : SCC:544 : 0.00369787216187
=================================
Finished an SCC (1)
=================================
Summary for function: roundup_pow_of_two:389.f
=======

SUMS (nm, lo, un, wr, re):	roundup_pow_of_two	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 389.f : 34
>>> PROGRESS 646/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #545
=================================
Summarizing function: release_dma_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4988.f : 0.00100612640381
TIMES : SCC:545 : 0.00101685523987
=================================
Finished an SCC (1)
=================================
Summary for function: release_dma_lock:4988.f
=======

SUMS (nm, lo, un, wr, re):	release_dma_lock	0	1	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4988.f : 46
>>> PROGRESS 647/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #547
=================================
Summarizing function: pci_write_config_dword : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:547 : 0.00456404685974
TIMES : FUN:2687.f : 0.00455498695374
=================================
Finished an SCC (1)
=================================
Summary for function: pci_write_config_dword:2687.f
=======

SUMS (nm, lo, un, wr, re):	pci_write_config_dword	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2687.f : 56684
>>> PROGRESS 648/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #568
=================================
Summarizing function: vma_pages : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:568 : 0.000824928283691
TIMES : FUN:3825.f : 0.000813961029053
=================================
Finished an SCC (1)
=================================
Summary for function: vma_pages:3825.f
=======

SUMS (nm, lo, un, wr, re):	vma_pages	0	0	0	2	

SS Sum:
 -> 
Vval: (vma->vm_end - vma->vm_start) >> 12
SIZES: 3825.f : 49760
>>> PROGRESS 649/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #548
=================================
Summarizing function: vm_stat_unaccount : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3837.f : 0.0060658454895
TIMES : SCC:548 : 0.00607395172119
=================================
Finished an SCC (1)
=================================
Summary for function: vm_stat_unaccount:3837.f
=======

SUMS (nm, lo, un, wr, re):	vm_stat_unaccount	0	0	0	5	

SS Sum:
 -> 
$SSBOT
SIZES: 3837.f : 49838
>>> PROGRESS 650/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #549
=================================
Summarizing function: sigaddsetmask___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : FUN:6137.f : 0.00091290473938
TIMES : SCC:549 : 0.000923156738281
=================================
Finished an SCC (1)
=================================
Summary for function: sigaddsetmask___0:6137.f
=======

SUMS (nm, lo, un, wr, re):	sigaddsetmask___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6137.f : 186
>>> PROGRESS 651/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #550
=================================
Summarizing function: long_log2 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:550 : 0.000751972198486
TIMES : FUN:386.f : 0.000741958618164
=================================
Finished an SCC (1)
=================================
Summary for function: long_log2:386.f
=======

SUMS (nm, lo, un, wr, re):	long_log2	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 386.f : 34
>>> PROGRESS 652/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #551
=================================
Summarizing function: claim_dma_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:551 : 0.00111198425293
TIMES : FUN:4986.f : 0.00110197067261
=================================
Finished an SCC (1)
=================================
Summary for function: claim_dma_lock:4986.f
=======

SUMS (nm, lo, un, wr, re):	claim_dma_lock	1	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4986.f : 46
>>> PROGRESS 653/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #618
=================================
Summarizing function: __downgrade_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:618 : 0.000687837600708
TIMES : FUN:1510.f : 0.000676155090332
=================================
Finished an SCC (1)
=================================
Summary for function: __downgrade_write:1510.f
=======

SUMS (nm, lo, un, wr, re):	__downgrade_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1510.f : 34
>>> PROGRESS 654/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #552
=================================
Summarizing function: downgrade_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1535.f : 0.000858068466187
TIMES : SCC:552 : 0.000867128372192
=================================
Finished an SCC (1)
=================================
Summary for function: downgrade_write:1535.f
=======

SUMS (nm, lo, un, wr, re):	downgrade_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1535.f : 34
>>> PROGRESS 655/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #619
=================================
Summarizing function: csum_fold : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:619 : 0.00109219551086
TIMES : FUN:4385.f : 0.00107479095459
=================================
Finished an SCC (1)
=================================
Summary for function: csum_fold:4385.f
=======

SUMS (nm, lo, un, wr, re):	csum_fold	0	0	0	0	

SS Sum:
 -> 
Vval: ~ sum >> 16
SIZES: 4385.f : 34
>>> PROGRESS 656/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #718
=================================
Summarizing function: ___arch__swab32 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:286.f : 0.00132989883423
TIMES : SCC:718 : 0.00134611129761
=================================
Finished an SCC (1)
=================================
Summary for function: ___arch__swab32:286.f
=======

SUMS (nm, lo, un, wr, re):	___arch__swab32	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 286.f : 34
>>> PROGRESS 657/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #699
=================================
Summarizing function: __fswab32 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:699 : 0.00247812271118
TIMES : FUN:303.f : 0.00246691703796
=================================
Finished an SCC (1)
=================================
Summary for function: __fswab32:303.f
=======

SUMS (nm, lo, un, wr, re):	__fswab32	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 303.f : 34
>>> PROGRESS 658/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #553
=================================
Summarizing function: csum_ipv6_magic : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:553 : 0.00374007225037
TIMES : FUN:4410.f : 0.00373101234436
=================================
Finished an SCC (1)
=================================
Summary for function: csum_ipv6_magic:4410.f
=======

SUMS (nm, lo, un, wr, re):	csum_ipv6_magic	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4410.f : 34
>>> PROGRESS 659/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #554
=================================
Summarizing function: vm_stat_account : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:554 : 0.0025520324707
TIMES : FUN:3834.f : 0.00254321098328
=================================
Finished an SCC (1)
=================================
Summary for function: vm_stat_account:3834.f
=======

SUMS (nm, lo, un, wr, re):	vm_stat_account	0	0	0	5	

SS Sum:
 -> 
$SSBOT
SIZES: 3834.f : 49856
>>> PROGRESS 660/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #925
=================================
Summarizing function: __list_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:925 : 0.000833034515381
TIMES : FUN:1323.f : 0.000822067260742
=================================
Finished an SCC (1)
=================================
Summary for function: __list_add:1323.f
=======

SUMS (nm, lo, un, wr, re):	__list_add	0	0	4	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1323.f : 282
>>> PROGRESS 661/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #892
=================================
Summarizing function: list_add_tail : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:892 : 0.00100183486938
TIMES : FUN:1330.f : 0.000992059707642
=================================
Finished an SCC (1)
=================================
Summary for function: list_add_tail:1330.f
=======

SUMS (nm, lo, un, wr, re):	list_add_tail	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1330.f : 156
>>> PROGRESS 662/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #719
=================================
Summarizing function: __add_wait_queue_tail : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:719 : 0.000983953475952
TIMES : FUN:1434.f : 0.00097393989563
=================================
Finished an SCC (1)
=================================
Summary for function: __add_wait_queue_tail:1434.f
=======

SUMS (nm, lo, un, wr, re):	__add_wait_queue_tail	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1434.f : 305
>>> PROGRESS 663/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #555
=================================
Summarizing function: add_wait_queue_exclusive_locked___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:555 : 0.00101494789124
TIMES : FUN:6134.f : 0.00100612640381
=================================
Finished an SCC (1)
=================================
Summary for function: add_wait_queue_exclusive_locked___0:6134.f
=======

SUMS (nm, lo, un, wr, re):	add_wait_queue_exclusive_locked___0	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 6134.f : 49813
>>> PROGRESS 664/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #622
=================================
Summarizing function: __up_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:622 : 0.000597953796387
TIMES : FUN:1508.f : 0.000586986541748
=================================
Finished an SCC (1)
=================================
Summary for function: __up_write:1508.f
=======

SUMS (nm, lo, un, wr, re):	__up_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1508.f : 34
>>> PROGRESS 665/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #556
=================================
Summarizing function: up_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:556 : 0.000802993774414
TIMES : FUN:1533.f : 0.000794172286987
=================================
Finished an SCC (1)
=================================
Summary for function: up_write:1533.f
=======

SUMS (nm, lo, un, wr, re):	up_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1533.f : 34
>>> PROGRESS 666/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #560
=================================
Summarizing function: on_sig_stack : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:560 : 0.00165987014771
TIMES : FUN:2104.f : 0.00164890289307
=================================
Finished an SCC (1)
=================================
Summary for function: on_sig_stack:2104.f
=======

SUMS (nm, lo, un, wr, re):	on_sig_stack	0	0	0	3	

SS Sum:
 -> 
$SSTOP
SIZES: 2104.f : 99764
>>> PROGRESS 667/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #557
=================================
Summarizing function: sas_ss_flags : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:557 : 0.00332403182983
TIMES : FUN:2108.f : 0.00331401824951
=================================
Finished an SCC (1)
=================================
Summary for function: sas_ss_flags:2108.f
=======

SUMS (nm, lo, un, wr, re):	sas_ss_flags	0	0	0	3	

SS Sum:
 -> 
$SSTOP
SIZES: 2108.f : 99786
>>> PROGRESS 668/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #626
=================================
Summarizing function: __up_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1505.f : 0.00061297416687
TIMES : SCC:626 : 0.000624895095825
=================================
Finished an SCC (1)
=================================
Summary for function: __up_read:1505.f
=======

SUMS (nm, lo, un, wr, re):	__up_read	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1505.f : 34
>>> PROGRESS 669/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #558
=================================
Summarizing function: up_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:558 : 0.000834226608276
TIMES : FUN:1531.f : 0.000824928283691
=================================
Finished an SCC (1)
=================================
Summary for function: up_read:1531.f
=======

SUMS (nm, lo, un, wr, re):	up_read	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1531.f : 34
>>> PROGRESS 670/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #559
=================================
Summarizing function: pci_write_config_word : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2681.f : 0.00108289718628
TIMES : SCC:559 : 0.00109219551086
=================================
Finished an SCC (1)
=================================
Summary for function: pci_write_config_word:2681.f
=======

SUMS (nm, lo, un, wr, re):	pci_write_config_word	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2681.f : 56620
>>> PROGRESS 671/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #561
=================================
Summarizing function: ip_compute_csum : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:561 : 0.00157380104065
TIMES : FUN:4404.f : 0.00156402587891
=================================
Finished an SCC (1)
=================================
Summary for function: ip_compute_csum:4404.f
=======

SUMS (nm, lo, un, wr, re):	ip_compute_csum	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4404.f : 34
>>> PROGRESS 672/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #869
=================================
Summarizing function: div_ll_X_l_rem__extinline : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:869 : 0.000674962997437
TIMES : FUN:767.f : 0.000661849975586
=================================
Finished an SCC (1)
=================================
Summary for function: div_ll_X_l_rem__extinline:767.f
=======

SUMS (nm, lo, un, wr, re):	div_ll_X_l_rem__extinline	0	0	0	0	

SS Sum:
 -> 
Vval: dum2
SIZES: 767.f : 34
>>> PROGRESS 673/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #562
=================================
Summarizing function: jiffies_to_timeval___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:6129.f : 0.00122499465942
TIMES : SCC:562 : 0.00123500823975
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_timeval___0:6129.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_timeval___0	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6129.f : 279
>>> PROGRESS 674/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #631
=================================
Summarizing function: __down_write_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:631 : 0.00107502937317
TIMES : FUN:1500.f : 0.00106501579285
=================================
Finished an SCC (1)
=================================
Summary for function: __down_write_trylock:1500.f
=======

SUMS (nm, lo, un, wr, re):	__down_write_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1500.f : 34
>>> PROGRESS 675/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #563
=================================
Summarizing function: down_write_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1527.f : 0.00227117538452
TIMES : SCC:563 : 0.00227904319763
=================================
Finished an SCC (1)
=================================
Summary for function: down_write_trylock:1527.f
=======

SUMS (nm, lo, un, wr, re):	down_write_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1527.f : 34
>>> PROGRESS 676/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #564
=================================
Summarizing function: write_seqcount_end___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:564 : 0.000807046890259
TIMES : FUN:6127.f : 0.000797033309937
=================================
Finished an SCC (1)
=================================
Summary for function: write_seqcount_end___0:6127.f
=======

SUMS (nm, lo, un, wr, re):	write_seqcount_end___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6127.f : 137
>>> PROGRESS 677/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #565
=================================
Summarizing function: break_lease : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:565 : 0.00183510780334
TIMES : FUN:3251.f : 0.00182104110718
=================================
Finished an SCC (1)
=================================
Summary for function: break_lease:3251.f
=======

SUMS (nm, lo, un, wr, re):	break_lease	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3251.f : 49671
>>> PROGRESS 678/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #638
=================================
Summarizing function: __down_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:638 : 0.00062108039856
TIMES : FUN:1497.f : 0.000609874725342
=================================
Finished an SCC (1)
=================================
Summary for function: __down_write:1497.f
=======

SUMS (nm, lo, un, wr, re):	__down_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1497.f : 34
>>> PROGRESS 679/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #566
=================================
Summarizing function: down_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:566 : 0.00086498260498
TIMES : FUN:1525.f : 0.000856876373291
=================================
Finished an SCC (1)
=================================
Summary for function: down_write:1525.f
=======

SUMS (nm, lo, un, wr, re):	down_write	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1525.f : 34
>>> PROGRESS 680/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #567
=================================
Summarizing function: pci_write_config_byte : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2675.f : 0.00114107131958
TIMES : SCC:567 : 0.00115084648132
=================================
Finished an SCC (1)
=================================
Summary for function: pci_write_config_byte:2675.f
=======

SUMS (nm, lo, un, wr, re):	pci_write_config_byte	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2675.f : 56604
>>> PROGRESS 681/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #598
=================================
Summarizing function: write_seqcount_begin___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:598 : 0.000771045684814
TIMES : FUN:6125.f : 0.000759840011597
=================================
Finished an SCC (1)
=================================
Summary for function: write_seqcount_begin___0:6125.f
=======

SUMS (nm, lo, un, wr, re):	write_seqcount_begin___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6125.f : 137
>>> PROGRESS 682/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #644
=================================
Summarizing function: __down_read_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:644 : 0.000657081604004
TIMES : FUN:1492.f : 0.000646114349365
=================================
Finished an SCC (1)
=================================
Summary for function: __down_read_trylock:1492.f
=======

SUMS (nm, lo, un, wr, re):	__down_read_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1492.f : 34
>>> PROGRESS 683/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #599
=================================
Summarizing function: down_read_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:599 : 0.00285911560059
TIMES : FUN:1521.f : 0.0028510093689
=================================
Finished an SCC (1)
=================================
Summary for function: down_read_trylock:1521.f
=======

SUMS (nm, lo, un, wr, re):	down_read_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1521.f : 34
>>> PROGRESS 684/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #600
=================================
Summarizing function: write_tryseqlock___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:6121.f : 0.00134897232056
TIMES : SCC:600 : 0.00135898590088
=================================
Finished an SCC (1)
=================================
Summary for function: write_tryseqlock___0:6121.f
=======

SUMS (nm, lo, un, wr, re):	write_tryseqlock___0	1	0	1	1	

SS Sum:
 -> 
$SSTOP
SIZES: 6121.f : 268
>>> PROGRESS 685/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #601
=================================
Summarizing function: memscan : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:601 : 0.000655889511108
TIMES : FUN:945.f : 0.00064492225647
=================================
Finished an SCC (1)
=================================
Summary for function: memscan:945.f
=======

SUMS (nm, lo, un, wr, re):	memscan	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*addr)

SIZES: 945.f : 34
>>> PROGRESS 686/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #712
=================================
Summarizing function: __fswab16 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:712 : 0.000665903091431
TIMES : FUN:291.f : 0.000655174255371
=================================
Finished an SCC (1)
=================================
Summary for function: __fswab16:291.f
=======

SUMS (nm, lo, un, wr, re):	__fswab16	0	0	0	0	

SS Sum:
 -> 
Vval: ((x & 255) << 8) | ((x & 65280) >> 8)
SIZES: 291.f : 34
>>> PROGRESS 687/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #616
=================================
Summarizing function: csum_tcpudp_nofold : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:616 : 0.00141787528992
TIMES : FUN:4387.f : 0.00140404701233
=================================
Finished an SCC (1)
=================================
Summary for function: csum_tcpudp_nofold:4387.f
=======

SUMS (nm, lo, un, wr, re):	csum_tcpudp_nofold	0	0	0	0	

SS Sum:
 -> 
Vval: sum
SIZES: 4387.f : 34
>>> PROGRESS 688/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #602
=================================
Summarizing function: csum_tcpudp_magic : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:602 : 0.00504302978516
TIMES : FUN:4395.f : 0.00503301620483
=================================
Finished an SCC (1)
=================================
Summary for function: csum_tcpudp_magic:4395.f
=======

SUMS (nm, lo, un, wr, re):	csum_tcpudp_magic	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4395.f : 34
>>> PROGRESS 689/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #648
=================================
Summarizing function: __down_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1490.f : 0.000619173049927
TIMES : SCC:648 : 0.000629901885986
=================================
Finished an SCC (1)
=================================
Summary for function: __down_read:1490.f
=======

SUMS (nm, lo, un, wr, re):	__down_read	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1490.f : 34
>>> PROGRESS 690/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #603
=================================
Summarizing function: down_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:603 : 0.00100016593933
TIMES : FUN:1519.f : 0.00098991394043
=================================
Finished an SCC (1)
=================================
Summary for function: down_read:1519.f
=======

SUMS (nm, lo, un, wr, re):	down_read	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1519.f : 34
>>> PROGRESS 691/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #604
=================================
Summarizing function: pci_read_config_dword : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2669.f : 0.00454092025757
TIMES : SCC:604 : 0.00454998016357
=================================
Finished an SCC (1)
=================================
Summary for function: pci_read_config_dword:2669.f
=======

SUMS (nm, lo, un, wr, re):	pci_read_config_dword	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2669.f : 56604
>>> PROGRESS 692/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #605
=================================
Summarizing function: find_vma_intersection : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:605 : 0.00118279457092
TIMES : FUN:3819.f : 0.00117301940918
=================================
Finished an SCC (1)
=================================
Summary for function: find_vma_intersection:3819.f
=======

SUMS (nm, lo, un, wr, re):	find_vma_intersection	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3819.f : 49665
>>> PROGRESS 693/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #606
=================================
Summarizing function: write_sequnlock___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:606 : 0.00112104415894
TIMES : FUN:6119.f : 0.00111103057861
=================================
Finished an SCC (1)
=================================
Summary for function: write_sequnlock___0:6119.f
=======

SUMS (nm, lo, un, wr, re):	write_sequnlock___0	0	1	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6119.f : 268
>>> PROGRESS 694/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #607
=================================
Summarizing function: locks_verify_truncate : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3243.f : 0.00490784645081
TIMES : SCC:607 : 0.00491809844971
=================================
Finished an SCC (1)
=================================
Summary for function: locks_verify_truncate:3243.f
=======

SUMS (nm, lo, un, wr, re):	locks_verify_truncate	0	0	0	4	

SS Sum:
 -> 
$SSTOP
SIZES: 3243.f : 49846
>>> PROGRESS 695/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #609
=================================
Summarizing function: write_seqlock___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:609 : 0.00107192993164
TIMES : FUN:6117.f : 0.0010621547699
=================================
Finished an SCC (1)
=================================
Summary for function: write_seqlock___0:6117.f
=======

SUMS (nm, lo, un, wr, re):	write_seqlock___0	1	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6117.f : 268
>>> PROGRESS 696/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #610
=================================
Summarizing function: rwsem_atomic_update : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:610 : 0.000664949417114
TIMES : FUN:1515.f : 0.000655174255371
=================================
Finished an SCC (1)
=================================
Summary for function: rwsem_atomic_update:1515.f
=======

SUMS (nm, lo, un, wr, re):	rwsem_atomic_update	0	0	0	0	

SS Sum:
 -> 
Vval: delta + delta
SIZES: 1515.f : 34
>>> PROGRESS 697/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #611
=================================
Summarizing function: clear_in_cr4___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:6115.f : 0.000741958618164
TIMES : SCC:611 : 0.000751972198486
=================================
Finished an SCC (1)
=================================
Summary for function: clear_in_cr4___0:6115.f
=======

SUMS (nm, lo, un, wr, re):	clear_in_cr4___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6115.f : 96
>>> PROGRESS 698/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #612
=================================
Summarizing function: pci_read_config_word : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:612 : 0.00121402740479
TIMES : FUN:2663.f : 0.00120306015015
=================================
Finished an SCC (1)
=================================
Summary for function: pci_read_config_word:2663.f
=======

SUMS (nm, lo, un, wr, re):	pci_read_config_word	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2663.f : 56577
>>> PROGRESS 699/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #613
=================================
Summarizing function: locks_verify_locked : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:613 : 0.00118494033813
TIMES : FUN:3238.f : 0.00117492675781
=================================
Finished an SCC (1)
=================================
Summary for function: locks_verify_locked:3238.f
=======

SUMS (nm, lo, un, wr, re):	locks_verify_locked	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 3238.f : 49691
>>> PROGRESS 700/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #614
=================================
Summarizing function: set_in_cr4___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:6113.f : 0.000752925872803
TIMES : SCC:614 : 0.000765085220337
=================================
Finished an SCC (1)
=================================
Summary for function: set_in_cr4___0:6113.f
=======

SUMS (nm, lo, un, wr, re):	set_in_cr4___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6113.f : 96
>>> PROGRESS 701/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #615
=================================
Summarizing function: rwsem_atomic_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1512.f : 0.000542879104614
TIMES : SCC:615 : 0.000554084777832
=================================
Finished an SCC (1)
=================================
Summary for function: rwsem_atomic_add:1512.f
=======

SUMS (nm, lo, un, wr, re):	rwsem_atomic_add	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1512.f : 34
>>> PROGRESS 702/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #787
=================================
Summarizing function: netif_stop_queue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4841.f : 0.000838041305542
TIMES : SCC:787 : 0.000848054885864
=================================
Finished an SCC (1)
=================================
Summary for function: netif_stop_queue:4841.f
=======

SUMS (nm, lo, un, wr, re):	netif_stop_queue	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4841.f : 34
>>> PROGRESS 703/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #617
=================================
Summarizing function: netif_tx_disable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4962.f : 0.00144791603088
TIMES : SCC:617 : 0.00145792961121
=================================
Finished an SCC (1)
=================================
Summary for function: netif_tx_disable:4962.f
=======

SUMS (nm, lo, un, wr, re):	netif_tx_disable	0	1	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4962.f : 62936
>>> PROGRESS 704/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #643
=================================
Summarizing function: ___arch__swab64___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 3

doing lockset
doing guarded access
TIMES : FUN:6094.f : 0.000689029693604
TIMES : SCC:643 : 0.00070595741272
=================================
Finished an SCC (1)
=================================
Summary for function: ___arch__swab64___0:6094.f
=======

SUMS (nm, lo, un, wr, re):	___arch__swab64___0	0	0	0	0	

SS Sum:
 -> 
Vval: val
SIZES: 6094.f : 34
>>> PROGRESS 705/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #633
=================================
Summarizing function: __swab64p___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:6100.f : 0.00111198425293
TIMES : SCC:633 : 0.00112199783325
=================================
Finished an SCC (1)
=================================
Summary for function: __swab64p___0:6100.f
=======

SUMS (nm, lo, un, wr, re):	__swab64p___0	0	0	0	1	

SS Sum:
 -> 
Vval: (*x)
SIZES: 6100.f : 99
>>> PROGRESS 706/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #620
=================================
Summarizing function: __be64_to_cpup___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:620 : 0.00127005577087
TIMES : FUN:6110.f : 0.00125908851624
=================================
Finished an SCC (1)
=================================
Summary for function: __be64_to_cpup___0:6110.f
=======

SUMS (nm, lo, un, wr, re):	__be64_to_cpup___0	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 6110.f : 99
>>> PROGRESS 707/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #621
=================================
Summarizing function: strnlen : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:621 : 0.000591039657593
TIMES : FUN:933.f : 0.000581026077271
=================================
Finished an SCC (1)
=================================
Summary for function: strnlen:933.f
=======

SUMS (nm, lo, un, wr, re):	strnlen	0	0	0	0	

SS Sum:
 -> 
Vval: __res
SIZES: 933.f : 34
>>> PROGRESS 708/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #623
=================================
Summarizing function: pci_read_config_byte : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:623 : 0.00115489959717
TIMES : FUN:2657.f : 0.00114607810974
=================================
Finished an SCC (1)
=================================
Summary for function: pci_read_config_byte:2657.f
=======

SUMS (nm, lo, un, wr, re):	pci_read_config_byte	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 2657.f : 56577
>>> PROGRESS 709/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #624
=================================
Summarizing function: ip_fast_csum : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:624 : 0.000618934631348
TIMES : FUN:4381.f : 0.000607967376709
=================================
Finished an SCC (1)
=================================
Summary for function: ip_fast_csum:4381.f
=======

SUMS (nm, lo, un, wr, re):	ip_fast_csum	0	0	0	0	

SS Sum:
 -> 
Vval: sum
SIZES: 4381.f : 34
>>> PROGRESS 710/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #625
=================================
Summarizing function: __cpu_to_be64p___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:6106.f : 0.00113201141357
TIMES : SCC:625 : 0.001140832901
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_be64p___0:6106.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_be64p___0	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 6106.f : 99
>>> PROGRESS 711/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #868
=================================
Summarizing function: __list_del : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1343.f : 0.000693082809448
TIMES : SCC:868 : 0.000704050064087
=================================
Finished an SCC (1)
=================================
Summary for function: __list_del:1343.f
=======

SUMS (nm, lo, un, wr, re):	__list_del	0	0	2	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1343.f : 197
>>> PROGRESS 712/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #862
=================================
Summarizing function: list_del : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:862 : 0.00103807449341
TIMES : FUN:1346.f : 0.00102806091309
=================================
Finished an SCC (1)
=================================
Summary for function: list_del:1346.f
=======

SUMS (nm, lo, un, wr, re):	list_del	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1346.f : 241
>>> PROGRESS 713/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #627
=================================
Summarizing function: __netif_rx_complete : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:627 : 0.00349998474121
TIMES : FUN:4955.f : 0.00348997116089
=================================
Finished an SCC (1)
=================================
Summary for function: __netif_rx_complete:4955.f
=======

SUMS (nm, lo, un, wr, re):	__netif_rx_complete	0	0	2	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4955.f : 63124
>>> PROGRESS 714/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #628
=================================
Summarizing function: netif_poll_enable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 2

doing lockset
doing guarded access
TIMES : SCC:628 : 0.000813007354736
TIMES : FUN:4953.f : 0.000804901123047
=================================
Finished an SCC (1)
=================================
Summary for function: netif_poll_enable:4953.f
=======

SUMS (nm, lo, un, wr, re):	netif_poll_enable	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4953.f : 34
>>> PROGRESS 715/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #629
=================================
Summarizing function: __swab64s___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:6103.f : 0.00115513801575
TIMES : SCC:629 : 0.00116395950317
=================================
Finished an SCC (1)
=================================
Summary for function: __swab64s___0:6103.f
=======

SUMS (nm, lo, un, wr, re):	__swab64s___0	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 6103.f : 100
>>> PROGRESS 716/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #710
=================================
Summarizing function: __swab16p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:710 : 0.000755071640015
TIMES : FUN:295.f : 0.00074291229248
=================================
Finished an SCC (1)
=================================
Summary for function: __swab16p:295.f
=======

SUMS (nm, lo, un, wr, re):	__swab16p	0	0	0	1	

SS Sum:
 -> 
Vval: (((*x) & 255) << 8) | (((*x) & 65280) >> 8)
SIZES: 295.f : 99
>>> PROGRESS 717/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #630
=================================
Summarizing function: __be16_to_cpup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:630 : 0.00110697746277
TIMES : FUN:351.f : 0.00109791755676
=================================
Finished an SCC (1)
=================================
Summary for function: __be16_to_cpup:351.f
=======

SUMS (nm, lo, un, wr, re):	__be16_to_cpup	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 351.f : 99
>>> PROGRESS 718/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #634
=================================
Summarizing function: dequeue_signal_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:634 : 0.00398993492126
TIMES : FUN:2074.f : 0.00398015975952
=================================
Finished an SCC (1)
=================================
Summary for function: dequeue_signal_lock:2074.f
=======

SUMS (nm, lo, un, wr, re):	dequeue_signal_lock	0	1	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2074.f : 49633
>>> PROGRESS 719/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #635
=================================
Summarizing function: netif_poll_disable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 3

doing lockset
doing guarded access
TIMES : SCC:635 : 0.00451993942261
TIMES : FUN:4949.f : 0.00450992584229
=================================
Finished an SCC (1)
=================================
Summary for function: netif_poll_disable:4949.f
=======

SUMS (nm, lo, un, wr, re):	netif_poll_disable	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4949.f : 99645
>>> PROGRESS 720/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #637
=================================
Summarizing function: __cpu_to_be16p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:637 : 0.00118207931519
TIMES : FUN:347.f : 0.00117182731628
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_be16p:347.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_be16p	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 347.f : 99
>>> PROGRESS 721/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #639
=================================
Summarizing function: __fswab64___0 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:639 : 0.00107908248901
TIMES : FUN:6097.f : 0.00106883049011
=================================
Finished an SCC (1)
=================================
Summary for function: __fswab64___0:6097.f
=======

SUMS (nm, lo, un, wr, re):	__fswab64___0	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 6097.f : 34
>>> PROGRESS 722/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #641
=================================
Summarizing function: do_mmap : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:641 : 0.00103807449341
TIMES : FUN:3796.f : 0.00102806091309
=================================
Finished an SCC (1)
=================================
Summary for function: do_mmap:3796.f
=======

SUMS (nm, lo, un, wr, re):	do_mmap	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3796.f : 34
>>> PROGRESS 723/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #695
=================================
Summarizing function: __swab32p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:306.f : 0.00111389160156
TIMES : SCC:695 : 0.00112509727478
=================================
Finished an SCC (1)
=================================
Summary for function: __swab32p:306.f
=======

SUMS (nm, lo, un, wr, re):	__swab32p	0	0	0	1	

SS Sum:
 -> 
Vval: (*x)
SIZES: 306.f : 99
>>> PROGRESS 724/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #642
=================================
Summarizing function: __be32_to_cpup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:344.f : 0.00108909606934
TIMES : SCC:642 : 0.00109791755676
=================================
Finished an SCC (1)
=================================
Summary for function: __be32_to_cpup:344.f
=======

SUMS (nm, lo, un, wr, re):	__be32_to_cpup	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 344.f : 99
>>> PROGRESS 725/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #645
=================================
Summarizing function: csum_partial_copy_nocheck : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:645 : 0.00114297866821
TIMES : FUN:4366.f : 0.00113201141357
=================================
Finished an SCC (1)
=================================
Summary for function: csum_partial_copy_nocheck:4366.f
=======

SUMS (nm, lo, un, wr, re):	csum_partial_copy_nocheck	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4366.f : 34
>>> PROGRESS 726/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #646
=================================
Summarizing function: __cpu_to_be32p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:340.f : 0.00116801261902
TIMES : SCC:646 : 0.00117707252502
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_be32p:340.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_be32p	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 340.f : 99
>>> PROGRESS 727/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #647
=================================
Summarizing function: memchr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:647 : 0.000669002532959
TIMES : FUN:915.f : 0.000658988952637
=================================
Finished an SCC (1)
=================================
Summary for function: memchr:915.f
=======

SUMS (nm, lo, un, wr, re):	memchr	0	0	0	0	

SS Sum:
 -> 
Extptr (1):
  lval = (*__res)
  lval = (*$NULL)(sum)

SIZES: 915.f : 34
>>> PROGRESS 728/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #649
=================================
Summarizing function: netif_rx_complete : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:649 : 0.00557780265808
TIMES : FUN:4939.f : 0.00556898117065
=================================
Finished an SCC (1)
=================================
Summary for function: netif_rx_complete:4939.f
=======

SUMS (nm, lo, un, wr, re):	netif_rx_complete	0	0	2	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4939.f : 63167
>>> PROGRESS 729/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #714
=================================
Summarizing function: ___arch__swab64 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 2

doing lockset
doing guarded access
TIMES : SCC:714 : 0.00067400932312
TIMES : FUN:288.f : 0.000661849975586
=================================
Finished an SCC (1)
=================================
Summary for function: ___arch__swab64:288.f
=======

SUMS (nm, lo, un, wr, re):	___arch__swab64	0	0	0	0	

SS Sum:
 -> 
Vval: val
SIZES: 288.f : 34
>>> PROGRESS 730/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #679
=================================
Summarizing function: __swab64p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:315.f : 0.00112700462341
TIMES : SCC:679 : 0.00113701820374
=================================
Finished an SCC (1)
=================================
Summary for function: __swab64p:315.f
=======

SUMS (nm, lo, un, wr, re):	__swab64p	0	0	0	1	

SS Sum:
 -> 
Vval: (*x)
SIZES: 315.f : 99
>>> PROGRESS 731/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #650
=================================
Summarizing function: __be64_to_cpup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:337.f : 0.00185298919678
TIMES : SCC:650 : 0.0018630027771
=================================
Finished an SCC (1)
=================================
Summary for function: __be64_to_cpup:337.f
=======

SUMS (nm, lo, un, wr, re):	__be64_to_cpup	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 337.f : 99
>>> PROGRESS 732/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #651
=================================
Summarizing function: init_rwsem : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1487.f : 0.00466799736023
TIMES : SCC:651 : 0.00467705726624
=================================
Finished an SCC (1)
=================================
Summary for function: init_rwsem:1487.f
=======

SUMS (nm, lo, un, wr, re):	init_rwsem	0	0	4	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1487.f : 458
>>> PROGRESS 733/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #654
=================================
Summarizing function: touch_atime : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:654 : 0.000980854034424
TIMES : FUN:3208.f : 0.000967979431152
=================================
Finished an SCC (1)
=================================
Summary for function: touch_atime:3208.f
=======

SUMS (nm, lo, un, wr, re):	touch_atime	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3208.f : 49576
>>> PROGRESS 734/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #652
=================================
Summarizing function: file_accessed : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:652 : 0.00155591964722
TIMES : FUN:3211.f : 0.00154614448547
=================================
Finished an SCC (1)
=================================
Summary for function: file_accessed:3211.f
=======

SUMS (nm, lo, un, wr, re):	file_accessed	0	0	0	4	

SS Sum:
 -> 
$SSBOT
SIZES: 3211.f : 49700
>>> PROGRESS 735/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #653
=================================
Summarizing function: __cpu_to_be64p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:333.f : 0.00121903419495
TIMES : SCC:653 : 0.00122904777527
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_be64p:333.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_be64p	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 333.f : 99
>>> PROGRESS 736/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #655
=================================
Summarizing function: get_uid : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:655 : 0.000882863998413
TIMES : FUN:2057.f : 0.000873804092407
=================================
Finished an SCC (1)
=================================
Summary for function: get_uid:2057.f
=======

SUMS (nm, lo, un, wr, re):	get_uid	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*u)

SIZES: 2057.f : 34
>>> PROGRESS 737/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #656
=================================
Summarizing function: __le16_to_cpup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:656 : 0.000850915908813
TIMES : FUN:331.f : 0.000838041305542
=================================
Finished an SCC (1)
=================================
Summary for function: __le16_to_cpup:331.f
=======

SUMS (nm, lo, un, wr, re):	__le16_to_cpup	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 331.f : 99
>>> PROGRESS 738/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #657
=================================
Summarizing function: mark_inode_dirty_sync : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3206.f : 0.000826120376587
TIMES : SCC:657 : 0.000833988189697
=================================
Finished an SCC (1)
=================================
Summary for function: mark_inode_dirty_sync:3206.f
=======

SUMS (nm, lo, un, wr, re):	mark_inode_dirty_sync	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3206.f : 34
>>> PROGRESS 739/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #658
=================================
Summarizing function: vma_nonlinear_insert : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3781.f : 0.00102305412292
TIMES : SCC:658 : 0.00103187561035
=================================
Finished an SCC (1)
=================================
Summary for function: vma_nonlinear_insert:3781.f
=======

SUMS (nm, lo, un, wr, re):	vma_nonlinear_insert	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3781.f : 49551
>>> PROGRESS 740/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #659
=================================
Summarizing function: __cpu_to_le16p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:659 : 0.000725984573364
TIMES : FUN:329.f : 0.000716209411621
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_le16p:329.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_le16p	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 329.f : 99
>>> PROGRESS 741/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #660
=================================
Summarizing function: mark_inode_dirty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:660 : 0.00083589553833
TIMES : FUN:3204.f : 0.000827074050903
=================================
Finished an SCC (1)
=================================
Summary for function: mark_inode_dirty:3204.f
=======

SUMS (nm, lo, un, wr, re):	mark_inode_dirty	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3204.f : 34
>>> PROGRESS 742/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #774
=================================
Summarizing function: netif_running : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:774 : 0.00115513801575
TIMES : FUN:4847.f : 0.00114607810974
=================================
Finished an SCC (1)
=================================
Summary for function: netif_running:4847.f
=======

SUMS (nm, lo, un, wr, re):	netif_running	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4847.f : 62870
>>> PROGRESS 743/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #687
=================================
Summarizing function: netif_rx_schedule_prep : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4911.f : 0.00231695175171
TIMES : SCC:687 : 0.00232696533203
=================================
Finished an SCC (1)
=================================
Summary for function: netif_rx_schedule_prep:4911.f
=======

SUMS (nm, lo, un, wr, re):	netif_rx_schedule_prep	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4911.f : 62870
>>> PROGRESS 744/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #661
=================================
Summarizing function: netif_rx_reschedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:661 : 0.00278997421265
TIMES : FUN:4928.f : 0.00277996063232
=================================
Finished an SCC (1)
=================================
Summary for function: netif_rx_reschedule:4928.f
=======

SUMS (nm, lo, un, wr, re):	netif_rx_reschedule	0	0	2	4	

SS Sum:
 -> 
$SSTOP
SIZES: 4928.f : 63597
>>> PROGRESS 745/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #662
=================================
Summarizing function: __le32_to_cpup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

doing lockset
doing guarded access
TIMES : FUN:327.f : 0.000770092010498
TIMES : SCC:662 : 0.000781059265137
=================================
Finished an SCC (1)
=================================
Summary for function: __le32_to_cpup:327.f
=======

SUMS (nm, lo, un, wr, re):	__le32_to_cpup	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 327.f : 99
>>> PROGRESS 746/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #663
=================================
Summarizing function: __cpu_to_le32p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:663 : 0.000673055648804
TIMES : FUN:325.f : 0.000662088394165
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_le32p:325.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_le32p	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 325.f : 99
>>> PROGRESS 747/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #678
=================================
Summarizing function: __netif_rx_schedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:678 : 0.00197982788086
TIMES : FUN:4916.f : 0.00196886062622
=================================
Finished an SCC (1)
=================================
Summary for function: __netif_rx_schedule:4916.f
=======

SUMS (nm, lo, un, wr, re):	__netif_rx_schedule	0	0	2	4	

SS Sum:
 -> 
$SSBOT
SIZES: 4916.f : 63600
>>> PROGRESS 748/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #664
=================================
Summarizing function: netif_rx_schedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:664 : 0.00266885757446
TIMES : FUN:4925.f : 0.00265908241272
=================================
Finished an SCC (1)
=================================
Summary for function: netif_rx_schedule:4925.f
=======

SUMS (nm, lo, un, wr, re):	netif_rx_schedule	0	0	2	5	

SS Sum:
 -> 
$SSBOT
SIZES: 4925.f : 63663
>>> PROGRESS 749/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #665
=================================
Summarizing function: wait_on_bit_lock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 2

doing lockset
doing guarded access
TIMES : SCC:665 : 0.0036289691925
TIMES : FUN:1474.f : 0.00362014770508
=================================
Finished an SCC (1)
=================================
Summary for function: wait_on_bit_lock:1474.f
=======

SUMS (nm, lo, un, wr, re):	wait_on_bit_lock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1474.f : 34
>>> PROGRESS 750/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #666
=================================
Summarizing function: __le64_to_cpup : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:323.f : 0.000691890716553
TIMES : SCC:666 : 0.000702142715454
=================================
Finished an SCC (1)
=================================
Summary for function: __le64_to_cpup:323.f
=======

SUMS (nm, lo, un, wr, re):	__le64_to_cpup	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 323.f : 99
>>> PROGRESS 751/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #667
=================================
Summarizing function: kstack_end : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:667 : 0.000601053237915
TIMES : FUN:2048.f : 0.000591039657593
=================================
Finished an SCC (1)
=================================
Summary for function: kstack_end:2048.f
=======

SUMS (nm, lo, un, wr, re):	kstack_end	0	0	0	0	

SS Sum:
 -> 
Vval: ! ((((unsigned long )addr + (unsigned long )sizeof(void *)) - 1UL) & (8192U - sizeof(void *))) != 0
SIZES: 2048.f : 34
>>> PROGRESS 752/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #673
=================================
Summarizing function: __cpu_to_le64p : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:673 : 0.000645160675049
TIMES : FUN:321.f : 0.000635862350464
=================================
Finished an SCC (1)
=================================
Summary for function: __cpu_to_le64p:321.f
=======

SUMS (nm, lo, un, wr, re):	__cpu_to_le64p	0	0	0	1	

SS Sum:
 -> 
Vval: (*p)
SIZES: 321.f : 99
>>> PROGRESS 753/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #674
=================================
Summarizing function: strlen : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:674 : 0.000591039657593
TIMES : FUN:896.f : 0.000580787658691
=================================
Finished an SCC (1)
=================================
Summary for function: strlen:896.f
=======

SUMS (nm, lo, un, wr, re):	strlen	0	0	0	0	

SS Sum:
 -> 
Vval: __res
SIZES: 896.f : 34
>>> PROGRESS 754/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #675
=================================
Summarizing function: pci_scan_bus : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:675 : 0.0010449886322
TIMES : FUN:2620.f : 0.00103616714478
=================================
Finished an SCC (1)
=================================
Summary for function: pci_scan_bus:2620.f
=======

SUMS (nm, lo, un, wr, re):	pci_scan_bus	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2620.f : 34
>>> PROGRESS 755/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #676
=================================
Summarizing function: __swab64s : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:676 : 0.00120997428894
TIMES : FUN:318.f : 0.00119996070862
=================================
Finished an SCC (1)
=================================
Summary for function: __swab64s:318.f
=======

SUMS (nm, lo, un, wr, re):	__swab64s	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 318.f : 100
>>> PROGRESS 756/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #677
=================================
Summarizing function: zero_fd_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4342.f : 0.000799179077148
TIMES : SCC:677 : 0.000808000564575
=================================
Finished an SCC (1)
=================================
Summary for function: zero_fd_set:4342.f
=======

SUMS (nm, lo, un, wr, re):	zero_fd_set	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4342.f : 34
>>> PROGRESS 757/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #680
=================================
Summarizing function: strrchr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:890.f : 0.000585079193115
TIMES : SCC:680 : 0.000594854354858
=================================
Finished an SCC (1)
=================================
Summary for function: strrchr:890.f
=======

SUMS (nm, lo, un, wr, re):	strrchr	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*__res)

SIZES: 890.f : 34
>>> PROGRESS 758/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #681
=================================
Summarizing function: wait_on_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:681 : 0.0014181137085
TIMES : FUN:1465.f : 0.00140881538391
=================================
Finished an SCC (1)
=================================
Summary for function: wait_on_bit:1465.f
=======

SUMS (nm, lo, un, wr, re):	wait_on_bit	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 1465.f : 34
>>> PROGRESS 759/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #682
=================================
Summarizing function: pmd_alloc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:682 : 0.000943183898926
TIMES : FUN:3765.f : 0.000931978225708
=================================
Finished an SCC (1)
=================================
Summary for function: pmd_alloc:3765.f
=======

SUMS (nm, lo, un, wr, re):	pmd_alloc	0	0	0	1	

SS Sum:
 -> 
Vval: (pud->pgd.pgd & 4294963200ULL) + 3221225472UL
SIZES: 3765.f : 202
>>> PROGRESS 760/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #683
=================================
Summarizing function: __fswab64 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:312.f : 0.00100493431091
TIMES : SCC:683 : 0.00101613998413
=================================
Finished an SCC (1)
=================================
Summary for function: __fswab64:312.f
=======

SUMS (nm, lo, un, wr, re):	__fswab64	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 312.f : 34
>>> PROGRESS 761/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #685
=================================
Summarizing function: up : synclink.ko_merged.c
-----
doing symstate
TIMES : SCC:685 : 0.000447988510132
TIMES : FUN:1556.f : 0.000439167022705
=================================
Finished an SCC (1)
=================================
Summary for function: up:1556.f
=======

SUMS (nm, lo, un, wr, re):	up	0	1	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1556.f : 147
>>> PROGRESS 762/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #684
=================================
Summarizing function: unlock_super : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3187.f : 0.000859022140503
TIMES : SCC:684 : 0.000867128372192
=================================
Finished an SCC (1)
=================================
Summary for function: unlock_super:3187.f
=======

SUMS (nm, lo, un, wr, re):	unlock_super	0	1	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3187.f : 49527
>>> PROGRESS 763/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #747
=================================
Summarizing function: __copy_to_user_inatomic : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4287.f : 0.00172090530396
TIMES : SCC:747 : 0.00173115730286
=================================
Finished an SCC (1)
=================================
Summary for function: __copy_to_user_inatomic:4287.f
=======

SUMS (nm, lo, un, wr, re):	__copy_to_user_inatomic	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4287.f : 34
>>> PROGRESS 764/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #739
=================================
Summarizing function: __copy_to_user : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4294.f : 0.00107407569885
TIMES : SCC:739 : 0.00108504295349
=================================
Finished an SCC (1)
=================================
Summary for function: __copy_to_user:4294.f
=======

SUMS (nm, lo, un, wr, re):	__copy_to_user	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4294.f : 34
>>> PROGRESS 765/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #686
=================================
Summarizing function: set_fd_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:686 : 0.00107908248901
TIMES : FUN:4337.f : 0.00106906890869
=================================
Finished an SCC (1)
=================================
Summary for function: set_fd_set:4337.f
=======

SUMS (nm, lo, un, wr, re):	set_fd_set	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4337.f : 34
>>> PROGRESS 766/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #688
=================================
Summarizing function: strchr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:885.f : 0.000587940216064
TIMES : SCC:688 : 0.000597953796387
=================================
Finished an SCC (1)
=================================
Summary for function: strchr:885.f
=======

SUMS (nm, lo, un, wr, re):	strchr	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*__res)

SIZES: 885.f : 34
>>> PROGRESS 767/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #690
=================================
Summarizing function: down : synclink.ko_merged.c
-----
doing symstate
TIMES : SCC:690 : 0.000448942184448
TIMES : FUN:1548.f : 0.000441074371338
=================================
Finished an SCC (1)
=================================
Summary for function: down:1548.f
=======

SUMS (nm, lo, un, wr, re):	down	1	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1548.f : 147
>>> PROGRESS 768/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #689
=================================
Summarizing function: lock_super : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:689 : 0.00090503692627
TIMES : FUN:3185.f : 0.00089693069458
=================================
Finished an SCC (1)
=================================
Summary for function: lock_super:3185.f
=======

SUMS (nm, lo, un, wr, re):	lock_super	1	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3185.f : 49527
>>> PROGRESS 769/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #691
=================================
Summarizing function: __swab32s : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:309.f : 0.00114417076111
TIMES : SCC:691 : 0.00115203857422
=================================
Finished an SCC (1)
=================================
Summary for function: __swab32s:309.f
=======

SUMS (nm, lo, un, wr, re):	__swab32s	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 309.f : 100
>>> PROGRESS 770/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #692
=================================
Summarizing function: netif_msg_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:692 : 0.000648975372314
TIMES : FUN:4908.f : 0.000640153884888
=================================
Finished an SCC (1)
=================================
Summary for function: netif_msg_init:4908.f
=======

SUMS (nm, lo, un, wr, re):	netif_msg_init	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4908.f : 34
>>> PROGRESS 771/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #694
=================================
Summarizing function: pud_offset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:694 : 0.000610828399658
TIMES : FUN:3571.f : 0.000600099563599
=================================
Finished an SCC (1)
=================================
Summary for function: pud_offset:3571.f
=======

SUMS (nm, lo, un, wr, re):	pud_offset	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*pgd)

SIZES: 3571.f : 34
>>> PROGRESS 772/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #878
=================================
Summarizing function: pgd_none : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3565.f : 0.000536203384399
TIMES : SCC:878 : 0.000547170639038
=================================
Finished an SCC (1)
=================================
Summary for function: pgd_none:3565.f
=======

SUMS (nm, lo, un, wr, re):	pgd_none	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 3565.f : 34
>>> PROGRESS 773/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #693
=================================
Summarizing function: pud_alloc : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:693 : 0.00188112258911
TIMES : FUN:3757.f : 0.00187206268311
=================================
Finished an SCC (1)
=================================
Summary for function: pud_alloc:3757.f
=======

SUMS (nm, lo, un, wr, re):	pud_alloc	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3757.f : 99
>>> PROGRESS 774/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #696
=================================
Summarizing function: get_fd_set : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:696 : 0.00129199028015
TIMES : FUN:4330.f : 0.00128316879272
=================================
Finished an SCC (1)
=================================
Summary for function: get_fd_set:4330.f
=======

SUMS (nm, lo, un, wr, re):	get_fd_set	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4330.f : 34
>>> PROGRESS 775/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #697
=================================
Summarizing function: pid_alive : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2029.f : 0.000761985778809
TIMES : SCC:697 : 0.000771999359131
=================================
Finished an SCC (1)
=================================
Summary for function: pid_alive:2029.f
=======

SUMS (nm, lo, un, wr, re):	pid_alive	0	0	0	1	

SS Sum:
 -> 
Vval: p->pids[0].nr != 0
SIZES: 2029.f : 49577
>>> PROGRESS 776/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #816
=================================
Summarizing function: __netif_schedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4823.f : 0.00504398345947
TIMES : SCC:816 : 0.00505495071411
=================================
Finished an SCC (1)
=================================
Summary for function: __netif_schedule:4823.f
=======

SUMS (nm, lo, un, wr, re):	__netif_schedule	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4823.f : 63197
>>> PROGRESS 777/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #792
=================================
Summarizing function: netif_wake_queue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4838.f : 0.0020740032196
TIMES : SCC:792 : 0.00208401679993
=================================
Finished an SCC (1)
=================================
Summary for function: netif_wake_queue:4838.f
=======

SUMS (nm, lo, un, wr, re):	netif_wake_queue	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4838.f : 63188
>>> PROGRESS 778/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #698
=================================
Summarizing function: netif_device_attach : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4904.f : 0.00321197509766
TIMES : SCC:698 : 0.00322103500366
=================================
Finished an SCC (1)
=================================
Summary for function: netif_device_attach:4904.f
=======

SUMS (nm, lo, un, wr, re):	netif_device_attach	0	0	1	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4904.f : 63255
>>> PROGRESS 779/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #716
=================================
Summarizing function: __remove_wait_queue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

doing lockset
doing guarded access
TIMES : SCC:716 : 0.00115919113159
TIMES : FUN:1437.f : 0.00114917755127
=================================
Finished an SCC (1)
=================================
Summary for function: __remove_wait_queue:1437.f
=======

SUMS (nm, lo, un, wr, re):	__remove_wait_queue	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1437.f : 49732
>>> PROGRESS 780/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #700
=================================
Summarizing function: remove_wait_queue_locked : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:700 : 0.00156402587891
TIMES : FUN:1453.f : 0.00155305862427
=================================
Finished an SCC (1)
=================================
Summary for function: remove_wait_queue_locked:1453.f
=======

SUMS (nm, lo, un, wr, re):	remove_wait_queue_locked	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1453.f : 49732
>>> PROGRESS 781/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #701
=================================
Summarizing function: strncmp : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:701 : 0.000657081604004
TIMES : FUN:877.f : 0.000646114349365
=================================
Finished an SCC (1)
=================================
Summary for function: strncmp:877.f
=======

SUMS (nm, lo, un, wr, re):	strncmp	0	0	0	0	

SS Sum:
 -> 
Vval: __res
SIZES: 877.f : 34
>>> PROGRESS 782/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #702
=================================
Summarizing function: process_group : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:702 : 0.000740051269531
TIMES : FUN:2027.f : 0.000727891921997
=================================
Finished an SCC (1)
=================================
Summary for function: process_group:2027.f
=======

SUMS (nm, lo, un, wr, re):	process_group	0	0	0	1	

SS Sum:
 -> 
Vval: (tsk->signal)->pgrp
SIZES: 2027.f : 49543
>>> PROGRESS 783/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #703
=================================
Summarizing function: add_wait_queue_exclusive_locked : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1450.f : 0.00105595588684
TIMES : SCC:703 : 0.00106501579285
=================================
Finished an SCC (1)
=================================
Summary for function: add_wait_queue_exclusive_locked:1450.f
=======

SUMS (nm, lo, un, wr, re):	add_wait_queue_exclusive_locked	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1450.f : 49840
>>> PROGRESS 784/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #704
=================================
Summarizing function: init_poll_funcptr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:704 : 0.00130581855774
TIMES : FUN:4325.f : 0.00129413604736
=================================
Finished an SCC (1)
=================================
Summary for function: init_poll_funcptr:4325.f
=======

SUMS (nm, lo, un, wr, re):	init_poll_funcptr	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4325.f : 49517
>>> PROGRESS 785/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #705
=================================
Summarizing function: netif_device_detach : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4900.f : 0.00256109237671
TIMES : SCC:705 : 0.00257420539856
=================================
Finished an SCC (1)
=================================
Summary for function: netif_device_detach:4900.f
=======

SUMS (nm, lo, un, wr, re):	netif_device_detach	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4900.f : 62801
>>> PROGRESS 786/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #706
=================================
Summarizing function: __swab16s : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:706 : 0.000886917114258
TIMES : FUN:299.f : 0.000875949859619
=================================
Finished an SCC (1)
=================================
Summary for function: __swab16s:299.f
=======

SUMS (nm, lo, un, wr, re):	__swab16s	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 299.f : 128
>>> PROGRESS 787/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #707
=================================
Summarizing function: strcmp : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:707 : 0.000718116760254
TIMES : FUN:871.f : 0.000707864761353
=================================
Finished an SCC (1)
=================================
Summary for function: strcmp:871.f
=======

SUMS (nm, lo, un, wr, re):	strcmp	0	0	0	0	

SS Sum:
 -> 
Vval: __res
SIZES: 871.f : 34
>>> PROGRESS 788/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #708
=================================
Summarizing function: poll_wait : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:708 : 0.00066089630127
TIMES : FUN:4321.f : 0.000651121139526
=================================
Finished an SCC (1)
=================================
Summary for function: poll_wait:4321.f
=======

SUMS (nm, lo, un, wr, re):	poll_wait	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4321.f : 34
>>> PROGRESS 789/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #709
=================================
Summarizing function: netif_device_present : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4896.f : 0.00112199783325
TIMES : SCC:709 : 0.00113105773926
=================================
Finished an SCC (1)
=================================
Summary for function: netif_device_present:4896.f
=======

SUMS (nm, lo, un, wr, re):	netif_device_present	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4896.f : 62801
>>> PROGRESS 790/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #711
=================================
Summarizing function: netif_carrier_off : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:711 : 0.00141215324402
TIMES : FUN:4893.f : 0.0014009475708
=================================
Finished an SCC (1)
=================================
Summary for function: netif_carrier_off:4893.f
=======

SUMS (nm, lo, un, wr, re):	netif_carrier_off	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4893.f : 34
>>> PROGRESS 791/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #713
=================================
Summarizing function: netif_carrier_on : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4889.f : 0.00253391265869
TIMES : SCC:713 : 0.0025429725647
=================================
Finished an SCC (1)
=================================
Summary for function: netif_carrier_on:4889.f
=======

SUMS (nm, lo, un, wr, re):	netif_carrier_on	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4889.f : 62801
>>> PROGRESS 792/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #715
=================================
Summarizing function: strncat : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:715 : 0.000683069229126
TIMES : FUN:863.f : 0.000671863555908
=================================
Finished an SCC (1)
=================================
Summary for function: strncat:863.f
=======

SUMS (nm, lo, un, wr, re):	strncat	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dest)

SIZES: 863.f : 34
>>> PROGRESS 793/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #717
=================================
Summarizing function: list_kiocb : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:717 : 0.00072717666626
TIMES : FUN:2012.f : 0.000715017318726
=================================
Finished an SCC (1)
=================================
Summary for function: list_kiocb:2012.f
=======

SUMS (nm, lo, un, wr, re):	list_kiocb	0	0	0	0	

SS Sum:
 -> 
Extptr (1):
  lval = (*h)

SIZES: 2012.f : 34
>>> PROGRESS 794/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #730
=================================
Summarizing function: __copy_from_user_inatomic : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:730 : 0.00211501121521
TIMES : FUN:4299.f : 0.00210499763489
=================================
Finished an SCC (1)
=================================
Summary for function: __copy_from_user_inatomic:4299.f
=======

SUMS (nm, lo, un, wr, re):	__copy_from_user_inatomic	0	0	1	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4299.f : 133
>>> PROGRESS 795/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #720
=================================
Summarizing function: __copy_from_user : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 1

doing lockset
doing guarded access
TIMES : SCC:720 : 0.00113296508789
TIMES : FUN:4309.f : 0.00112414360046
=================================
Finished an SCC (1)
=================================
Summary for function: __copy_from_user:4309.f
=======

SUMS (nm, lo, un, wr, re):	__copy_from_user	0	0	1	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4309.f : 133
>>> PROGRESS 796/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #721
=================================
Summarizing function: netif_carrier_ok : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4883.f : 0.00115704536438
TIMES : SCC:721 : 0.00116610527039
=================================
Finished an SCC (1)
=================================
Summary for function: netif_carrier_ok:4883.f
=======

SUMS (nm, lo, un, wr, re):	netif_carrier_ok	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4883.f : 62801
>>> PROGRESS 797/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #722
=================================
Summarizing function: unmap_shared_mapping_range : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:722 : 0.000820875167847
TIMES : FUN:3732.f : 0.000811100006104
=================================
Finished an SCC (1)
=================================
Summary for function: unmap_shared_mapping_range:3732.f
=======

SUMS (nm, lo, un, wr, re):	unmap_shared_mapping_range	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3732.f : 34
>>> PROGRESS 798/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #723
=================================
Summarizing function: wrmsrl : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:281.f : 0.000661134719849
TIMES : SCC:723 : 0.000670909881592
=================================
Finished an SCC (1)
=================================
Summary for function: wrmsrl:281.f
=======

SUMS (nm, lo, un, wr, re):	wrmsrl	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 281.f : 34
>>> PROGRESS 799/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #924
=================================
Summarizing function: list_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:924 : 0.000996112823486
TIMES : FUN:1327.f : 0.000986099243164
=================================
Finished an SCC (1)
=================================
Summary for function: list_add:1327.f
=======

SUMS (nm, lo, un, wr, re):	list_add	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1327.f : 156
>>> PROGRESS 800/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #725
=================================
Summarizing function: __add_wait_queue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1431.f : 0.000869035720825
TIMES : SCC:725 : 0.000876903533936
=================================
Finished an SCC (1)
=================================
Summary for function: __add_wait_queue:1431.f
=======

SUMS (nm, lo, un, wr, re):	__add_wait_queue	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1431.f : 305
>>> PROGRESS 801/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #726
=================================
Summarizing function: dev_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:726 : 0.00080418586731
TIMES : FUN:4880.f : 0.000795841217041
=================================
Finished an SCC (1)
=================================
Summary for function: dev_put:4880.f
=======

SUMS (nm, lo, un, wr, re):	dev_put	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4880.f : 34
>>> PROGRESS 802/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #727
=================================
Summarizing function: cancel_delayed_work : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:727 : 0.00290298461914
TIMES : FUN:2000.f : 0.00289297103882
=================================
Finished an SCC (1)
=================================
Summary for function: cancel_delayed_work:2000.f
=======

SUMS (nm, lo, un, wr, re):	cancel_delayed_work	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2000.f : 34
>>> PROGRESS 803/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #731
=================================
Summarizing function: get_order : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:731 : 0.000700950622559
TIMES : FUN:273.f : 0.00068998336792
=================================
Finished an SCC (1)
=================================
Summary for function: get_order:273.f
=======

SUMS (nm, lo, un, wr, re):	get_order	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 273.f : 34
>>> PROGRESS 804/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #732
=================================
Summarizing function: strncpy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:848.f : 0.000596046447754
TIMES : SCC:732 : 0.000606060028076
=================================
Finished an SCC (1)
=================================
Summary for function: strncpy:848.f
=======

SUMS (nm, lo, un, wr, re):	strncpy	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dest)

SIZES: 848.f : 34
>>> PROGRESS 805/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #734
=================================
Summarizing function: nfs_copy_fh : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3147.f : 0.00127291679382
TIMES : SCC:734 : 0.00128102302551
=================================
Finished an SCC (1)
=================================
Summary for function: nfs_copy_fh:3147.f
=======

SUMS (nm, lo, un, wr, re):	nfs_copy_fh	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3147.f : 225
>>> PROGRESS 806/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #735
=================================
Summarizing function: init_waitqueue_func_entry : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1421.f : 0.000915050506592
TIMES : SCC:735 : 0.000925064086914
=================================
Finished an SCC (1)
=================================
Summary for function: init_waitqueue_func_entry:1421.f
=======

SUMS (nm, lo, un, wr, re):	init_waitqueue_func_entry	0	0	3	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1421.f : 49614
>>> PROGRESS 807/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #736
=================================
Summarizing function: list_to_dev : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:736 : 0.000710964202881
TIMES : FUN:2570.f : 0.000699996948242
=================================
Finished an SCC (1)
=================================
Summary for function: list_to_dev:2570.f
=======

SUMS (nm, lo, un, wr, re):	list_to_dev	0	0	0	0	

SS Sum:
 -> 
Extptr (1):
  lval = (*node)

SIZES: 2570.f : 34
>>> PROGRESS 808/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #737
=================================
Summarizing function: can_do_mlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:737 : 0.00984692573547
TIMES : FUN:3720.f : 0.00983595848083
=================================
Finished an SCC (1)
=================================
Summary for function: can_do_mlock:3720.f
=======

SUMS (nm, lo, un, wr, re):	can_do_mlock	0	0	1	4	

SS Sum:
 -> 
$SSTOP
SIZES: 3720.f : 149473
>>> PROGRESS 809/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #740
=================================
Summarizing function: init_waitqueue_entry : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:740 : 0.000903844833374
TIMES : FUN:1418.f : 0.000893115997314
=================================
Finished an SCC (1)
=================================
Summary for function: init_waitqueue_entry:1418.f
=======

SUMS (nm, lo, un, wr, re):	init_waitqueue_entry	0	0	3	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1418.f : 49596
>>> PROGRESS 810/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #741
=================================
Summarizing function: ror32 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:267.f : 0.000613927841187
TIMES : SCC:741 : 0.000625133514404
=================================
Finished an SCC (1)
=================================
Summary for function: ror32:267.f
=======

SUMS (nm, lo, un, wr, re):	ror32	0	0	0	0	

SS Sum:
 -> 
Vval: (word >> shift) | (word << (32U - shift))
SIZES: 267.f : 34
>>> PROGRESS 811/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #742
=================================
Summarizing function: strcpy : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:742 : 0.000590085983276
TIMES : FUN:842.f : 0.000579833984375
=================================
Finished an SCC (1)
=================================
Summary for function: strcpy:842.f
=======

SUMS (nm, lo, un, wr, re):	strcpy	0	0	0	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*dest)

SIZES: 842.f : 34
>>> PROGRESS 812/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #743
=================================
Summarizing function: nfs_compare_fh : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:743 : 0.00117897987366
TIMES : FUN:3142.f : 0.00116991996765
=================================
Finished an SCC (1)
=================================
Summary for function: nfs_compare_fh:3142.f
=======

SUMS (nm, lo, un, wr, re):	nfs_compare_fh	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 3142.f : 225
>>> PROGRESS 813/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #744
=================================
Summarizing function: rol32 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:744 : 0.000589847564697
TIMES : FUN:264.f : 0.000580072402954
=================================
Finished an SCC (1)
=================================
Summary for function: rol32:264.f
=======

SUMS (nm, lo, un, wr, re):	rol32	0	0	0	0	

SS Sum:
 -> 
Vval: (word << shift) | (word >> (32U - shift))
SIZES: 264.f : 34
>>> PROGRESS 814/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #746
=================================
Summarizing function: imajor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:746 : 0.417724847794
TIMES : FUN:3138.f : 0.417716026306
=================================
Finished an SCC (1)
=================================
Summary for function: imajor:3138.f
=======

SUMS (nm, lo, un, wr, re):	imajor	0	0	0	1	

SS Sum:
 -> 
Vval: inode->i_rdev >> 20
SIZES: 3138.f : 49470
>>> PROGRESS 815/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #748
=================================
Summarizing function: iminor : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:748 : 0.000910043716431
TIMES : FUN:3136.f : 0.000897884368896
=================================
Finished an SCC (1)
=================================
Summary for function: iminor:3136.f
=======

SUMS (nm, lo, un, wr, re):	iminor	0	0	0	1	

SS Sum:
 -> 
Vval: inode->i_rdev & 1048575U
SIZES: 3136.f : 49470
>>> PROGRESS 816/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #749
=================================
Summarizing function: page_mapped : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:749 : 0.000830888748169
TIMES : FUN:3711.f : 0.000821113586426
=================================
Finished an SCC (1)
=================================
Summary for function: page_mapped:3711.f
=======

SUMS (nm, lo, un, wr, re):	page_mapped	0	0	0	1	

SS Sum:
 -> 
Vval: page->_mapcount.counter >= 0
SIZES: 3711.f : 49480
>>> PROGRESS 817/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #768
=================================
Summarizing function: dev_kfree_skb_irq : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:768 : 0.00189185142517
TIMES : FUN:4851.f : 0.00188302993774
=================================
Finished an SCC (1)
=================================
Summary for function: dev_kfree_skb_irq:4851.f
=======

SUMS (nm, lo, un, wr, re):	dev_kfree_skb_irq	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 4851.f : 63143
>>> PROGRESS 818/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #750
=================================
Summarizing function: dev_kfree_skb_any : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:4860.f : 0.00329303741455
TIMES : SCC:750 : 0.00330185890198
=================================
Finished an SCC (1)
=================================
Summary for function: dev_kfree_skb_any:4860.f
=======

SUMS (nm, lo, un, wr, re):	dev_kfree_skb_any	0	0	1	4	

SS Sum:
 -> 
$SSBOT
SIZES: 4860.f : 126884
>>> PROGRESS 819/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #752
=================================
Summarizing function: rb_link_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 11	misses: 2

doing lockset
doing guarded access
TIMES : SCC:752 : 0.00105714797974
TIMES : FUN:834.f : 0.0010449886322
=================================
Finished an SCC (1)
=================================
Summary for function: rb_link_node:834.f
=======

SUMS (nm, lo, un, wr, re):	rb_link_node	0	0	8	2	

SS Sum:
 -> 
$SSBOT
SIZES: 834.f : 476
>>> PROGRESS 820/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #754
=================================
Summarizing function: page_mapcount : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3709.f : 0.000653028488159
TIMES : SCC:754 : 0.000663995742798
=================================
Finished an SCC (1)
=================================
Summary for function: page_mapcount:3709.f
=======

SUMS (nm, lo, un, wr, re):	page_mapcount	0	0	0	1	

SS Sum:
 -> 
Vval: page->_mapcount.counter + 1
SIZES: 3709.f : 49452
>>> PROGRESS 821/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #776
=================================
Summarizing function: generic_hweight32 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:245.f : 0.000651121139526
TIMES : SCC:776 : 0.000662088394165
=================================
Finished an SCC (1)
=================================
Summary for function: generic_hweight32:245.f
=======

SUMS (nm, lo, un, wr, re):	generic_hweight32	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 245.f : 34
>>> PROGRESS 822/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #761
=================================
Summarizing function: generic_hweight64 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:254.f : 0.0010039806366
TIMES : SCC:761 : 0.0010130405426
=================================
Finished an SCC (1)
=================================
Summary for function: generic_hweight64:254.f
=======

SUMS (nm, lo, un, wr, re):	generic_hweight64	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 254.f : 34
>>> PROGRESS 823/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #755
=================================
Summarizing function: hweight_long : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:755 : 0.00139689445496
TIMES : FUN:258.f : 0.00138807296753
=================================
Finished an SCC (1)
=================================
Summary for function: hweight_long:258.f
=======

SUMS (nm, lo, un, wr, re):	hweight_long	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 258.f : 34
>>> PROGRESS 824/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #757
=================================
Summarizing function: write_seqcount_end : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:705.f : 0.000731945037842
TIMES : SCC:757 : 0.000744104385376
=================================
Finished an SCC (1)
=================================
Summary for function: write_seqcount_end:705.f
=======

SUMS (nm, lo, un, wr, re):	write_seqcount_end	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 705.f : 137
>>> PROGRESS 825/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #758
=================================
Summarizing function: write_seqcount_begin : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:758 : 0.000695943832397
TIMES : FUN:703.f : 0.000684022903442
=================================
Finished an SCC (1)
=================================
Summary for function: write_seqcount_begin:703.f
=======

SUMS (nm, lo, un, wr, re):	write_seqcount_begin	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 703.f : 137
>>> PROGRESS 826/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #756
=================================
Summarizing function: i_size_write : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:756 : 0.00157499313354
TIMES : FUN:3133.f : 0.00156593322754
=================================
Finished an SCC (1)
=================================
Summary for function: i_size_write:3133.f
=======

SUMS (nm, lo, un, wr, re):	i_size_write	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3133.f : 49534
>>> PROGRESS 827/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #759
=================================
Summarizing function: reset_page_mapcount : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 2

doing lockset
doing guarded access
TIMES : SCC:759 : 0.000925064086914
TIMES : FUN:3707.f : 0.000916004180908
=================================
Finished an SCC (1)
=================================
Summary for function: reset_page_mapcount:3707.f
=======

SUMS (nm, lo, un, wr, re):	reset_page_mapcount	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3707.f : 49443
>>> PROGRESS 828/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #760
=================================
Summarizing function: hlist_add_after : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1406.f : 0.000964879989624
TIMES : SCC:760 : 0.000974893569946
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_add_after:1406.f
=======

SUMS (nm, lo, un, wr, re):	hlist_add_after	0	0	4	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1406.f : 346
>>> PROGRESS 829/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #762
=================================
Summarizing function: hlist_add_before : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:762 : 0.000914096832275
TIMES : FUN:1403.f : 0.00090503692627
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_add_before:1403.f
=======

SUMS (nm, lo, un, wr, re):	hlist_add_before	0	0	6	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1403.f : 349
>>> PROGRESS 830/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #764
=================================
Summarizing function: read_seqcount_retry : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:700.f : 0.000777006149292
TIMES : SCC:764 : 0.000787973403931
=================================
Finished an SCC (1)
=================================
Summary for function: read_seqcount_retry:700.f
=======

SUMS (nm, lo, un, wr, re):	read_seqcount_retry	0	0	0	1	

SS Sum:
 -> 
Vval: (iv & 1U) | (s->sequence ^ iv)
SIZES: 700.f : 136
>>> PROGRESS 831/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #765
=================================
Summarizing function: read_seqcount_begin : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:697.f : 0.000738143920898
TIMES : SCC:765 : 0.000746965408325
=================================
Finished an SCC (1)
=================================
Summary for function: read_seqcount_begin:697.f
=======

SUMS (nm, lo, un, wr, re):	read_seqcount_begin	0	0	0	1	

SS Sum:
 -> 
Vval: s->sequence
SIZES: 697.f : 136
>>> PROGRESS 832/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #763
=================================
Summarizing function: i_size_read : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:763 : 0.00561285018921
TIMES : FUN:3127.f : 0.00560402870178
=================================
Finished an SCC (1)
=================================
Summary for function: i_size_read:3127.f
=======

SUMS (nm, lo, un, wr, re):	i_size_read	0	0	0	2	

SS Sum:
 -> 
Vval: inode->i_size
SIZES: 3127.f : 49504
>>> PROGRESS 833/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #766
=================================
Summarizing function: generic_hweight8 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:766 : 0.000726938247681
TIMES : FUN:251.f : 0.000716924667358
=================================
Finished an SCC (1)
=================================
Summary for function: generic_hweight8:251.f
=======

SUMS (nm, lo, un, wr, re):	generic_hweight8	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 251.f : 34
>>> PROGRESS 834/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #767
=================================
Summarizing function: page_index : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:3701.f : 0.00163102149963
TIMES : SCC:767 : 0.00164008140564
=================================
Finished an SCC (1)
=================================
Summary for function: page_index:3701.f
=======

SUMS (nm, lo, un, wr, re):	page_index	0	0	0	3	

SS Sum:
 -> 
$SSTOP
SIZES: 3701.f : 49515
>>> PROGRESS 835/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #769
=================================
Summarizing function: mapping_writably_mapped : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3125.f : 0.000845193862915
TIMES : SCC:769 : 0.000854015350342
=================================
Finished an SCC (1)
=================================
Summary for function: mapping_writably_mapped:3125.f
=======

SUMS (nm, lo, un, wr, re):	mapping_writably_mapped	0	0	0	1	

SS Sum:
 -> 
Vval: mapping->i_mmap_writable != 0U
SIZES: 3125.f : 49407
>>> PROGRESS 836/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #770
=================================
Summarizing function: hlist_add_head_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:770 : 0.00101017951965
TIMES : FUN:1399.f : 0.000998973846436
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_add_head_rcu:1399.f
=======

SUMS (nm, lo, un, wr, re):	hlist_add_head_rcu	0	0	4	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1399.f : 347
>>> PROGRESS 837/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #771
=================================
Summarizing function: PageAnon : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:771 : 0.000838041305542
TIMES : FUN:3699.f : 0.00082802772522
=================================
Finished an SCC (1)
=================================
Summary for function: PageAnon:3699.f
=======

SUMS (nm, lo, un, wr, re):	PageAnon	0	0	0	1	

SS Sum:
 -> 
Vval: ((unsigned long )page->mapping & 1UL) != 0UL
SIZES: 3699.f : 49380
>>> PROGRESS 838/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #772
=================================
Summarizing function: generic_hweight16 : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:772 : 0.00105309486389
TIMES : FUN:248.f : 0.00103902816772
=================================
Finished an SCC (1)
=================================
Summary for function: generic_hweight16:248.f
=======

SUMS (nm, lo, un, wr, re):	generic_hweight16	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 248.f : 34
>>> PROGRESS 839/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #773
=================================
Summarizing function: class_set_devdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:773 : 0.00115180015564
TIMES : FUN:2548.f : 0.00113916397095
=================================
Finished an SCC (1)
=================================
Summary for function: class_set_devdata:2548.f
=======

SUMS (nm, lo, un, wr, re):	class_set_devdata	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2548.f : 52792
>>> PROGRESS 840/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #775
=================================
Summarizing function: class_get_devdata : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2546.f : 0.00103306770325
TIMES : SCC:775 : 0.00104689598083
=================================
Finished an SCC (1)
=================================
Summary for function: class_get_devdata:2546.f
=======

SUMS (nm, lo, un, wr, re):	class_get_devdata	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(dev->class_data))

SIZES: 2546.f : 52792
>>> PROGRESS 841/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #777
=================================
Summarizing function: nsec_to_clock_t : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:777 : 0.00114512443542
TIMES : FUN:820.f : 0.00113201141357
=================================
Finished an SCC (1)
=================================
Summary for function: nsec_to_clock_t:820.f
=======

SUMS (nm, lo, un, wr, re):	nsec_to_clock_t	0	0	0	0	

SS Sum:
 -> 
Vval: x
SIZES: 820.f : 34
>>> PROGRESS 842/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #778
=================================
Summarizing function: hlist_add_head : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:778 : 0.00135922431946
TIMES : FUN:1395.f : 0.00134706497192
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_add_head:1395.f
=======

SUMS (nm, lo, un, wr, re):	hlist_add_head	0	0	4	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1395.f : 347
>>> PROGRESS 843/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #780
=================================
Summarizing function: prio_tree_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:780 : 0.00264096260071
TIMES : FUN:2941.f : 0.00262594223022
=================================
Finished an SCC (1)
=================================
Summary for function: prio_tree_empty:2941.f
=======

SUMS (nm, lo, un, wr, re):	prio_tree_empty	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )root->prio_tree_node == (unsigned int )((void *)0)
SIZES: 2941.f : 339
>>> PROGRESS 844/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #779
=================================
Summarizing function: mapping_mapped : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:779 : 0.00873208045959
TIMES : FUN:3120.f : 0.00872206687927
=================================
Finished an SCC (1)
=================================
Summary for function: mapping_mapped:3120.f
=======

SUMS (nm, lo, un, wr, re):	mapping_mapped	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 3120.f : 49492
>>> PROGRESS 845/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #781
=================================
Summarizing function: hlist_del_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:781 : 0.00128698348999
TIMES : FUN:1393.f : 0.00127696990967
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_del_init:1393.f
=======

SUMS (nm, lo, un, wr, re):	hlist_del_init	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1393.f : 340
>>> PROGRESS 846/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #782
=================================
Summarizing function: netif_queue_stopped : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : SCC:782 : 0.00112795829773
TIMES : FUN:4843.f : 0.00111794471741
=================================
Finished an SCC (1)
=================================
Summary for function: netif_queue_stopped:4843.f
=======

SUMS (nm, lo, un, wr, re):	netif_queue_stopped	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 4843.f : 62639
>>> PROGRESS 847/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #783
=================================
Summarizing function: get_bitmask_order : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : FUN:241.f : 0.00106906890869
TIMES : SCC:783 : 0.0010781288147
=================================
Finished an SCC (1)
=================================
Summary for function: get_bitmask_order:241.f
=======

SUMS (nm, lo, un, wr, re):	get_bitmask_order	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 241.f : 34
>>> PROGRESS 848/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #786
=================================
Summarizing function: page_mapping : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:786 : 0.00536894798279
TIMES : FUN:3691.f : 0.00535988807678
=================================
Finished an SCC (1)
=================================
Summary for function: page_mapping:3691.f
=======

SUMS (nm, lo, un, wr, re):	page_mapping	0	0	0	2	

SS Sum:
 -> 
Extptr (2):
  lval = swapper_space
  lval = (*(page->mapping))

SIZES: 3691.f : 49423
>>> PROGRESS 849/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #789
=================================
Summarizing function: hlist_del : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:789 : 0.00115203857422
TIMES : FUN:1389.f : 0.00114297866821
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_del:1389.f
=======

SUMS (nm, lo, un, wr, re):	hlist_del	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1389.f : 323
>>> PROGRESS 850/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #790
=================================
Summarizing function: ffs : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 1

doing lockset
doing guarded access
TIMES : FUN:238.f : 0.000648975372314
TIMES : SCC:790 : 0.00065803527832
=================================
Finished an SCC (1)
=================================
Summary for function: ffs:238.f
=======

SUMS (nm, lo, un, wr, re):	ffs	0	0	0	0	

SS Sum:
 -> 
Vval: r + 1
SIZES: 238.f : 34
>>> PROGRESS 851/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #791
=================================
Summarizing function: jiffies_64_to_clock_t : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:791 : 0.000704050064087
TIMES : FUN:813.f : 0.000693798065186
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_64_to_clock_t:813.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_64_to_clock_t	0	0	0	0	

SS Sum:
 -> 
Vval: x * 999848ULL
SIZES: 813.f : 34
>>> PROGRESS 852/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #793
=================================
Summarizing function: clock_t_to_jiffies : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:811.f : 0.000748872756958
TIMES : SCC:793 : 0.00075888633728
=================================
Finished an SCC (1)
=================================
Summary for function: clock_t_to_jiffies:811.f
=======

SUMS (nm, lo, un, wr, re):	clock_t_to_jiffies	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 811.f : 34
>>> PROGRESS 853/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #794
=================================
Summarizing function: netif_start_queue : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:4836.f : 0.00422787666321
TIMES : SCC:794 : 0.00423717498779
=================================
Finished an SCC (1)
=================================
Summary for function: netif_start_queue:4836.f
=======

SUMS (nm, lo, un, wr, re):	netif_start_queue	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4836.f : 34
>>> PROGRESS 854/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #796
=================================
Summarizing function: lowmem_page_address : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:796 : 0.000639200210571
TIMES : FUN:3685.f : 0.00062894821167
=================================
Finished an SCC (1)
=================================
Summary for function: lowmem_page_address:3685.f
=======

SUMS (nm, lo, un, wr, re):	lowmem_page_address	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3685.f : 95
>>> PROGRESS 855/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #797
=================================
Summarizing function: verify_area : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:797 : 0.00150609016418
TIMES : FUN:4260.f : 0.00149703025818
=================================
Finished an SCC (1)
=================================
Summary for function: verify_area:4260.f
=======

SUMS (nm, lo, un, wr, re):	verify_area	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4260.f : 34
>>> PROGRESS 856/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #798
=================================
Summarizing function: hlist_empty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1383.f : 0.000878095626831
TIMES : SCC:798 : 0.000890016555786
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_empty:1383.f
=======

SUMS (nm, lo, un, wr, re):	hlist_empty	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1383.f : 197
>>> PROGRESS 857/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #799
=================================
Summarizing function: radix_tree_preload_end : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:799 : 0.000602006912231
TIMES : FUN:3107.f : 0.000591993331909
=================================
Finished an SCC (1)
=================================
Summary for function: radix_tree_preload_end:3107.f
=======

SUMS (nm, lo, un, wr, re):	radix_tree_preload_end	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3107.f : 34
>>> PROGRESS 858/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #800
=================================
Summarizing function: netif_schedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:800 : 0.00305390357971
TIMES : FUN:4832.f : 0.00304508209229
=================================
Finished an SCC (1)
=================================
Summary for function: netif_schedule:4832.f
=======

SUMS (nm, lo, un, wr, re):	netif_schedule	0	0	1	3	

SS Sum:
 -> 
$SSBOT
SIZES: 4832.f : 125796
>>> PROGRESS 859/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #801
=================================
Summarizing function: hlist_unhashed : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:801 : 0.000916004180908
TIMES : FUN:1381.f : 0.00090503692627
=================================
Finished an SCC (1)
=================================
Summary for function: hlist_unhashed:1381.f
=======

SUMS (nm, lo, un, wr, re):	hlist_unhashed	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 1381.f : 160
>>> PROGRESS 860/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #802
=================================
Summarizing function: set_page_zone : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:802 : 0.000883817672729
TIMES : FUN:3681.f : 0.000874042510986
=================================
Finished an SCC (1)
=================================
Summary for function: set_page_zone:3681.f
=======

SUMS (nm, lo, un, wr, re):	set_page_zone	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 3681.f : 49380
>>> PROGRESS 861/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #803
=================================
Summarizing function: page_zone : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:803 : 0.00066089630127
TIMES : FUN:3679.f : 0.000652074813843
=================================
Finished an SCC (1)
=================================
Summary for function: page_zone:3679.f
=======

SUMS (nm, lo, un, wr, re):	page_zone	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3679.f : 112
>>> PROGRESS 862/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #804
=================================
Summarizing function: jiffies_to_clock_t : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:803.f : 0.000674962997437
TIMES : SCC:804 : 0.000684022903442
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_clock_t:803.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_clock_t	0	0	0	0	

SS Sum:
 -> 
Vval: x * 999848ULL
SIZES: 803.f : 34
>>> PROGRESS 863/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #805
=================================
Summarizing function: timer_pending : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1953.f : 0.000850915908813
TIMES : SCC:805 : 0.000861167907715
=================================
Finished an SCC (1)
=================================
Summary for function: timer_pending:1953.f
=======

SUMS (nm, lo, un, wr, re):	timer_pending	0	0	0	1	

SS Sum:
 -> 
Vval: (unsigned int )timer->base != (unsigned int )((void *)0)
SIZES: 1953.f : 424
>>> PROGRESS 864/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #806
=================================
Summarizing function: copy_highpage : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:806 : 0.00353693962097
TIMES : FUN:4253.f : 0.00352811813354
=================================
Finished an SCC (1)
=================================
Summary for function: copy_highpage:4253.f
=======

SUMS (nm, lo, un, wr, re):	copy_highpage	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4253.f : 266
>>> PROGRESS 865/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #810
=================================
Summarizing function: __ffs : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:810 : 0.00064492225647
TIMES : FUN:225.f : 0.000633955001831
=================================
Finished an SCC (1)
=================================
Summary for function: __ffs:225.f
=======

SUMS (nm, lo, un, wr, re):	__ffs	0	0	0	0	

SS Sum:
 -> 
Vval: word
SIZES: 225.f : 34
>>> PROGRESS 866/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #807
=================================
Summarizing function: sched_find_first_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:807 : 0.00192499160767
TIMES : FUN:227.f : 0.00191712379456
=================================
Finished an SCC (1)
=================================
Summary for function: sched_find_first_bit:227.f
=======

SUMS (nm, lo, un, wr, re):	sched_find_first_bit	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 227.f : 235
>>> PROGRESS 867/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #822
=================================
Summarizing function: __list_splice : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 2

doing lockset
doing guarded access
TIMES : SCC:822 : 0.000838041305542
TIMES : FUN:1367.f : 0.000827074050903
=================================
Finished an SCC (1)
=================================
Summary for function: __list_splice:1367.f
=======

SUMS (nm, lo, un, wr, re):	__list_splice	0	0	4	3	

SS Sum:
 -> 
$SSBOT
SIZES: 1367.f : 356
>>> PROGRESS 868/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #808
=================================
Summarizing function: list_splice_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:808 : 0.00330305099487
TIMES : FUN:1377.f : 0.00329208374023
=================================
Finished an SCC (1)
=================================
Summary for function: list_splice_init:1377.f
=======

SUMS (nm, lo, un, wr, re):	list_splice_init	0	0	2	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1377.f : 192
>>> PROGRESS 869/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #809
=================================
Summarizing function: page_to_nid : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 8	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3676.f : 0.000849008560181
TIMES : SCC:809 : 0.000859975814819
=================================
Finished an SCC (1)
=================================
Summary for function: page_to_nid:3676.f
=======

SUMS (nm, lo, un, wr, re):	page_to_nid	0	0	0	1	

SS Sum:
 -> 
Vval: page->flags >> (((sizeof(page_flags_t ) * 8U - 1U) - 2U) + 2U)
SIZES: 3676.f : 49360
>>> PROGRESS 870/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #812
=================================
Summarizing function: page_zonenum : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:812 : 0.000911951065063
TIMES : FUN:3674.f : 0.000901937484741
=================================
Finished an SCC (1)
=================================
Summary for function: page_zonenum:3674.f
=======

SUMS (nm, lo, un, wr, re):	page_zonenum	0	0	0	1	

SS Sum:
 -> 
Vval: (page->flags >> ((sizeof(page_flags_t ) * 8U - 1U) - 2U)) & 3UL
SIZES: 3674.f : 49360
>>> PROGRESS 871/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #813
=================================
Summarizing function: ffz : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:223.f : 0.000609159469604
TIMES : SCC:813 : 0.000621795654297
=================================
Finished an SCC (1)
=================================
Summary for function: ffz:223.f
=======

SUMS (nm, lo, un, wr, re):	ffz	0	0	0	0	

SS Sum:
 -> 
Vval: word
SIZES: 223.f : 34
>>> PROGRESS 872/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #814
=================================
Summarizing function: jiffies_to_timeval : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:814 : 0.00123476982117
TIMES : FUN:798.f : 0.00122690200806
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_timeval:798.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_timeval	0	0	2	1	

SS Sum:
 -> 
$SSBOT
SIZES: 798.f : 279
>>> PROGRESS 873/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #815
=================================
Summarizing function: list_splice : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:815 : 0.00322413444519
TIMES : FUN:1373.f : 0.00321507453918
=================================
Finished an SCC (1)
=================================
Summary for function: list_splice:1373.f
=======

SUMS (nm, lo, un, wr, re):	list_splice	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1373.f : 34
>>> PROGRESS 874/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #818
=================================
Summarizing function: copy_user_highpage : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 8	misses: 2

doing lockset
doing guarded access
TIMES : SCC:818 : 0.00157117843628
TIMES : FUN:4245.f : 0.00156092643738
=================================
Finished an SCC (1)
=================================
Summary for function: copy_user_highpage:4245.f
=======

SUMS (nm, lo, un, wr, re):	copy_user_highpage	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4245.f : 266
>>> PROGRESS 875/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #819
=================================
Summarizing function: timeval_to_jiffies : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 5	misses: 2

doing lockset
doing guarded access
TIMES : SCC:819 : 0.000837087631226
TIMES : FUN:794.f : 0.000824928283691
=================================
Finished an SCC (1)
=================================
Summary for function: timeval_to_jiffies:794.f
=======

SUMS (nm, lo, un, wr, re):	timeval_to_jiffies	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 794.f : 259
>>> PROGRESS 876/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #820
=================================
Summarizing function: check_region : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2518.f : 0.00102210044861
TIMES : SCC:820 : 0.00103282928467
=================================
Finished an SCC (1)
=================================
Summary for function: check_region:2518.f
=======

SUMS (nm, lo, un, wr, re):	check_region	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2518.f : 34
>>> PROGRESS 877/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #821
=================================
Summarizing function: unregister_gifconf : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:821 : 0.00117301940918
TIMES : FUN:4818.f : 0.00116205215454
=================================
Finished an SCC (1)
=================================
Summary for function: unregister_gifconf:4818.f
=======

SUMS (nm, lo, un, wr, re):	unregister_gifconf	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 4818.f : 34
>>> PROGRESS 878/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #823
=================================
Summarizing function: get_page : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:823 : 0.00185585021973
TIMES : FUN:3667.f : 0.0018470287323
=================================
Finished an SCC (1)
=================================
Summary for function: get_page:3667.f
=======

SUMS (nm, lo, un, wr, re):	get_page	0	0	0	2	

SS Sum:
 -> 
$SSBOT
SIZES: 3667.f : 49423
>>> PROGRESS 879/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #825
=================================
Summarizing function: d_mountpoint : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:825 : 0.000679016113281
TIMES : FUN:3091.f : 0.000669956207275
=================================
Finished an SCC (1)
=================================
Summary for function: d_mountpoint:3091.f
=======

SUMS (nm, lo, un, wr, re):	d_mountpoint	0	0	0	1	

SS Sum:
 -> 
Vval: dentry->d_mounted
SIZES: 3091.f : 49273
>>> PROGRESS 880/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #827
=================================
Summarizing function: jiffies_to_timespec : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:789.f : 0.00114893913269
TIMES : SCC:827 : 0.0011579990387
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_timespec:789.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_timespec	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 789.f : 183
>>> PROGRESS 881/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #828
=================================
Summarizing function: memclear_highpage_flush : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:828 : 0.00184106826782
TIMES : FUN:4239.f : 0.00183200836182
=================================
Finished an SCC (1)
=================================
Summary for function: memclear_highpage_flush:4239.f
=======

SUMS (nm, lo, un, wr, re):	memclear_highpage_flush	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4239.f : 34
>>> PROGRESS 882/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #830
=================================
Summarizing function: list_empty_careful : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:830 : 0.000830888748169
TIMES : FUN:1363.f : 0.000822067260742
=================================
Finished an SCC (1)
=================================
Summary for function: list_empty_careful:1363.f
=======

SUMS (nm, lo, un, wr, re):	list_empty_careful	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 1363.f : 192
>>> PROGRESS 883/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #831
=================================
Summarizing function: page_count : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:831 : 0.00125002861023
TIMES : FUN:3663.f : 0.00124096870422
=================================
Finished an SCC (1)
=================================
Summary for function: page_count:3663.f
=======

SUMS (nm, lo, un, wr, re):	page_count	0	0	0	3	

SS Sum:
 -> 
Vval: (p->private)->_count.counter + 1
SIZES: 3663.f : 49446
>>> PROGRESS 884/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #847
=================================
Summarizing function: dget : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:847 : 0.00226211547852
TIMES : FUN:3080.f : 0.00225210189819
=================================
Finished an SCC (1)
=================================
Summary for function: dget:3080.f
=======

SUMS (nm, lo, un, wr, re):	dget	0	0	0	1	

SS Sum:
 -> 
Extptr (0):
  lval = (*dentry)

SIZES: 3080.f : 49260
>>> PROGRESS 885/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #833
=================================
Summarizing function: dget_parent : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:833 : 0.00215983390808
TIMES : FUN:3086.f : 0.00215101242065
=================================
Finished an SCC (1)
=================================
Summary for function: dget_parent:3086.f
=======

SUMS (nm, lo, un, wr, re):	dget_parent	0	1	0	2	

SS Sum:
 -> 
Extptr (0):
  lval = (*dentry)

SIZES: 3086.f : 49316
>>> PROGRESS 886/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #834
=================================
Summarizing function: timespec_to_jiffies : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 3

doing lockset
doing guarded access
TIMES : FUN:785.f : 0.000795125961304
TIMES : SCC:834 : 0.000804901123047
=================================
Finished an SCC (1)
=================================
Summary for function: timespec_to_jiffies:785.f
=======

SUMS (nm, lo, un, wr, re):	timespec_to_jiffies	0	0	0	2	

SS Sum:
 -> 
$SSTOP
SIZES: 785.f : 219
>>> PROGRESS 887/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #835
=================================
Summarizing function: secure_computing : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:1935.f : 0.00219488143921
TIMES : SCC:835 : 0.00220394134521
=================================
Finished an SCC (1)
=================================
Summary for function: secure_computing:1935.f
=======

SUMS (nm, lo, un, wr, re):	secure_computing	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1935.f : 34
>>> PROGRESS 888/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #838
=================================
Summarizing function: set_page_writeback : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3660.f : 0.000801086425781
TIMES : SCC:838 : 0.000810861587524
=================================
Finished an SCC (1)
=================================
Summary for function: set_page_writeback:3660.f
=======

SUMS (nm, lo, un, wr, re):	set_page_writeback	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3660.f : 34
>>> PROGRESS 889/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #839
=================================
Summarizing function: clear_highpage : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:839 : 0.00149607658386
TIMES : FUN:4235.f : 0.00148701667786
=================================
Finished an SCC (1)
=================================
Summary for function: clear_highpage:4235.f
=======

SUMS (nm, lo, un, wr, re):	clear_highpage	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4235.f : 163
>>> PROGRESS 890/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #841
=================================
Summarizing function: d_unhashed : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3084.f : 0.000771045684814
TIMES : SCC:841 : 0.000779867172241
=================================
Finished an SCC (1)
=================================
Summary for function: d_unhashed:3084.f
=======

SUMS (nm, lo, un, wr, re):	d_unhashed	0	0	0	1	

SS Sum:
 -> 
Vval: dentry->d_flags & 16U
SIZES: 3084.f : 49247
>>> PROGRESS 891/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #843
=================================
Summarizing function: list_move_tail : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:843 : 0.00466299057007
TIMES : FUN:1358.f : 0.00465297698975
=================================
Finished an SCC (1)
=================================
Summary for function: list_move_tail:1358.f
=======

SUMS (nm, lo, un, wr, re):	list_move_tail	0	0	0	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1358.f : 183
>>> PROGRESS 892/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #844
=================================
Summarizing function: clear_page_dirty : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:844 : 0.000952959060669
TIMES : FUN:3658.f : 0.000943183898926
=================================
Finished an SCC (1)
=================================
Summary for function: clear_page_dirty:3658.f
=======

SUMS (nm, lo, un, wr, re):	clear_page_dirty	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3658.f : 34
>>> PROGRESS 893/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #853
=================================
Summarizing function: jiffies_to_usecs : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:777.f : 0.000659942626953
TIMES : SCC:853 : 0.000671863555908
=================================
Finished an SCC (1)
=================================
Summary for function: jiffies_to_usecs:777.f
=======

SUMS (nm, lo, un, wr, re):	jiffies_to_usecs	0	0	0	0	

SS Sum:
 -> 
Vval: 1000UL * j
SIZES: 777.f : 34
>>> PROGRESS 894/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #845
=================================
Summarizing function: usecs_to_jiffies : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:845 : 0.0010769367218
TIMES : FUN:782.f : 0.0010678768158
=================================
Finished an SCC (1)
=================================
Summary for function: usecs_to_jiffies:782.f
=======

SUMS (nm, lo, un, wr, re):	usecs_to_jiffies	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 782.f : 34
>>> PROGRESS 895/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #846
=================================
Summarizing function: list_move : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:1355.f : 0.00122809410095
TIMES : SCC:846 : 0.00123691558838
=================================
Finished an SCC (1)
=================================
Summary for function: list_move:1355.f
=======

SUMS (nm, lo, un, wr, re):	list_move	0	0	0	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1355.f : 183
>>> PROGRESS 896/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #848
=================================
Summarizing function: clear_user_highpage : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 3	misses: 2

doing lockset
doing guarded access
TIMES : SCC:848 : 0.00155305862427
TIMES : FUN:4230.f : 0.00154399871826
=================================
Finished an SCC (1)
=================================
Summary for function: clear_user_highpage:4230.f
=======

SUMS (nm, lo, un, wr, re):	clear_user_highpage	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4230.f : 163
>>> PROGRESS 897/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #852
=================================
Summarizing function: list_del_init : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:852 : 0.0011568069458
TIMES : FUN:1353.f : 0.00114798545837
=================================
Finished an SCC (1)
=================================
Summary for function: list_del_init:1353.f
=======

SUMS (nm, lo, un, wr, re):	list_del_init	0	0	2	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1353.f : 241
>>> PROGRESS 898/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #854
=================================
Summarizing function: mgsl_chars_in_buffer : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : SCC:854 : 0.00156307220459
TIMES : FUN:5376.f : 0.00155401229858
=================================
Finished an SCC (1)
=================================
Summary for function: mgsl_chars_in_buffer:5376.f
=======

SUMS (nm, lo, un, wr, re):	mgsl_chars_in_buffer	0	0	0	6	

SS Sum:
 -> 
$SSTOP
SIZES: 5376.f : 53557
>>> PROGRESS 899/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #855
=================================
Summarizing function: list_replace_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : FUN:1350.f : 0.000852108001709
TIMES : SCC:855 : 0.000861883163452
=================================
Finished an SCC (1)
=================================
Summary for function: list_replace_rcu:1350.f
=======

SUMS (nm, lo, un, wr, re):	list_replace_rcu	0	0	4	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1350.f : 333
>>> PROGRESS 900/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #856
=================================
Summarizing function: tasklet_enable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2499.f : 0.00110006332397
TIMES : SCC:856 : 0.0011088848114
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_enable:2499.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_enable	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2499.f : 34
>>> PROGRESS 901/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #858
=================================
Summarizing function: list_del_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:858 : 0.00101685523987
TIMES : FUN:1348.f : 0.00100803375244
=================================
Finished an SCC (1)
=================================
Summary for function: list_del_rcu:1348.f
=======

SUMS (nm, lo, un, wr, re):	list_del_rcu	0	0	1	2	

SS Sum:
 -> 
$SSBOT
SIZES: 1348.f : 212
>>> PROGRESS 902/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #859
=================================
Summarizing function: test_and_change_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

doing lockset
doing guarded access
TIMES : FUN:197.f : 0.000641107559204
TIMES : SCC:859 : 0.000654220581055
=================================
Finished an SCC (1)
=================================
Summary for function: test_and_change_bit:197.f
=======

SUMS (nm, lo, un, wr, re):	test_and_change_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 197.f : 34
>>> PROGRESS 903/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #864
=================================
Summarizing function: tasklet_disable_nosync : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2495.f : 0.000822067260742
TIMES : SCC:864 : 0.000832080841064
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_disable_nosync:2495.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_disable_nosync	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2495.f : 34
>>> PROGRESS 904/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #885
=================================
Summarizing function: tasklet_unlock_wait : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:2483.f : 0.00119185447693
TIMES : SCC:885 : 0.00120210647583
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_unlock_wait:2483.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_unlock_wait	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 2483.f : 351
>>> PROGRESS 905/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #860
=================================
Summarizing function: tasklet_disable : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 1

doing lockset
doing guarded access
TIMES : SCC:860 : 0.00114703178406
TIMES : FUN:2497.f : 0.00113701820374
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_disable:2497.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_disable	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 2497.f : 351
>>> PROGRESS 906/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #861
=================================
Summarizing function: pmd_none_or_clear_bad : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

doing lockset
doing guarded access
TIMES : SCC:861 : 0.00133514404297
TIMES : FUN:3647.f : 0.00132608413696
=================================
Finished an SCC (1)
=================================
Summary for function: pmd_none_or_clear_bad:3647.f
=======

SUMS (nm, lo, un, wr, re):	pmd_none_or_clear_bad	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3647.f : 160
>>> PROGRESS 907/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #865
=================================
Summarizing function: d_add_unique : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:865 : 0.00143194198608
TIMES : FUN:3070.f : 0.00142288208008
=================================
Finished an SCC (1)
=================================
Summary for function: d_add_unique:3070.f
=======

SUMS (nm, lo, un, wr, re):	d_add_unique	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3070.f : 34
>>> PROGRESS 908/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #866
=================================
Summarizing function: pud_none_or_clear_bad : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:866 : 0.00470089912415
TIMES : FUN:3644.f : 0.00468993186951
=================================
Finished an SCC (1)
=================================
Summary for function: pud_none_or_clear_bad:3644.f
=======

SUMS (nm, lo, un, wr, re):	pud_none_or_clear_bad	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 3644.f : 34
>>> PROGRESS 909/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #867
=================================
Summarizing function: __test_and_change_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:193.f : 0.000669002532959
TIMES : SCC:867 : 0.000679016113281
=================================
Finished an SCC (1)
=================================
Summary for function: __test_and_change_bit:193.f
=======

SUMS (nm, lo, un, wr, re):	__test_and_change_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 193.f : 34
>>> PROGRESS 910/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #870
=================================
Summarizing function: tasklet_hi_schedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:870 : 0.00124907493591
TIMES : FUN:2492.f : 0.00123882293701
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_hi_schedule:2492.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_hi_schedule	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2492.f : 34
>>> PROGRESS 911/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #871
=================================
Summarizing function: d_add : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : FUN:3067.f : 0.00100708007812
TIMES : SCC:871 : 0.00101494789124
=================================
Finished an SCC (1)
=================================
Summary for function: d_add:3067.f
=======

SUMS (nm, lo, un, wr, re):	d_add	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 3067.f : 34
>>> PROGRESS 912/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #872
=================================
Summarizing function: time_interpolator_reset : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:872 : 0.000604867935181
TIMES : FUN:766.f : 0.000595092773438
=================================
Finished an SCC (1)
=================================
Summary for function: time_interpolator_reset:766.f
=======

SUMS (nm, lo, un, wr, re):	time_interpolator_reset	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 766.f : 34
>>> PROGRESS 913/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #883
=================================
Summarizing function: __list_add_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:883 : 0.000847816467285
TIMES : FUN:1333.f : 0.000837087631226
=================================
Finished an SCC (1)
=================================
Summary for function: __list_add_rcu:1333.f
=======

SUMS (nm, lo, un, wr, re):	__list_add_rcu	0	0	6	0	

SS Sum:
 -> 
$SSBOT
SIZES: 1333.f : 344
>>> PROGRESS 914/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #873
=================================
Summarizing function: list_add_tail_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:873 : 0.00160503387451
TIMES : FUN:1340.f : 0.00159692764282
=================================
Finished an SCC (1)
=================================
Summary for function: list_add_tail_rcu:1340.f
=======

SUMS (nm, lo, un, wr, re):	list_add_tail_rcu	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1340.f : 156
>>> PROGRESS 915/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #874
=================================
Summarizing function: kmalloc_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 1

doing lockset
doing guarded access
TIMES : SCC:874 : 0.000640869140625
TIMES : FUN:1915.f : 0.000631093978882
=================================
Finished an SCC (1)
=================================
Summary for function: kmalloc_node:1915.f
=======

SUMS (nm, lo, un, wr, re):	kmalloc_node	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = _a10400_299945_synclink_1
SIZES: 1915.f : 34
>>> PROGRESS 916/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #875
=================================
Summarizing function: __test_and_clear_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:875 : 0.000591993331909
TIMES : FUN:189.f : 0.000581979751587
=================================
Finished an SCC (1)
=================================
Summary for function: __test_and_clear_bit:189.f
=======

SUMS (nm, lo, un, wr, re):	__test_and_clear_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 189.f : 34
>>> PROGRESS 917/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #876
=================================
Summarizing function: tasklet_schedule : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:876 : 0.00120997428894
TIMES : FUN:2488.f : 0.00120091438293
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_schedule:2488.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_schedule	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2488.f : 34
>>> PROGRESS 918/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #877
=================================
Summarizing function: pgd_none_or_clear_bad : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

doing lockset
doing guarded access
TIMES : SCC:877 : 0.00362706184387
TIMES : FUN:3638.f : 0.00361919403076
=================================
Finished an SCC (1)
=================================
Summary for function: pgd_none_or_clear_bad:3638.f
=======

SUMS (nm, lo, un, wr, re):	pgd_none_or_clear_bad	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 3638.f : 116
>>> PROGRESS 919/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #879
=================================
Summarizing function: flush_tlb_pgtables : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

doing lockset
doing guarded access
TIMES : SCC:879 : 0.000776052474976
TIMES : FUN:4213.f : 0.000761032104492
=================================
Finished an SCC (1)
=================================
Summary for function: flush_tlb_pgtables:4213.f
=======

SUMS (nm, lo, un, wr, re):	flush_tlb_pgtables	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4213.f : 34
>>> PROGRESS 920/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #880
=================================
Summarizing function: list_add_rcu : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:880 : 0.00103807449341
TIMES : FUN:1337.f : 0.00102806091309
=================================
Finished an SCC (1)
=================================
Summary for function: list_add_rcu:1337.f
=======

SUMS (nm, lo, un, wr, re):	list_add_rcu	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 1337.f : 156
>>> PROGRESS 921/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #884
=================================
Summarizing function: kmem_cache_alloc_node : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 6	misses: 1

doing lockset
doing guarded access
TIMES : SCC:884 : 0.000636100769043
TIMES : FUN:1908.f : 0.000625848770142
=================================
Finished an SCC (1)
=================================
Summary for function: kmem_cache_alloc_node:1908.f
=======

SUMS (nm, lo, un, wr, re):	kmem_cache_alloc_node	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = _a10390_299628_synclink_1
SIZES: 1908.f : 34
>>> PROGRESS 922/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #887
=================================
Summarizing function: flush_tlb_range : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:887 : 0.00088095664978
TIMES : FUN:4208.f : 0.000872135162354
=================================
Finished an SCC (1)
=================================
Summary for function: flush_tlb_range:4208.f
=======

SUMS (nm, lo, un, wr, re):	flush_tlb_range	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 4208.f : 49301
>>> PROGRESS 923/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #888
=================================
Summarizing function: eth_hdr : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4782.f : 0.00109791755676
TIMES : SCC:888 : 0.0011088848114
=================================
Finished an SCC (1)
=================================
Summary for function: eth_hdr:4782.f
=======

SUMS (nm, lo, un, wr, re):	eth_hdr	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*(skb->mac.raw))

SIZES: 4782.f : 62604
>>> PROGRESS 924/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #889
=================================
Summarizing function: __test_and_set_bit : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:889 : 0.000615119934082
TIMES : FUN:181.f : 0.000603914260864
=================================
Finished an SCC (1)
=================================
Summary for function: __test_and_set_bit:181.f
=======

SUMS (nm, lo, un, wr, re):	__test_and_set_bit	0	0	0	0	

SS Sum:
 -> 
Vval: oldbit
SIZES: 181.f : 34
>>> PROGRESS 925/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #890
=================================
Summarizing function: tasklet_unlock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : SCC:890 : 0.000837087631226
TIMES : FUN:2481.f : 0.000827074050903
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_unlock:2481.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_unlock	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 2481.f : 34
>>> PROGRESS 926/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #893
=================================
Summarizing function: nf_bridge_get : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:4780.f : 0.00126004219055
TIMES : SCC:893 : 0.00127100944519
=================================
Finished an SCC (1)
=================================
Summary for function: nf_bridge_get:4780.f
=======

SUMS (nm, lo, un, wr, re):	nf_bridge_get	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4780.f : 34
>>> PROGRESS 927/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #923
=================================
Summarizing function: pte_modify : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : FUN:3629.f : 0.000897884368896
TIMES : SCC:923 : 0.000910043716431
=================================
Finished an SCC (1)
=================================
Summary for function: pte_modify:3629.f
=======

SUMS (nm, lo, un, wr, re):	pte_modify	0	0	0	1	

SS Sum:
 -> 
Struct:
  .pte_high ->  $SSTOP
  .pte_low ->  Vval: (pte.pte_low & 4294963296UL) | newprot.pgprot

SIZES: 3629.f : 95
>>> PROGRESS 928/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #926
=================================
Summarizing function: tasklet_trylock : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

doing lockset
doing guarded access
TIMES : FUN:2477.f : 0.00107789039612
TIMES : SCC:926 : 0.00108695030212
=================================
Finished an SCC (1)
=================================
Summary for function: tasklet_trylock:2477.f
=======

SUMS (nm, lo, un, wr, re):	tasklet_trylock	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 2477.f : 34
>>> PROGRESS 929/930 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #928
=================================
Summarizing function: nf_bridge_put : synclink.ko_merged.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

doing lockset
doing guarded access
TIMES : SCC:928 : 0.00347805023193
TIMES : FUN:4777.f : 0.00346803665161
=================================
Finished an SCC (1)
=================================
Summary for function: nf_bridge_put:4777.f
=======

SUMS (nm, lo, un, wr, re):	nf_bridge_put	0	0	0	0	

SS Sum:
 -> 
$SSBOT
SIZES: 4777.f : 34
>>> PROGRESS 930/930 SCCs DONE!

=================================
getting next SCC from server
Bottomup analysis complete
-----



Beginning Thread Analysis:
-----
Expected # thread-creation site pairs: 3
checking a thread-creation pair
Prev ldiffCache hits: 0	misses: 2

doing symstate
Prev ldiffCache hits: 1406	misses: 36

doing symstate
now checking thread roots: f(6155.f), f(6155.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
now checking thread roots: f(6155.f), f(6155.f)
now checking thread roots: f(6155.f), f(6155.f)
now checking thread roots: f(6155.f), f(6155.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 1406	misses: 36

doing symstate
now checking thread roots: f(6163.f), main(6163.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
now checking thread roots: f(6163.f), main(6163.f)
done with pair, sending notification
checking a thread-creation pair
now checking thread roots: main(6163.f), main(6163.f)
done with pair, sending notification
completed all thread pairs
Sorting races

Printing races

****
Possible race between access to:

mgsl_device_list @ synclink.ko_merged.c:18232 and
mgsl_device_list @ synclink.ko_merged.c:18232
	Cluster ID: 552
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21328:(5660.f), synclink.ko_merged.c:21595:(5716.f)] and
	[synclink.ko_merged.c:22091:(5115.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

mgsl_device_count @ synclink.ko_merged.c:18233 and
mgsl_device_count @ synclink.ko_merged.c:18233
	Cluster ID: 553
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21322:(5660.f)] and
	[synclink.ko_merged.c:22089:(5115.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 554
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19581:(5355.f), synclink.ko_merged.c:21366:(5660.f), synclink.ko_merged.c:21372:(5660.f)] and
	[synclink.ko_merged.c:22275:(5806.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 259
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(5660.f)] and
	[synclink.ko_merged.c:19581:(5355.f), synclink.ko_merged.c:21366:(5660.f), synclink.ko_merged.c:21372:(5660.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 0
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(5660.f)] and
	[synclink.ko_merged.c:21375:(5660.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 551
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(5660.f)] and
	[synclink.ko_merged.c:22273:(5806.f), synclink.ko_merged.c:22274:(5806.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

tmp_buf @ synclink.ko_merged.c:18463 and
tmp_buf @ synclink.ko_merged.c:18463
	Cluster ID: 550
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21375:(5660.f)] and
	[synclink.ko_merged.c:22275:(5806.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a24654_783936_synclink_3.closing @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.closing @ synclink.ko_merged.c:24654
	Cluster ID: 1
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21007:(5595.f), synclink.ko_merged.c:21023:(5595.f)] and
	[synclink.ko_merged.c:21007:(5595.f), synclink.ko_merged.c:21023:(5595.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654
	Cluster ID: 260
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21343:(5660.f)] and
	[synclink.ko_merged.c:20440:(5151.f), synclink.ko_merged.c:20488:(5152.f), synclink.ko_merged.c:21067:(5226.f), synclink.ko_merged.c:18502:(5240.f), synclink.ko_merged.c:18524:(5245.f), synclink.ko_merged.c:19463:(5343.f), synclink.ko_merged.c:19504:(5350.f), synclink.ko_merged.c:19566:(5355.f), synclink.ko_merged.c:19688:(5371.f), synclink.ko_merged.c:19754:(5380.f), synclink.ko_merged.c:19780:(5385.f), synclink.ko_merged.c:19806:(5391.f), synclink.ko_merged.c:19832:(5396.f), synclink.ko_merged.c:20519:(5542.f), synclink.ko_merged.c:20547:(5550.f), synclink.ko_merged.c:20930:(5588.f), synclink.ko_merged.c:20980:(5595.f), synclink.ko_merged.c:21158:(5626.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.driver_data @ synclink.ko_merged.c:24654
	Cluster ID: 2
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21343:(5660.f)] and
	[synclink.ko_merged.c:21343:(5660.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654
	Cluster ID: 261
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20966:(5588.f)] and
	[synclink.ko_merged.c:19519:(5350.f), synclink.ko_merged.c:19665:(5355.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654 and
_a24654_783936_synclink_3.hw_stopped @ synclink.ko_merged.c:24654
	Cluster ID: 3
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20966:(5588.f)] and
	[synclink.ko_merged.c:20966:(5588.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5957].flags and
REP:[5957].flags
	Cluster ID: 4
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10724:(2118.f)] and
	[synclink.ko_merged.c:10724:(2118.f)]

	Confidence: used PTA nodes lblSet(0, 0)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6006].serial_signals and
REP:[6112].serial_signals
	Cluster ID: 297
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)] and
	[synclink.ko_merged.c:23398:(5094.f), synclink.ko_merged.c:19819:(5391.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20506
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6006].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 298
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)] and
	[synclink.ko_merged.c:22984:(5087.f), synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:23398:(5094.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6006].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 42
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)] and
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[5963]
	Cluster ID: 329
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[5972]
	Cluster ID: 330
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6013]
	Cluster ID: 49
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6013]
	Cluster ID: 302
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23158:(5095.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6022]
	Cluster ID: 331
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6022]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6033]
	Cluster ID: 74
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6033]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6059]
	Cluster ID: 75
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6059]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6068]
	Cluster ID: 76
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6068]
	Cluster ID: 333
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6025] and
REP:[6089]
	Cluster ID: 77
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6025]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[5963]
	Cluster ID: 334
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[5972]
	Cluster ID: 335
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6013]
	Cluster ID: 50
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6022]
	Cluster ID: 336
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6022]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6033]
	Cluster ID: 78
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6033]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6059]
	Cluster ID: 79
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6059]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6068]
	Cluster ID: 80
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6068]
	Cluster ID: 338
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6026] and
REP:[6089]
	Cluster ID: 81
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23163:(5095.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6026]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].cmr_value and
REP:[6103].cmr_value
	Cluster ID: 93
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22460:(5097.f)] and
	[synclink.ko_merged.c:22460:(5097.f), synclink.ko_merged.c:24361:(5103.f), synclink.ko_merged.c:24339:(5105.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].cts_chkcount and
REP:[6103].cts_chkcount
	Cluster ID: 98
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19336:(5334.f)] and
	[synclink.ko_merged.c:19336:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].cts_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].cts_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].cts_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].dcd_chkcount and
REP:[6103].dcd_chkcount
	Cluster ID: 102
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19335:(5334.f)] and
	[synclink.ko_merged.c:19335:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].dcd_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].dcd_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].dcd_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].dsr_chkcount and
REP:[6103].dsr_chkcount
	Cluster ID: 105
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19338:(5334.f)] and
	[synclink.ko_merged.c:19338:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].dsr_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].dsr_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].dsr_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].irq_occurred and
REP:[6045].irq_occurred
	Cluster ID: 368
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23916:(5109.f)] and
	[synclink.ko_merged.c:23935:(5109.f), synclink.ko_merged.c:23946:(5109.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].loopback_bits and
REP:[6079].loopback_bits
	Cluster ID: 374
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22727:(5092.f), synclink.ko_merged.c:22732:(5092.f), synclink.ko_merged.c:23168:(5095.f)] and
	[synclink.ko_merged.c:22395:(5079.f), synclink.ko_merged.c:22382:(5080.f), synclink.ko_merged.c:22338:(5081.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6074].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6006].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].loopback_bits and
REP:[6103].loopback_bits
	Cluster ID: 124
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22727:(5092.f), synclink.ko_merged.c:22732:(5092.f), synclink.ko_merged.c:23168:(5095.f)] and
	[synclink.ko_merged.c:22727:(5092.f), synclink.ko_merged.c:22732:(5092.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].loopback_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].mbre_bit and
REP:[6082].mbre_bit
	Cluster ID: 375
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23167:(5095.f), synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)] and
	[synclink.ko_merged.c:22373:(5076.f), synclink.ko_merged.c:22361:(5077.f), synclink.ko_merged.c:22350:(5078.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6006].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].mbre_bit and
REP:[6091].mbre_bit
	Cluster ID: 376
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23167:(5095.f), synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)] and
	[synclink.ko_merged.c:22350:(5078.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6091].mbre_bit
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].params.mode and
REP:[6103].params.mode
	Cluster ID: 130
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].ri_chkcount and
REP:[6103].ri_chkcount
	Cluster ID: 138
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19337:(5334.f)] and
	[synclink.ko_merged.c:19337:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].ri_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].ri_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].ri_chkcount
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].rx_enabled and
REP:[6103].rx_enabled
	Cluster ID: 143
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22961:(5085.f), synclink.ko_merged.c:22896:(5086.f)] and
	[synclink.ko_merged.c:22961:(5085.f), synclink.ko_merged.c:22896:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tcsr_value and
REP:[6103].tcsr_value
	Cluster ID: 150
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23342:(5089.f), synclink.ko_merged.c:23343:(5089.f), synclink.ko_merged.c:22547:(5097.f), synclink.ko_merged.c:22549:(5097.f)] and
	[synclink.ko_merged.c:23342:(5089.f), synclink.ko_merged.c:23343:(5089.f), synclink.ko_merged.c:22547:(5097.f), synclink.ko_merged.c:22549:(5097.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tcsr_value and
REP:[6118].tcsr_value
	Cluster ID: 399
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23342:(5089.f), synclink.ko_merged.c:23343:(5089.f), synclink.ko_merged.c:22547:(5097.f), synclink.ko_merged.c:22549:(5097.f)] and
	[synclink.ko_merged.c:22992:(5087.f), synclink.ko_merged.c:23011:(5087.f), synclink.ko_merged.c:23026:(5087.f), synclink.ko_merged.c:23089:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_active and
REP:[6118].tx_active
	Cluster ID: 407
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:22991:(5087.f), synclink.ko_merged.c:19591:(5355.f), synclink.ko_merged.c:19667:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19667
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_active and
REP:[6118].tx_active
	Cluster ID: 156
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:23032:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_enabled and
REP:[6091].tx_enabled
	Cluster ID: 420
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23069:(5088.f)] and
	[synclink.ko_merged.c:18511:(5240.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_enabled and
REP:[6118].tx_enabled
	Cluster ID: 419
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23069:(5088.f)] and
	[synclink.ko_merged.c:23034:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_enabled and
REP:[6118].tx_enabled
	Cluster ID: 163
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23069:(5088.f)] and
	[synclink.ko_merged.c:23035:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].usc_idle_mode and
REP:[6103].usc_idle_mode
	Cluster ID: 174
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23341:(5089.f), synclink.ko_merged.c:23169:(5095.f)] and
	[synclink.ko_merged.c:23341:(5089.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].usc_idle_mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].usc_idle_mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].usc_idle_mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_cnt and
REP:[6082].xmit_cnt
	Cluster ID: 179
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19320:(5334.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_cnt and
REP:[6118].xmit_cnt
	Cluster ID: 430
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19320:(5334.f)] and
	[synclink.ko_merged.c:22980:(5087.f), synclink.ko_merged.c:23084:(5090.f), synclink.ko_merged.c:23095:(5090.f), synclink.ko_merged.c:23101:(5090.f), synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:19614:(5355.f), synclink.ko_merged.c:19616:(5355.f), synclink.ko_merged.c:19634:(5355.f), synclink.ko_merged.c:19655:(5355.f), synclink.ko_merged.c:19663:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19634
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19539
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_cnt and
REP:[6118].xmit_cnt
	Cluster ID: 178
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19320:(5334.f)] and
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:21889:(5135.f), synclink.ko_merged.c:19627:(5355.f), synclink.ko_merged.c:19655:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_head and
REP:[6103].xmit_head
	Cluster ID: 182
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19319:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_tail and
REP:[6053].xmit_tail
	Cluster ID: 446
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19764:(5380.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6053].xmit_tail
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6053].xmit_tail
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6053].xmit_tail
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6053].xmit_tail
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_tail and
REP:[6082].xmit_tail
	Cluster ID: 187
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19318:(5334.f)] and
	[synclink.ko_merged.c:19318:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_tail
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_tail and
REP:[6082].xmit_tail
	Cluster ID: 439
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19318:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_tail
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_tail
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_tail and
REP:[6118].xmit_tail
	Cluster ID: 438
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19318:(5334.f)] and
	[synclink.ko_merged.c:23104:(5090.f), synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23108:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23131:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_tail and
REP:[6118].xmit_tail
	Cluster ID: 186
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19318:(5334.f)] and
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_cnt and
REP:[6082].xmit_cnt
	Cluster ID: 177
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19766:(5380.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_cnt and
REP:[6088].xmit_cnt
	Cluster ID: 441
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19766:(5380.f)] and
	[synclink.ko_merged.c:19485:(5343.f), synclink.ko_merged.c:19490:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6088].xmit_cnt
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_cnt and
REP:[6088].xmit_cnt
	Cluster ID: 190
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19766:(5380.f)] and
	[synclink.ko_merged.c:19490:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6088].xmit_cnt
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_cnt and
REP:[6115].xmit_cnt
	Cluster ID: 442
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19766:(5380.f)] and
	[synclink.ko_merged.c:19693:(5371.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6115].xmit_cnt
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_cnt and
REP:[6118].xmit_cnt
	Cluster ID: 440
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19766:(5380.f)] and
	[synclink.ko_merged.c:22980:(5087.f), synclink.ko_merged.c:23084:(5090.f), synclink.ko_merged.c:23095:(5090.f), synclink.ko_merged.c:23101:(5090.f), synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:19614:(5355.f), synclink.ko_merged.c:19616:(5355.f), synclink.ko_merged.c:19634:(5355.f), synclink.ko_merged.c:19655:(5355.f), synclink.ko_merged.c:19663:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19634
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19539
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_cnt and
REP:[6118].xmit_cnt
	Cluster ID: 189
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19766:(5380.f)] and
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:21889:(5135.f), synclink.ko_merged.c:19627:(5355.f), synclink.ko_merged.c:19655:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_head and
REP:[6045].xmit_head
	Cluster ID: 181
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19319:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_head and
REP:[6082].xmit_head
	Cluster ID: 443
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_head and
REP:[6088].xmit_head
	Cluster ID: 444
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19486:(5343.f), synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6088].xmit_head
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_head and
REP:[6088].xmit_head
	Cluster ID: 191
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6088].xmit_head
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_head and
REP:[6118].xmit_head
	Cluster ID: 445
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19635:(5355.f), synclink.ko_merged.c:19652:(5355.f), synclink.ko_merged.c:19654:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6118].xmit_head
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_head and
REP:[6118].xmit_head
	Cluster ID: 192
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19654:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6118].xmit_head
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_tail and
REP:[6045].xmit_tail
	Cluster ID: 437
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19765:(5380.f)] and
	[synclink.ko_merged.c:19318:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_tail
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_tail
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_tail
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_tail
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_tail and
REP:[6082].xmit_tail
	Cluster ID: 185
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19764:(5380.f)] and
	[synclink.ko_merged.c:19318:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_tail
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_tail
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6053].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_tail and
REP:[6118].xmit_tail
	Cluster ID: 447
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19764:(5380.f)] and
	[synclink.ko_merged.c:23104:(5090.f), synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23108:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23131:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6053].xmit_tail and
REP:[6118].xmit_tail
	Cluster ID: 193
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19764:(5380.f)] and
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_enabled and
REP:[6076].rx_enabled
	Cluster ID: 210
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22896:(5086.f)] and
	[synclink.ko_merged.c:22896:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].rx_enabled
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_overflow and
REP:[6076].rx_overflow
	Cluster ID: 144
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22897:(5086.f)] and
	[synclink.ko_merged.c:22897:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_overflow
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_overflow
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_overflow
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].rx_overflow
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_overflow
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_overflow
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].rx_overflow
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_rcc_underrun and
REP:[6076].rx_rcc_underrun
	Cluster ID: 145
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22898:(5086.f)] and
	[synclink.ko_merged.c:22898:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_rcc_underrun
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_rcc_underrun
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_rcc_underrun
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].rx_rcc_underrun
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_rcc_underrun
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_rcc_underrun
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].rx_rcc_underrun
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].serial_signals and
REP:[6076].serial_signals
	Cluster ID: 211
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)] and
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].serial_signals and
REP:[6082].serial_signals
	Cluster ID: 41
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)] and
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:19373:(5225.f), synclink.ko_merged.c:19375:(5225.f), synclink.ko_merged.c:20942:(5588.f), synclink.ko_merged.c:20950:(5588.f), synclink.ko_merged.c:20952:(5588.f), synclink.ko_merged.c:20956:(5588.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6045].serial_signals
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6045].serial_signals
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 468
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)] and
	[synclink.ko_merged.c:22984:(5087.f), synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:23398:(5094.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 212
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)] and
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_active and
REP:[6076].tx_active
	Cluster ID: 155
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:23070:(5088.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_enabled and
REP:[6076].tx_enabled
	Cluster ID: 162
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23069:(5088.f)] and
	[synclink.ko_merged.c:23069:(5088.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_enabled
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_enabled
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_enabled
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].rx_enabled and
REP:[6082].rx_enabled
	Cluster ID: 142
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22896:(5086.f)] and
	[synclink.ko_merged.c:22961:(5085.f), synclink.ko_merged.c:22896:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_enabled
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_enabled
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].serial_signals and
REP:[6055].serial_signals
	Cluster ID: 467
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)] and
	[synclink.ko_merged.c:23398:(5094.f), synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20506
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6079].serial_signals and
REP:[6112].serial_signals
	Cluster ID: 501
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)] and
	[synclink.ko_merged.c:23398:(5094.f), synclink.ko_merged.c:19819:(5391.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20506
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].mbre_bit and
REP:[6045].mbre_bit
	Cluster ID: 125
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)] and
	[synclink.ko_merged.c:23167:(5095.f), synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].mbre_bit
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].mbre_bit
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].mbre_bit
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].mbre_bit
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].mbre_bit and
REP:[6079].mbre_bit
	Cluster ID: 520
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)] and
	[synclink.ko_merged.c:22373:(5076.f), synclink.ko_merged.c:22361:(5077.f), synclink.ko_merged.c:22350:(5078.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6006].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].mbre_bit and
REP:[6103].mbre_bit
	Cluster ID: 245
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)] and
	[synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].mbre_bit
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.mode and
REP:[6006].params.mode
	Cluster ID: 382
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:21494:(5671.f), synclink.ko_merged.c:21497:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.mode and
REP:[6074].params.mode
	Cluster ID: 383
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:21101:(5226.f), synclink.ko_merged.c:21104:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.mode and
REP:[6079].params.mode
	Cluster ID: 384
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:22990:(5087.f), synclink.ko_merged.c:23003:(5087.f), synclink.ko_merged.c:23017:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19668
	lval 2: REP:[6118].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.mode and
REP:[6088].params.mode
	Cluster ID: 386
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:19480:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.mode and
REP:[6115].params.mode
	Cluster ID: 387
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:19701:(5371.f), synclink.ko_merged.c:19704:(5371.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].tcsr_value and
REP:[6045].tcsr_value
	Cluster ID: 398
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23342:(5089.f), synclink.ko_merged.c:23343:(5089.f), synclink.ko_merged.c:22547:(5097.f), synclink.ko_merged.c:22549:(5097.f)] and
	[synclink.ko_merged.c:23058:(5088.f), synclink.ko_merged.c:23342:(5089.f), synclink.ko_merged.c:23343:(5089.f), synclink.ko_merged.c:23344:(5089.f), synclink.ko_merged.c:22537:(5097.f), synclink.ko_merged.c:22544:(5097.f), synclink.ko_merged.c:22549:(5097.f), synclink.ko_merged.c:22551:(5097.f), synclink.ko_merged.c:23224:(5098.f), synclink.ko_merged.c:23227:(5098.f), synclink.ko_merged.c:23271:(5100.f), synclink.ko_merged.c:23274:(5100.f), synclink.ko_merged.c:24058:(5110.f), synclink.ko_merged.c:24084:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tcsr_value
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tcsr_value
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tcsr_value
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tcsr_value
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].tcsr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].xmit_head and
REP:[6053].xmit_head
	Cluster ID: 433
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19766:(5380.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].xmit_head and
REP:[6088].xmit_head
	Cluster ID: 435
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19486:(5343.f), synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].xmit_head and
REP:[6088].xmit_head
	Cluster ID: 183
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6088].xmit_head
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].xmit_head and
REP:[6118].xmit_head
	Cluster ID: 436
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19635:(5355.f), synclink.ko_merged.c:19652:(5355.f), synclink.ko_merged.c:19654:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].xmit_head and
REP:[6118].xmit_head
	Cluster ID: 184
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19654:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].cmr_value and
REP:[6103].cmr_value
	Cluster ID: 94
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23783:(5123.f)] and
	[synclink.ko_merged.c:22460:(5097.f), synclink.ko_merged.c:24361:(5103.f), synclink.ko_merged.c:24339:(5105.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].cmr_value
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].cmr_value
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].cmr_value
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].cmr_value
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].current_tx_buffer and
REP:[6045].current_tx_buffer
	Cluster ID: 361
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23785:(5123.f)] and
	[synclink.ko_merged.c:23450:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].current_tx_buffer and
REP:[6045].current_tx_buffer
	Cluster ID: 101
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23812:(5123.f)] and
	[synclink.ko_merged.c:23450:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].current_tx_buffer
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].drop_rts_on_tx_done and
REP:[6103].drop_rts_on_tx_done
	Cluster ID: 231
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22981:(5087.f), synclink.ko_merged.c:22987:(5087.f)] and
	[synclink.ko_merged.c:22981:(5087.f), synclink.ko_merged.c:22987:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].drop_rts_on_tx_done
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].drop_rts_on_tx_done
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].drop_rts_on_tx_done
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].drop_rts_on_tx_done
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].drop_rts_on_tx_done
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].drop_rts_on_tx_done
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].drop_rts_on_tx_done
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].icount.tx and
REP:[6103].icount.tx
	Cluster ID: 232
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23114:(5090.f), synclink.ko_merged.c:23138:(5090.f)] and
	[synclink.ko_merged.c:23114:(5090.f), synclink.ko_merged.c:23138:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].icount.tx
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].icount.tx
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].icount.tx
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].serial_signals and
REP:[6079].serial_signals
	Cluster ID: 502
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)] and
	[synclink.ko_merged.c:22984:(5087.f), synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:23398:(5094.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].serial_signals and
REP:[6103].serial_signals
	Cluster ID: 233
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)] and
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:19373:(5225.f), synclink.ko_merged.c:19375:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].start_tx_dma_buffer and
REP:[6045].start_tx_dma_buffer
	Cluster ID: 149
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23786:(5123.f)] and
	[synclink.ko_merged.c:23451:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].start_tx_dma_buffer
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].start_tx_dma_buffer
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].start_tx_dma_buffer
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].start_tx_dma_buffer
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_active and
REP:[6079].tx_active
	Cluster ID: 505
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(5087.f)] and
	[synclink.ko_merged.c:22991:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19667
	lval 2: REP:[6118].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_active and
REP:[6103].tx_active
	Cluster ID: 237
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(5087.f)] and
	[synclink.ko_merged.c:23032:(5087.f), synclink.ko_merged.c:23070:(5088.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_buffer_list and
REP:[6045].tx_buffer_list
	Cluster ID: 416
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23793:(5123.f)] and
	[synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21708:(5129.f), synclink.ko_merged.c:21749:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_buffer_list
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_buffer_list
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_buffer_list
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_buffer_list
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_dma_buffers_used and
REP:[6045].tx_dma_buffers_used
	Cluster ID: 161
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23810:(5123.f)] and
	[synclink.ko_merged.c:23452:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_dma_buffers_used
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_dma_buffers_used
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_dma_buffers_used
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6045].tx_dma_buffers_used
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_enabled and
REP:[6079].tx_enabled
	Cluster ID: 509
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23035:(5087.f)] and
	[synclink.ko_merged.c:23034:(5087.f), synclink.ko_merged.c:18533:(5245.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_enabled and
REP:[6103].tx_enabled
	Cluster ID: 238
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23035:(5087.f)] and
	[synclink.ko_merged.c:23035:(5087.f), synclink.ko_merged.c:23069:(5088.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_timer.expires and
REP:[6079].tx_timer.expires
	Cluster ID: 511
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23029:(5087.f)] and
	[synclink.ko_merged.c:10479:(1960.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].tx_timer.expires and
REP:[6103].tx_timer.expires
	Cluster ID: 239
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23029:(5087.f)] and
	[synclink.ko_merged.c:23029:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_timer.expires
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_timer.expires
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].x_char and
REP:[6079].x_char
	Cluster ID: 512
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23129:(5090.f)] and
	[synclink.ko_merged.c:23085:(5090.f), synclink.ko_merged.c:23103:(5090.f), synclink.ko_merged.c:23127:(5090.f), synclink.ko_merged.c:23128:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].x_char and
REP:[6103].x_char
	Cluster ID: 240
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23129:(5090.f)] and
	[synclink.ko_merged.c:23129:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19793
	lval 2: REP:[6107].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].xmit_cnt and
REP:[6079].xmit_cnt
	Cluster ID: 514
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f)] and
	[synclink.ko_merged.c:22980:(5087.f), synclink.ko_merged.c:23084:(5090.f), synclink.ko_merged.c:23095:(5090.f), synclink.ko_merged.c:23101:(5090.f), synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19634
	lval 2: REP:[6118].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19539
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].xmit_cnt and
REP:[6103].xmit_cnt
	Cluster ID: 242
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f)] and
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
	lval 2: REP:[6118].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].xmit_tail and
REP:[6079].xmit_tail
	Cluster ID: 519
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)] and
	[synclink.ko_merged.c:23104:(5090.f), synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23108:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23131:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].xmit_tail and
REP:[6103].xmit_tail
	Cluster ID: 244
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)] and
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f), synclink.ko_merged.c:19318:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_cnt and
REP:[6045].xmit_cnt
	Cluster ID: 431
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19485:(5343.f), synclink.ko_merged.c:19490:(5343.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_cnt and
REP:[6045].xmit_cnt
	Cluster ID: 180
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19490:(5343.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_cnt and
REP:[6115].xmit_cnt
	Cluster ID: 526
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19490:(5343.f)] and
	[synclink.ko_merged.c:19693:(5371.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6115].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_cnt and
REP:[6118].xmit_cnt
	Cluster ID: 525
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19490:(5343.f)] and
	[synclink.ko_merged.c:22980:(5087.f), synclink.ko_merged.c:23084:(5090.f), synclink.ko_merged.c:23095:(5090.f), synclink.ko_merged.c:23101:(5090.f), synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:19614:(5355.f), synclink.ko_merged.c:19616:(5355.f), synclink.ko_merged.c:19634:(5355.f), synclink.ko_merged.c:19655:(5355.f), synclink.ko_merged.c:19663:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19634
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19539
	lval 2: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_cnt and
REP:[6118].xmit_cnt
	Cluster ID: 243
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19490:(5343.f)] and
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:21889:(5135.f), synclink.ko_merged.c:19627:(5355.f), synclink.ko_merged.c:19655:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_head and
REP:[6053].xmit_head
	Cluster ID: 528
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)] and
	[synclink.ko_merged.c:19766:(5380.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6053].xmit_head
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_head and
REP:[6082].xmit_head
	Cluster ID: 527
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_head and
REP:[6118].xmit_head
	Cluster ID: 529
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)] and
	[synclink.ko_merged.c:19635:(5355.f), synclink.ko_merged.c:19652:(5355.f), synclink.ko_merged.c:19654:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6118].xmit_head
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_head and
REP:[6118].xmit_head
	Cluster ID: 250
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)] and
	[synclink.ko_merged.c:19654:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6118].xmit_head
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6088].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6089] and
REP:[5963]
	Cluster ID: 530
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19488:(5343.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6089] and
REP:[5972]
	Cluster ID: 531
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19488:(5343.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6089] and
REP:[6013]
	Cluster ID: 54
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19488:(5343.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6021]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6013]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6089] and
REP:[6022]
	Cluster ID: 532
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19488:(5343.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6022]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6089] and
REP:[6025]
	Cluster ID: 533
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19488:(5343.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6089] and
REP:[6068]
	Cluster ID: 535
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19488:(5343.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6089]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6091].mbre_bit and
REP:[6082].mbre_bit
	Cluster ID: 521
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22350:(5078.f)] and
	[synclink.ko_merged.c:22641:(5097.f), synclink.ko_merged.c:22644:(5097.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].mbre_bit
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].mbre_bit
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].mbre_bit
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].mbre_bit
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6091].mbre_bit
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6091].tx_active and
REP:[6006].tx_active
	Cluster ID: 405
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:21548:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6091].tx_active and
REP:[6074].tx_active
	Cluster ID: 406
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:21106:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6091].tx_active and
REP:[6088].tx_active
	Cluster ID: 408
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:19483:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6091].tx_active and
REP:[6115].tx_active
	Cluster ID: 409
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23070:(5088.f)] and
	[synclink.ko_merged.c:19706:(5371.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6091].tx_enabled and
REP:[6074].tx_enabled
	Cluster ID: 418
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23069:(5088.f)] and
	[synclink.ko_merged.c:21126:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].cmr_value and
REP:[6045].cmr_value
	Cluster ID: 358
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24361:(5103.f), synclink.ko_merged.c:24362:(5103.f), synclink.ko_merged.c:24339:(5105.f), synclink.ko_merged.c:24340:(5105.f)] and
	[synclink.ko_merged.c:22460:(5097.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].cmr_value and
REP:[6085].cmr_value
	Cluster ID: 522
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24361:(5103.f), synclink.ko_merged.c:24362:(5103.f), synclink.ko_merged.c:24339:(5105.f), synclink.ko_merged.c:24340:(5105.f)] and
	[synclink.ko_merged.c:23783:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[6118].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[6118].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].cmr_value
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].idle_mode and
REP:[6082].idle_mode
	Cluster ID: 538
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19973:(5157.f)] and
	[synclink.ko_merged.c:23319:(5089.f), synclink.ko_merged.c:23322:(5089.f), synclink.ko_merged.c:23325:(5089.f), synclink.ko_merged.c:23328:(5089.f), synclink.ko_merged.c:23331:(5089.f), synclink.ko_merged.c:23334:(5089.f), synclink.ko_merged.c:23337:(5089.f), synclink.ko_merged.c:23348:(5089.f), synclink.ko_merged.c:23351:(5089.f), synclink.ko_merged.c:23354:(5089.f), synclink.ko_merged.c:23355:(5089.f), synclink.ko_merged.c:23358:(5089.f), synclink.ko_merged.c:23359:(5089.f), synclink.ko_merged.c:23362:(5089.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].idle_mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20610
	lval 2: REP:[6103].idle_mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].idle_mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].params.mode and
REP:[6045].params.mode
	Cluster ID: 385
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23258:(5100.f), synclink.ko_merged.c:23291:(5100.f)] and
	[synclink.ko_merged.c:22921:(5085.f), synclink.ko_merged.c:22924:(5085.f), synclink.ko_merged.c:23345:(5089.f), synclink.ko_merged.c:22426:(5097.f), synclink.ko_merged.c:22450:(5097.f), synclink.ko_merged.c:23257:(5100.f), synclink.ko_merged.c:19321:(5334.f), synclink.ko_merged.c:19324:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].params.mode
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].params.mode
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].params.mode
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].rx_enabled and
REP:[6045].rx_enabled
	Cluster ID: 396
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20036:(5160.f), synclink.ko_merged.c:20040:(5160.f)] and
	[synclink.ko_merged.c:22961:(5085.f), synclink.ko_merged.c:22896:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].rx_enabled and
REP:[6055].rx_enabled
	Cluster ID: 466
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20036:(5160.f), synclink.ko_merged.c:20040:(5160.f)] and
	[synclink.ko_merged.c:22896:(5086.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].rx_enabled
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].xmit_head and
REP:[6045].xmit_head
	Cluster ID: 434
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19319:(5334.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_head
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_head
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].xmit_tail and
REP:[6045].xmit_tail
	Cluster ID: 517
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f), synclink.ko_merged.c:19318:(5334.f)] and
	[synclink.ko_merged.c:19319:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].xmit_tail
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].serial_signals and
REP:[6006].serial_signals
	Cluster ID: 44
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19850:(5396.f)] and
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:21476:(5671.f), synclink.ko_merged.c:21479:(5671.f), synclink.ko_merged.c:21482:(5671.f), synclink.ko_merged.c:21485:(5671.f), synclink.ko_merged.c:21488:(5671.f), synclink.ko_merged.c:21491:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21476
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6095].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6095].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6082].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6045].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].serial_signals and
REP:[6055].serial_signals
	Cluster ID: 214
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19850:(5396.f)] and
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].serial_signals and
REP:[6055].serial_signals
	Cluster ID: 539
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19850:(5396.f)] and
	[synclink.ko_merged.c:23398:(5094.f), synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20506
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].serial_signals and
REP:[6112].serial_signals
	Cluster ID: 254
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19850:(5396.f)] and
	[synclink.ko_merged.c:19819:(5391.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6112].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 540
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19850:(5396.f)] and
	[synclink.ko_merged.c:22984:(5087.f), synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:23398:(5094.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 235
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19850:(5396.f)] and
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6103].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6112].serial_signals and
REP:[6006].serial_signals
	Cluster ID: 45
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19819:(5391.f)] and
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:21476:(5671.f), synclink.ko_merged.c:21479:(5671.f), synclink.ko_merged.c:21482:(5671.f), synclink.ko_merged.c:21485:(5671.f), synclink.ko_merged.c:21488:(5671.f), synclink.ko_merged.c:21491:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21476
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6095].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6095].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6082].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6045].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6112].serial_signals and
REP:[6055].serial_signals
	Cluster ID: 215
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19819:(5391.f)] and
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6112].serial_signals and
REP:[6055].serial_signals
	Cluster ID: 543
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19819:(5391.f)] and
	[synclink.ko_merged.c:23398:(5094.f), synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20506
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6112].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 544
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19819:(5391.f)] and
	[synclink.ko_merged.c:22984:(5087.f), synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:23398:(5094.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6112].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 236
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19819:(5391.f)] and
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6103].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6112].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].icount.tx and
REP:[6006].icount.tx
	Cluster ID: 500
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23114:(5090.f), synclink.ko_merged.c:23138:(5090.f)] and
	[synclink.ko_merged.c:21526:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].icount.tx
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_active and
REP:[6006].tx_active
	Cluster ID: 503
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(5087.f)] and
	[synclink.ko_merged.c:21548:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_active and
REP:[6074].tx_active
	Cluster ID: 504
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(5087.f)] and
	[synclink.ko_merged.c:21106:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_active and
REP:[6088].tx_active
	Cluster ID: 506
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(5087.f)] and
	[synclink.ko_merged.c:19483:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_active and
REP:[6115].tx_active
	Cluster ID: 507
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23032:(5087.f)] and
	[synclink.ko_merged.c:19706:(5371.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_active
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_enabled and
REP:[6074].tx_enabled
	Cluster ID: 508
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23035:(5087.f)] and
	[synclink.ko_merged.c:21126:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_enabled and
REP:[6091].tx_enabled
	Cluster ID: 510
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23035:(5087.f)] and
	[synclink.ko_merged.c:18511:(5240.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6091].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].tx_enabled
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].x_char and
REP:[6109].x_char
	Cluster ID: 513
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23129:(5090.f)] and
	[synclink.ko_merged.c:19842:(5396.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19793
	lval 1: REP:[6107].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_head and
REP:[6053].xmit_head
	Cluster ID: 548
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19654:(5355.f)] and
	[synclink.ko_merged.c:19766:(5380.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6053].xmit_head
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_head and
REP:[6082].xmit_head
	Cluster ID: 547
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19654:(5355.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_head and
REP:[6088].xmit_head
	Cluster ID: 549
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19654:(5355.f)] and
	[synclink.ko_merged.c:19486:(5343.f), synclink.ko_merged.c:19487:(5343.f), synclink.ko_merged.c:19489:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6088].xmit_head
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6118].xmit_head
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_tail and
REP:[6053].xmit_tail
	Cluster ID: 518
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23105:(5090.f), synclink.ko_merged.c:23107:(5090.f), synclink.ko_merged.c:23109:(5090.f), synclink.ko_merged.c:23111:(5090.f), synclink.ko_merged.c:23132:(5090.f), synclink.ko_merged.c:23135:(5090.f)] and
	[synclink.ko_merged.c:19765:(5380.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = {REP:[6053].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_tail
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].count and
REP:[5962].count
	Cluster ID: 5
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23807:(5123.f)] and
	[synclink.ko_merged.c:23807:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].count and
REP:[5964].count
	Cluster ID: 6
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23807:(5123.f)] and
	[synclink.ko_merged.c:23789:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5964].count
	lval 2: REP:[5962].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].count and
REP:[6032].count
	Cluster ID: 7
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23807:(5123.f)] and
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].count
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].count and
REP:[6032].count
	Cluster ID: 262
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23807:(5123.f)] and
	[synclink.ko_merged.c:24049:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6032].count
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].count and
REP:[6061].count
	Cluster ID: 263
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23807:(5123.f)] and
	[synclink.ko_merged.c:23685:(5119.f), synclink.ko_merged.c:23686:(5119.f), synclink.ko_merged.c:23749:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].count
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].count and
REP:[6065].count
	Cluster ID: 264
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23807:(5123.f)] and
	[synclink.ko_merged.c:23529:(5118.f), synclink.ko_merged.c:23648:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].count
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5962].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 289
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23803:(5123.f), synclink.ko_merged.c:23805:(5123.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5962].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[5963]
	Cluster ID: 265
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[5972]
	Cluster ID: 266
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[5976]
	Cluster ID: 9
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23472:(5120.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6013]
	Cluster ID: 299
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24231:(5124.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6017]
	Cluster ID: 11
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23447:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6017]
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6017]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6017]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6022]
	Cluster ID: 12
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6022]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6022]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6022]
	Cluster ID: 267
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6025]
	Cluster ID: 13
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6025]
	Cluster ID: 268
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6026]
	Cluster ID: 14
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23163:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6033]
	Cluster ID: 15
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6033]
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6033]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6033]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6059]
	Cluster ID: 16
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6059]
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6059]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6059]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6068]
	Cluster ID: 17
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6068]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6068]
	Cluster ID: 270
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6086]
	Cluster ID: 8
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f), synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].params
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6045].params
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5963]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5963] and
REP:[6089]
	Cluster ID: 18
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6119]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].count and
REP:[5964].count
	Cluster ID: 19
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23789:(5123.f)] and
	[synclink.ko_merged.c:23789:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].count and
REP:[6032].count
	Cluster ID: 20
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23789:(5123.f)] and
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].count
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].count and
REP:[6032].count
	Cluster ID: 271
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23789:(5123.f)] and
	[synclink.ko_merged.c:24049:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6032].count
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].count and
REP:[6061].count
	Cluster ID: 272
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23789:(5123.f)] and
	[synclink.ko_merged.c:23685:(5119.f), synclink.ko_merged.c:23686:(5119.f), synclink.ko_merged.c:23749:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].count
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].count and
REP:[6065].count
	Cluster ID: 273
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23789:(5123.f)] and
	[synclink.ko_merged.c:23529:(5118.f), synclink.ko_merged.c:23648:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].count
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].rcc and
REP:[5964].rcc
	Cluster ID: 21
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23788:(5123.f)] and
	[synclink.ko_merged.c:23788:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].rcc and
REP:[5974].rcc
	Cluster ID: 274
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23788:(5123.f)] and
	[synclink.ko_merged.c:23002:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5974].rcc
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].rcc and
REP:[5974].rcc
	Cluster ID: 22
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23788:(5123.f)] and
	[synclink.ko_merged.c:23004:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5974].rcc
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].rcc and
REP:[6032].rcc
	Cluster ID: 23
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23788:(5123.f)] and
	[synclink.ko_merged.c:24005:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].rcc
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].rcc and
REP:[6061].rcc
	Cluster ID: 275
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23788:(5123.f)] and
	[synclink.ko_merged.c:23706:(5119.f), synclink.ko_merged.c:23707:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].rcc
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].rcc and
REP:[6065].rcc
	Cluster ID: 276
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23788:(5123.f)] and
	[synclink.ko_merged.c:23568:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].rcc
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].status and
REP:[5964].status
	Cluster ID: 24
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23787:(5123.f)] and
	[synclink.ko_merged.c:23787:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].status and
REP:[6032].status
	Cluster ID: 25
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23787:(5123.f)] and
	[synclink.ko_merged.c:24006:(5110.f), synclink.ko_merged.c:24015:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].status
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].status
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].status and
REP:[6032].status
	Cluster ID: 277
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23787:(5123.f)] and
	[synclink.ko_merged.c:24113:(5110.f), synclink.ko_merged.c:24119:(5110.f), synclink.ko_merged.c:24123:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].status
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].status
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].status and
REP:[6061].status
	Cluster ID: 278
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23787:(5123.f)] and
	[synclink.ko_merged.c:23682:(5119.f), synclink.ko_merged.c:23688:(5119.f), synclink.ko_merged.c:23748:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].status
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].status
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5964].status and
REP:[6065].status
	Cluster ID: 279
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23787:(5123.f)] and
	[synclink.ko_merged.c:23528:(5118.f), synclink.ko_merged.c:23545:(5118.f), synclink.ko_merged.c:23647:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].status
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[5964].status
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5972] and
REP:[6013]
	Cluster ID: 300
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5972]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5972]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5972]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5972]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5974].rcc and
REP:[5974].rcc
	Cluster ID: 280
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(5087.f)] and
	[synclink.ko_merged.c:23002:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5974].rcc and
REP:[5974].rcc
	Cluster ID: 26
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(5087.f)] and
	[synclink.ko_merged.c:23004:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5974].rcc and
REP:[6032].rcc
	Cluster ID: 27
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(5087.f)] and
	[synclink.ko_merged.c:24005:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].rcc
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5974].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5974].rcc and
REP:[6061].rcc
	Cluster ID: 281
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(5087.f)] and
	[synclink.ko_merged.c:23706:(5119.f), synclink.ko_merged.c:23707:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].rcc
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5974].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5974].rcc and
REP:[6065].rcc
	Cluster ID: 282
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23004:(5087.f)] and
	[synclink.ko_merged.c:23568:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].rcc
	made empty at: synclink.ko_merged.c:24662
	lval 2: REP:[5974].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[5963]
	Cluster ID: 283
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[5972]
	Cluster ID: 284
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[5976]
	Cluster ID: 28
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23472:(5120.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6017]
	Cluster ID: 30
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23447:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6017]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6022]
	Cluster ID: 31
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6022]
	Cluster ID: 285
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6025]
	Cluster ID: 32
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6025]
	Cluster ID: 286
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6026]
	Cluster ID: 33
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23163:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6033]
	Cluster ID: 34
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6033]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6059]
	Cluster ID: 35
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6059]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6068]
	Cluster ID: 36
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6068]
	Cluster ID: 288
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5976] and
REP:[6089]
	Cluster ID: 37
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23472:(5120.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[5976]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5998].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 290
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21791:(5128.f)] and
	[synclink.ko_merged.c:21787:(5128.f), synclink.ko_merged.c:21789:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[5998].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 38
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21791:(5128.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6006].next_device and
REP:[5992].next_device
	Cluster ID: 555
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21606:(5716.f)] and
	[synclink.ko_merged.c:22097:(5115.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

REP:[6013] and
REP:[5976]
	Cluster ID: 29
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)] and
	[synclink.ko_merged.c:23472:(5120.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6021]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6013]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6021]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6013]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013] and
REP:[6013]
	Cluster ID: 46
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_holding_buffers
	lval 2: REP:[6045].tx_holding_buffers
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6021]
	lval 2: REP:[6021]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6021]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013] and
REP:[6062]
	Cluster ID: 303
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)] and
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6021]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013] and
REP:[6119]
	Cluster ID: 10
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)] and
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f), synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6086]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[5967]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6021]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6013]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013].link and
REP:[6013].link
	Cluster ID: 55
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21714:(5129.f), synclink.ko_merged.c:21716:(5129.f), synclink.ko_merged.c:21727:(5129.f), synclink.ko_merged.c:21730:(5129.f)] and
	[synclink.ko_merged.c:21714:(5129.f), synclink.ko_merged.c:21716:(5129.f), synclink.ko_merged.c:21727:(5129.f), synclink.ko_merged.c:21730:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013].link and
REP:[6013].link
	Cluster ID: 305
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21714:(5129.f), synclink.ko_merged.c:21716:(5129.f), synclink.ko_merged.c:21727:(5129.f), synclink.ko_merged.c:21730:(5129.f)] and
	[synclink.ko_merged.c:21716:(5129.f), synclink.ko_merged.c:21730:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013].phys_entry and
REP:[5974].phys_entry
	Cluster ID: 306
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21711:(5129.f), synclink.ko_merged.c:21723:(5129.f)] and
	[synclink.ko_merged.c:23008:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5974].phys_entry
	lval 2: REP:[6013].phys_entry
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013].phys_entry and
REP:[6013].phys_entry
	Cluster ID: 56
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21711:(5129.f), synclink.ko_merged.c:21723:(5129.f)] and
	[synclink.ko_merged.c:21711:(5129.f), synclink.ko_merged.c:21723:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013].phys_entry and
REP:[6032].phys_entry
	Cluster ID: 307
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21711:(5129.f), synclink.ko_merged.c:21723:(5129.f)] and
	[synclink.ko_merged.c:24023:(5110.f), synclink.ko_merged.c:24051:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6032].phys_entry
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6013].phys_entry
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6013].phys_entry and
REP:[6038].phys_entry
	Cluster ID: 308
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21711:(5129.f), synclink.ko_merged.c:21723:(5129.f)] and
	[synclink.ko_merged.c:22926:(5085.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24663
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24663
	lval 1: REP:[6038].phys_entry
	lval 2: REP:[6013].phys_entry
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[5963]
	Cluster ID: 309
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[5972]
	Cluster ID: 310
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6017]
	Cluster ID: 57
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23447:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6021]
	Cluster ID: 47
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6013]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6022]
	Cluster ID: 58
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6022]
	Cluster ID: 311
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6025]
	Cluster ID: 59
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6025]
	Cluster ID: 312
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6026]
	Cluster ID: 60
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23163:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6033]
	Cluster ID: 61
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6033]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6059]
	Cluster ID: 62
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6059]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6068]
	Cluster ID: 63
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6068]
	Cluster ID: 314
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6017] and
REP:[6089]
	Cluster ID: 64
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23447:(5121.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6017]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].phys_addr and
REP:[6019].phys_addr
	Cluster ID: 65
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21773:(5127.f)] and
	[synclink.ko_merged.c:21773:(5127.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[5962].virt_addr
	Cluster ID: 315
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:23803:(5123.f), synclink.ko_merged.c:23805:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5962].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 316
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:21787:(5128.f), synclink.ko_merged.c:21789:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 39
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 291
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21768:(5127.f), synclink.ko_merged.c:21771:(5127.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6019].virt_addr
	Cluster ID: 66
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6019].virt_addr
	Cluster ID: 317
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:21768:(5127.f), synclink.ko_merged.c:21771:(5127.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6032].virt_addr
	Cluster ID: 318
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:24007:(5110.f), synclink.ko_merged.c:24017:(5110.f), synclink.ko_merged.c:24127:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6032].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6061].virt_addr
	Cluster ID: 319
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:23730:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6063].virt_addr
	Cluster ID: 320
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:23735:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6063].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6065].virt_addr
	Cluster ID: 321
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:23589:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6019].virt_addr and
REP:[6067].virt_addr
	Cluster ID: 322
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21767:(5127.f)] and
	[synclink.ko_merged.c:23617:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6067].virt_addr
	lval 2: REP:[6019].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[5963]
	Cluster ID: 323
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[5972]
	Cluster ID: 324
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6013]
	Cluster ID: 48
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6013]
	Cluster ID: 301
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6022]
	Cluster ID: 67
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6022]
	Cluster ID: 325
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6025]
	Cluster ID: 68
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6025]
	Cluster ID: 326
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6026]
	Cluster ID: 69
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23163:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6033]
	Cluster ID: 70
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6033]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6059]
	Cluster ID: 71
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6059]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6068]
	Cluster ID: 72
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6068]
	Cluster ID: 328
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6022] and
REP:[6089]
	Cluster ID: 73
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6022]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].count and
REP:[6032].count
	Cluster ID: 82
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)] and
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].count and
REP:[6032].count
	Cluster ID: 339
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)] and
	[synclink.ko_merged.c:24049:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].count and
REP:[6061].count
	Cluster ID: 340
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)] and
	[synclink.ko_merged.c:23685:(5119.f), synclink.ko_merged.c:23686:(5119.f), synclink.ko_merged.c:23749:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].count
	lval 2: REP:[6032].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].count and
REP:[6065].count
	Cluster ID: 341
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24004:(5110.f), synclink.ko_merged.c:24016:(5110.f), synclink.ko_merged.c:24019:(5110.f), synclink.ko_merged.c:24020:(5110.f)] and
	[synclink.ko_merged.c:23529:(5118.f), synclink.ko_merged.c:23648:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].count
	lval 2: REP:[6032].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].rcc and
REP:[5974].rcc
	Cluster ID: 342
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24005:(5110.f)] and
	[synclink.ko_merged.c:23002:(5087.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5974].rcc
	lval 2: REP:[6032].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].rcc and
REP:[6032].rcc
	Cluster ID: 83
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24005:(5110.f)] and
	[synclink.ko_merged.c:24005:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].rcc and
REP:[6061].rcc
	Cluster ID: 343
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24005:(5110.f)] and
	[synclink.ko_merged.c:23706:(5119.f), synclink.ko_merged.c:23707:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].rcc
	lval 2: REP:[6032].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].rcc and
REP:[6065].rcc
	Cluster ID: 344
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24005:(5110.f)] and
	[synclink.ko_merged.c:23568:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].rcc
	lval 2: REP:[6032].rcc
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].status and
REP:[6032].status
	Cluster ID: 84
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24006:(5110.f), synclink.ko_merged.c:24015:(5110.f)] and
	[synclink.ko_merged.c:24006:(5110.f), synclink.ko_merged.c:24015:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].status and
REP:[6032].status
	Cluster ID: 345
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24006:(5110.f), synclink.ko_merged.c:24015:(5110.f)] and
	[synclink.ko_merged.c:24113:(5110.f), synclink.ko_merged.c:24119:(5110.f), synclink.ko_merged.c:24123:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].status and
REP:[6061].status
	Cluster ID: 346
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24006:(5110.f), synclink.ko_merged.c:24015:(5110.f)] and
	[synclink.ko_merged.c:23682:(5119.f), synclink.ko_merged.c:23688:(5119.f), synclink.ko_merged.c:23748:(5119.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6061].status
	lval 2: REP:[6032].status
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].status and
REP:[6065].status
	Cluster ID: 347
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24006:(5110.f), synclink.ko_merged.c:24015:(5110.f)] and
	[synclink.ko_merged.c:23528:(5118.f), synclink.ko_merged.c:23545:(5118.f), synclink.ko_merged.c:23647:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6065].status
	lval 2: REP:[6032].status
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6032].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 292
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24007:(5110.f), synclink.ko_merged.c:24017:(5110.f), synclink.ko_merged.c:24127:(5110.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6032].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6032].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6032].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[5963]
	Cluster ID: 348
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[5972]
	Cluster ID: 349
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6013]
	Cluster ID: 51
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6022]
	Cluster ID: 350
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6025]
	Cluster ID: 351
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6033]
	Cluster ID: 85
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6059]
	Cluster ID: 86
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6059]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6068]
	Cluster ID: 87
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6068]
	Cluster ID: 353
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6033] and
REP:[6089]
	Cluster ID: 88
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24012:(5110.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6033]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].blocked_open and
REP:[6045].blocked_open
	Cluster ID: 89
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21235:(5631.f), synclink.ko_merged.c:21295:(5631.f)] and
	[synclink.ko_merged.c:21235:(5631.f), synclink.ko_merged.c:21295:(5631.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].blocked_open and
REP:[6076].blocked_open
	Cluster ID: 354
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21235:(5631.f), synclink.ko_merged.c:21295:(5631.f)] and
	[synclink.ko_merged.c:21025:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].blocked_open
	lval 2: REP:[6045].blocked_open
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].buffer_list and
REP:[6045].buffer_list
	Cluster ID: 90
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21694:(5129.f), synclink.ko_merged.c:21699:(5129.f), synclink.ko_merged.c:21747:(5130.f)] and
	[synclink.ko_merged.c:21694:(5129.f), synclink.ko_merged.c:21699:(5129.f), synclink.ko_merged.c:21747:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].buffer_list and
REP:[6045].buffer_list
	Cluster ID: 355
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21694:(5129.f), synclink.ko_merged.c:21699:(5129.f), synclink.ko_merged.c:21747:(5130.f)] and
	[synclink.ko_merged.c:21700:(5129.f), synclink.ko_merged.c:21703:(5129.f), synclink.ko_merged.c:21705:(5129.f), synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21742:(5130.f), synclink.ko_merged.c:21744:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].buffer_list and
REP:[6055].buffer_list
	Cluster ID: 448
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21700:(5129.f), synclink.ko_merged.c:21703:(5129.f), synclink.ko_merged.c:21705:(5129.f), synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21742:(5130.f), synclink.ko_merged.c:21744:(5130.f)] and
	[synclink.ko_merged.c:21747:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].buffer_list
	lval 2: REP:[6045].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].buffer_list
	lval 2: REP:[6045].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].buffer_list
	lval 2: REP:[6045].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].buffer_list
	lval 2: REP:[6045].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].buffer_list_phys and
REP:[6045].buffer_list_phys
	Cluster ID: 92
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21695:(5129.f), synclink.ko_merged.c:21703:(5129.f)] and
	[synclink.ko_merged.c:21695:(5129.f), synclink.ko_merged.c:21703:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].buffer_list_phys and
REP:[6045].buffer_list_phys
	Cluster ID: 357
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21695:(5129.f), synclink.ko_merged.c:21703:(5129.f)] and
	[synclink.ko_merged.c:21711:(5129.f), synclink.ko_merged.c:21714:(5129.f), synclink.ko_merged.c:21723:(5129.f), synclink.ko_merged.c:21727:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].count and
REP:[6045].count
	Cluster ID: 359
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21415:(5660.f)] and
	[synclink.ko_merged.c:21225:(5631.f), synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21281:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21297:(5631.f), synclink.ko_merged.c:21346:(5660.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21391:(5660.f), synclink.ko_merged.c:21414:(5660.f), synclink.ko_merged.c:21415:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21389
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:21389
	made empty at: synclink.ko_merged.c:21293
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].count and
REP:[6045].count
	Cluster ID: 95
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21415:(5660.f)] and
	[synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21415:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].count and
REP:[6055].count
	Cluster ID: 96
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21415:(5660.f)] and
	[synclink.ko_merged.c:21168:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6055].count
	made empty at: synclink.ko_merged.c:21293
	lval 2: REP:[6045].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].count and
REP:[6076].count
	Cluster ID: 360
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21415:(5660.f)] and
	[synclink.ko_merged.c:20986:(5595.f), synclink.ko_merged.c:20989:(5595.f), synclink.ko_merged.c:20997:(5595.f), synclink.ko_merged.c:20998:(5595.f), synclink.ko_merged.c:21002:(5595.f), synclink.ko_merged.c:21003:(5595.f), synclink.ko_merged.c:21036:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].count
	made empty at: synclink.ko_merged.c:21293
	lval 2: REP:[6045].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].count and
REP:[6076].count
	Cluster ID: 97
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21415:(5660.f)] and
	[synclink.ko_merged.c:20999:(5595.f), synclink.ko_merged.c:21002:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21293
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].count
	made empty at: synclink.ko_merged.c:21293
	lval 2: REP:[6045].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].current_rx_buffer and
REP:[6045].current_rx_buffer
	Cluster ID: 99
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23475:(5120.f)] and
	[synclink.ko_merged.c:23475:(5120.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].current_rx_buffer
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].current_rx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].current_rx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6082].current_rx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].current_tx_buffer and
REP:[6045].current_tx_buffer
	Cluster ID: 100
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23450:(5121.f)] and
	[synclink.ko_merged.c:23450:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].dma_requested and
REP:[6045].dma_requested
	Cluster ID: 103
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21996:(5113.f), synclink.ko_merged.c:22027:(5114.f)] and
	[synclink.ko_merged.c:21996:(5113.f), synclink.ko_merged.c:22027:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].dma_requested and
REP:[6055].dma_requested
	Cluster ID: 362
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21996:(5113.f), synclink.ko_merged.c:22027:(5114.f)] and
	[synclink.ko_merged.c:22024:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6076].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].get_tx_holding_index and
REP:[6045].get_tx_holding_index
	Cluster ID: 108
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23453:(5121.f), synclink.ko_merged.c:21864:(5134.f)] and
	[synclink.ko_merged.c:23453:(5121.f), synclink.ko_merged.c:21864:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].get_tx_holding_index and
REP:[6118].get_tx_holding_index
	Cluster ID: 110
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23453:(5121.f), synclink.ko_merged.c:21864:(5134.f)] and
	[synclink.ko_merged.c:21892:(5135.f), synclink.ko_merged.c:21893:(5135.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6118].get_tx_holding_index
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6045].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].init_error and
REP:[6045].init_error
	Cluster ID: 112
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24153:(5112.f), synclink.ko_merged.c:24160:(5112.f), synclink.ko_merged.c:24167:(5112.f)] and
	[synclink.ko_merged.c:24153:(5112.f), synclink.ko_merged.c:24160:(5112.f), synclink.ko_merged.c:24167:(5112.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].intermediate_rxbuffer and
REP:[6045].intermediate_rxbuffer
	Cluster ID: 113
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21813:(5131.f), synclink.ko_merged.c:21827:(5132.f)] and
	[synclink.ko_merged.c:21813:(5131.f), synclink.ko_merged.c:21827:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].intermediate_rxbuffer and
REP:[6045].intermediate_rxbuffer
	Cluster ID: 365
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21813:(5131.f), synclink.ko_merged.c:21827:(5132.f)] and
	[synclink.ko_merged.c:21814:(5131.f), synclink.ko_merged.c:21824:(5132.f), synclink.ko_merged.c:21825:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].intermediate_rxbuffer and
REP:[6055].intermediate_rxbuffer
	Cluster ID: 455
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21814:(5131.f), synclink.ko_merged.c:21824:(5132.f), synclink.ko_merged.c:21825:(5132.f)] and
	[synclink.ko_merged.c:21827:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].intermediate_rxbuffer
	lval 2: REP:[6045].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].intermediate_rxbuffer
	lval 2: REP:[6045].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].intermediate_rxbuffer
	lval 2: REP:[6045].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].intermediate_rxbuffer
	lval 2: REP:[6045].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].io_addr_requested and
REP:[6045].io_addr_requested
	Cluster ID: 115
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21941:(5113.f), synclink.ko_merged.c:22034:(5114.f)] and
	[synclink.ko_merged.c:21941:(5113.f), synclink.ko_merged.c:22034:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].io_addr_requested and
REP:[6055].io_addr_requested
	Cluster ID: 367
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21941:(5113.f), synclink.ko_merged.c:22034:(5114.f)] and
	[synclink.ko_merged.c:22032:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6076].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].irq_requested and
REP:[6045].irq_requested
	Cluster ID: 117
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21949:(5113.f), synclink.ko_merged.c:22022:(5114.f)] and
	[synclink.ko_merged.c:21949:(5113.f), synclink.ko_merged.c:22022:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].irq_requested and
REP:[6055].irq_requested
	Cluster ID: 369
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21949:(5113.f), synclink.ko_merged.c:22022:(5114.f)] and
	[synclink.ko_merged.c:22020:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6076].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].last_mem_alloc and
REP:[6045].last_mem_alloc
	Cluster ID: 119
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21631:(5125.f), synclink.ko_merged.c:21764:(5127.f), synclink.ko_merged.c:21696:(5129.f)] and
	[synclink.ko_merged.c:21631:(5125.f), synclink.ko_merged.c:21764:(5127.f), synclink.ko_merged.c:21696:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].last_mem_alloc and
REP:[6045].last_mem_alloc
	Cluster ID: 370
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21631:(5125.f), synclink.ko_merged.c:21764:(5127.f), synclink.ko_merged.c:21696:(5129.f)] and
	[synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21763:(5127.f), synclink.ko_merged.c:21764:(5127.f), synclink.ko_merged.c:21694:(5129.f), synclink.ko_merged.c:21695:(5129.f), synclink.ko_merged.c:21696:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].lcr_base and
REP:[6045].lcr_base
	Cluster ID: 120
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21982:(5113.f), synclink.ko_merged.c:22051:(5114.f)] and
	[synclink.ko_merged.c:21982:(5113.f), synclink.ko_merged.c:22051:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].lcr_base and
REP:[6045].lcr_base
	Cluster ID: 371
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21982:(5113.f), synclink.ko_merged.c:22051:(5114.f)] and
	[synclink.ko_merged.c:23152:(5095.f), synclink.ko_merged.c:23153:(5095.f), synclink.ko_merged.c:21983:(5113.f), synclink.ko_merged.c:22049:(5114.f), synclink.ko_merged.c:22050:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19233
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19233
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].lcr_base and
REP:[6055].lcr_base
	Cluster ID: 459
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23152:(5095.f), synclink.ko_merged.c:23153:(5095.f), synclink.ko_merged.c:21983:(5113.f), synclink.ko_merged.c:22049:(5114.f), synclink.ko_merged.c:22050:(5114.f)] and
	[synclink.ko_merged.c:22051:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19233
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].lcr_base
	made empty at: synclink.ko_merged.c:19233
	lval 2: REP:[6045].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].lcr_base
	made empty at: synclink.ko_merged.c:19233
	lval 2: REP:[6045].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].lcr_base
	made empty at: synclink.ko_merged.c:19233
	lval 2: REP:[6045].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].lcr_base
	made empty at: synclink.ko_merged.c:19233
	lval 2: REP:[6045].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].lcr_mem_requested and
REP:[6045].lcr_mem_requested
	Cluster ID: 122
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21967:(5113.f), synclink.ko_merged.c:22043:(5114.f)] and
	[synclink.ko_merged.c:21967:(5113.f), synclink.ko_merged.c:22043:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].lcr_mem_requested and
REP:[6055].lcr_mem_requested
	Cluster ID: 373
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21967:(5113.f), synclink.ko_merged.c:22043:(5114.f)] and
	[synclink.ko_merged.c:22040:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6076].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].memory_base and
REP:[6045].memory_base
	Cluster ID: 126
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21968:(5113.f), synclink.ko_merged.c:22047:(5114.f)] and
	[synclink.ko_merged.c:21968:(5113.f), synclink.ko_merged.c:22047:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].memory_base and
REP:[6045].memory_base
	Cluster ID: 377
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21968:(5113.f), synclink.ko_merged.c:22047:(5114.f)] and
	[synclink.ko_merged.c:24193:(5111.f), synclink.ko_merged.c:24208:(5111.f), synclink.ko_merged.c:24217:(5111.f), synclink.ko_merged.c:21970:(5113.f), synclink.ko_merged.c:22045:(5114.f), synclink.ko_merged.c:22046:(5114.f), synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21694:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].memory_base and
REP:[6055].memory_base
	Cluster ID: 462
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24193:(5111.f), synclink.ko_merged.c:24208:(5111.f), synclink.ko_merged.c:24217:(5111.f), synclink.ko_merged.c:21970:(5113.f), synclink.ko_merged.c:22045:(5114.f), synclink.ko_merged.c:22046:(5114.f), synclink.ko_merged.c:21762:(5127.f), synclink.ko_merged.c:21694:(5129.f)] and
	[synclink.ko_merged.c:22047:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].memory_base
	lval 2: REP:[6045].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].memory_base
	lval 2: REP:[6045].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].memory_base
	lval 2: REP:[6045].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].memory_base
	lval 2: REP:[6045].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].next_device and
REP:[5992].next_device
	Cluster ID: 556
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21337:(5660.f)] and
	[synclink.ko_merged.c:22097:(5115.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

REP:[6045].pending_bh and
REP:[6006].pending_bh
	Cluster ID: 390
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19227:(5320.f)] and
	[synclink.ko_merged.c:21548:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6006].pending_bh
	lval 2: REP:[6045].pending_bh
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].pending_bh and
REP:[6045].pending_bh
	Cluster ID: 133
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19227:(5320.f)] and
	[synclink.ko_merged.c:19227:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].put_tx_holding_index and
REP:[6045].put_tx_holding_index
	Cluster ID: 134
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23454:(5121.f), synclink.ko_merged.c:21865:(5134.f)] and
	[synclink.ko_merged.c:23454:(5121.f), synclink.ko_merged.c:21865:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].put_tx_holding_index and
REP:[6118].put_tx_holding_index
	Cluster ID: 136
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23454:(5121.f), synclink.ko_merged.c:21865:(5134.f)] and
	[synclink.ko_merged.c:21916:(5136.f), synclink.ko_merged.c:21917:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6118].put_tx_holding_index
	lval 2: REP:[6045].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].rx_buffer_count and
REP:[6045].rx_buffer_count
	Cluster ID: 139
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21638:(5125.f), synclink.ko_merged.c:21641:(5125.f), synclink.ko_merged.c:21643:(5125.f)] and
	[synclink.ko_merged.c:21638:(5125.f), synclink.ko_merged.c:21641:(5125.f), synclink.ko_merged.c:21643:(5125.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].rx_buffer_count and
REP:[6082].rx_buffer_count
	Cluster ID: 392
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21638:(5125.f), synclink.ko_merged.c:21641:(5125.f), synclink.ko_merged.c:21643:(5125.f)] and
	[synclink.ko_merged.c:23471:(5120.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[6045].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	lval 2: REP:[6045].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].rx_buffer_list and
REP:[6045].rx_buffer_list
	Cluster ID: 394
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21748:(5130.f)] and
	[synclink.ko_merged.c:21656:(5125.f), synclink.ko_merged.c:21803:(5126.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].rx_buffer_list and
REP:[6045].rx_buffer_list
	Cluster ID: 140
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21748:(5130.f)] and
	[synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21748:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].rx_buffer_list and
REP:[6055].rx_buffer_list
	Cluster ID: 464
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21656:(5125.f), synclink.ko_merged.c:21803:(5126.f)] and
	[synclink.ko_merged.c:21748:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].rx_buffer_list
	lval 2: REP:[6045].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].rx_buffer_list
	lval 2: REP:[6045].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].rx_buffer_list
	lval 2: REP:[6045].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].rx_buffer_list
	lval 2: REP:[6045].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].serial_signals and
REP:[6082].serial_signals
	Cluster ID: 40
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:19373:(5225.f), synclink.ko_merged.c:19375:(5225.f), synclink.ko_merged.c:21239:(5631.f)] and
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:19373:(5225.f), synclink.ko_merged.c:19375:(5225.f), synclink.ko_merged.c:20942:(5588.f), synclink.ko_merged.c:20950:(5588.f), synclink.ko_merged.c:20952:(5588.f), synclink.ko_merged.c:20956:(5588.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
LS for 2nd access:
L+ = {REP:[6095].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6095].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
	lval 2: REP:[6045].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].shared_mem_requested and
REP:[6045].shared_mem_requested
	Cluster ID: 146
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21958:(5113.f), synclink.ko_merged.c:22038:(5114.f)] and
	[synclink.ko_merged.c:21958:(5113.f), synclink.ko_merged.c:22038:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].shared_mem_requested and
REP:[6055].shared_mem_requested
	Cluster ID: 397
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21958:(5113.f), synclink.ko_merged.c:22038:(5114.f)] and
	[synclink.ko_merged.c:22036:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6076].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].start_tx_dma_buffer and
REP:[6045].start_tx_dma_buffer
	Cluster ID: 148
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23451:(5121.f)] and
	[synclink.ko_merged.c:23451:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tty and
REP:[6045].tty
	Cluster ID: 152
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21344:(5660.f), synclink.ko_merged.c:21412:(5660.f)] and
	[synclink.ko_merged.c:21344:(5660.f), synclink.ko_merged.c:21412:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tty and
REP:[6055].tty
	Cluster ID: 153
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21344:(5660.f), synclink.ko_merged.c:21412:(5660.f)] and
	[synclink.ko_merged.c:21170:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6055].tty
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tty and
REP:[6076].tty
	Cluster ID: 154
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21344:(5660.f), synclink.ko_merged.c:21412:(5660.f)] and
	[synclink.ko_merged.c:21024:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tty
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tty and
REP:[6082].tty
	Cluster ID: 403
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21344:(5660.f), synclink.ko_merged.c:21412:(5660.f)] and
	[synclink.ko_merged.c:19361:(5225.f), synclink.ko_merged.c:19413:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6103].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_count and
REP:[6045].tx_buffer_count
	Cluster ID: 157
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(5125.f), synclink.ko_merged.c:21640:(5125.f)] and
	[synclink.ko_merged.c:21637:(5125.f), synclink.ko_merged.c:21640:(5125.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_count and
REP:[6045].tx_buffer_count
	Cluster ID: 410
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(5125.f), synclink.ko_merged.c:21640:(5125.f)] and
	[synclink.ko_merged.c:23446:(5121.f), synclink.ko_merged.c:21638:(5125.f), synclink.ko_merged.c:21642:(5125.f), synclink.ko_merged.c:21643:(5125.f), synclink.ko_merged.c:21647:(5125.f), synclink.ko_merged.c:21662:(5125.f), synclink.ko_merged.c:21804:(5126.f), synclink.ko_merged.c:21722:(5129.f), synclink.ko_merged.c:21729:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_count and
REP:[6085].tx_buffer_count
	Cluster ID: 412
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(5125.f), synclink.ko_merged.c:21640:(5125.f)] and
	[synclink.ko_merged.c:23794:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_buffer_count
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6045].tx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_count and
REP:[6118].tx_buffer_count
	Cluster ID: 413
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21637:(5125.f), synclink.ko_merged.c:21640:(5125.f)] and
	[synclink.ko_merged.c:23463:(5122.f), synclink.ko_merged.c:23794:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[6118].tx_buffer_count
	lval 2: REP:[6045].tx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_list and
REP:[6045].tx_buffer_list
	Cluster ID: 414
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21708:(5129.f), synclink.ko_merged.c:21749:(5130.f)] and
	[synclink.ko_merged.c:21662:(5125.f), synclink.ko_merged.c:21804:(5126.f), synclink.ko_merged.c:21708:(5129.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_list and
REP:[6045].tx_buffer_list
	Cluster ID: 158
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21708:(5129.f), synclink.ko_merged.c:21749:(5130.f)] and
	[synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21708:(5129.f), synclink.ko_merged.c:21749:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_buffer_list and
REP:[6055].tx_buffer_list
	Cluster ID: 472
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21662:(5125.f), synclink.ko_merged.c:21804:(5126.f), synclink.ko_merged.c:21708:(5129.f)] and
	[synclink.ko_merged.c:21749:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_buffer_list
	lval 2: REP:[6045].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].tx_buffer_list
	lval 2: REP:[6045].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].tx_buffer_list
	lval 2: REP:[6045].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].tx_buffer_list
	lval 2: REP:[6045].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_dma_buffers_used and
REP:[6045].tx_dma_buffers_used
	Cluster ID: 160
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23452:(5121.f)] and
	[synclink.ko_merged.c:23452:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_dma_buffers_used and
REP:[6118].tx_dma_buffers_used
	Cluster ID: 417
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23452:(5121.f)] and
	[synclink.ko_merged.c:23463:(5122.f), synclink.ko_merged.c:23810:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[6118].tx_dma_buffers_used
	lval 2: REP:[6045].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_buffers[0].buffer and
REP:[6045].tx_holding_buffers[0].buffer
	Cluster ID: 164
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(5133.f), synclink.ko_merged.c:21860:(5134.f)] and
	[synclink.ko_merged.c:21842:(5133.f), synclink.ko_merged.c:21860:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_buffers[0].buffer and
REP:[6045].tx_holding_buffers[0].buffer
	Cluster ID: 421
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(5133.f), synclink.ko_merged.c:21860:(5134.f)] and
	[synclink.ko_merged.c:21844:(5133.f), synclink.ko_merged.c:21858:(5134.f), synclink.ko_merged.c:21859:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_buffers[0].buffer and
REP:[6055].tx_holding_buffers[0].buffer
	Cluster ID: 475
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21844:(5133.f), synclink.ko_merged.c:21858:(5134.f), synclink.ko_merged.c:21859:(5134.f)] and
	[synclink.ko_merged.c:21860:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	lval 2: REP:[6045].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].tx_holding_buffers[0].buffer
	lval 2: REP:[6045].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	lval 2: REP:[6045].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].tx_holding_buffers[0].buffer
	lval 2: REP:[6045].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_buffers[0].buffer and
REP:[6118].tx_holding_buffers[0].buffer
	Cluster ID: 423
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21842:(5133.f), synclink.ko_merged.c:21860:(5134.f)] and
	[synclink.ko_merged.c:21890:(5135.f), synclink.ko_merged.c:21914:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19603
	lval 1: REP:[6118].tx_holding_buffers[0].buffer
	lval 2: REP:[6045].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_count and
REP:[6045].tx_holding_count
	Cluster ID: 166
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23455:(5121.f), synclink.ko_merged.c:21866:(5134.f)] and
	[synclink.ko_merged.c:23455:(5121.f), synclink.ko_merged.c:21866:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_count and
REP:[6118].tx_holding_count
	Cluster ID: 424
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23455:(5121.f), synclink.ko_merged.c:21866:(5134.f)] and
	[synclink.ko_merged.c:21880:(5135.f), synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21909:(5136.f), synclink.ko_merged.c:21915:(5136.f), synclink.ko_merged.c:19596:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19603
	lval 1: REP:[6118].tx_holding_count
	lval 2: REP:[6045].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_holding_count and
REP:[6118].tx_holding_count
	Cluster ID: 168
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23455:(5121.f), synclink.ko_merged.c:21866:(5134.f)] and
	[synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21915:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19603
	lval 1: REP:[6118].tx_holding_count
	lval 2: REP:[6045].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_timer.base and
REP:[6045].tx_timer.base
	Cluster ID: 169
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10452:(1950.f)] and
	[synclink.ko_merged.c:10452:(1950.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_timer.data and
REP:[6045].tx_timer.data
	Cluster ID: 170
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19229:(5320.f)] and
	[synclink.ko_merged.c:19229:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_timer.function and
REP:[6045].tx_timer.function
	Cluster ID: 171
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19230:(5320.f)] and
	[synclink.ko_merged.c:19230:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_timer.lock and
REP:[6045].tx_timer.lock
	Cluster ID: 172
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10456:(1950.f)] and
	[synclink.ko_merged.c:10456:(1950.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].tx_timer.magic and
REP:[6045].tx_timer.magic
	Cluster ID: 173
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:10453:(1950.f)] and
	[synclink.ko_merged.c:10453:(1950.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_buf and
REP:[6045].xmit_buf
	Cluster ID: 425
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(5320.f)] and
	[synclink.ko_merged.c:19219:(5320.f), synclink.ko_merged.c:19221:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_buf and
REP:[6045].xmit_buf
	Cluster ID: 175
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(5320.f)] and
	[synclink.ko_merged.c:19220:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_buf and
REP:[6055].xmit_buf
	Cluster ID: 479
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19219:(5320.f), synclink.ko_merged.c:19221:(5320.f)] and
	[synclink.ko_merged.c:19273:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_buf and
REP:[6085].xmit_buf
	Cluster ID: 427
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(5320.f)] and
	[synclink.ko_merged.c:19522:(5350.f), synclink.ko_merged.c:19540:(5350.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19540
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19540
	lval 1: REP:[6085].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_buf and
REP:[6088].xmit_buf
	Cluster ID: 428
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(5320.f)] and
	[synclink.ko_merged.c:19475:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6088].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6045].xmit_buf and
REP:[6118].xmit_buf
	Cluster ID: 429
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19220:(5320.f)] and
	[synclink.ko_merged.c:19578:(5355.f), synclink.ko_merged.c:19616:(5355.f), synclink.ko_merged.c:19652:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19652
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19652
	lval 1: REP:[6118].xmit_buf
	lval 2: REP:[6045].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6048].low_latency and
REP:[6048].low_latency
	Cluster ID: 188
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21379:(5660.f), synclink.ko_merged.c:21381:(5660.f)] and
	[synclink.ko_merged.c:21379:(5660.f), synclink.ko_merged.c:21381:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].buffer_list and
REP:[6045].buffer_list
	Cluster ID: 356
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21742:(5130.f), synclink.ko_merged.c:21744:(5130.f)] and
	[synclink.ko_merged.c:21694:(5129.f), synclink.ko_merged.c:21699:(5129.f), synclink.ko_merged.c:21747:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6055].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6055].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].buffer_list and
REP:[6045].buffer_list
	Cluster ID: 91
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21747:(5130.f)] and
	[synclink.ko_merged.c:21694:(5129.f), synclink.ko_merged.c:21699:(5129.f), synclink.ko_merged.c:21747:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6055].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].buffer_list
	lval 2: REP:[6055].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].buffer_list and
REP:[6055].buffer_list
	Cluster ID: 449
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21747:(5130.f)] and
	[synclink.ko_merged.c:21742:(5130.f), synclink.ko_merged.c:21744:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].buffer_list
	lval 2: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].buffer_list and
REP:[6076].buffer_list
	Cluster ID: 194
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21747:(5130.f)] and
	[synclink.ko_merged.c:21747:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].count and
REP:[6045].count
	Cluster ID: 450
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21168:(5626.f)] and
	[synclink.ko_merged.c:21225:(5631.f), synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21281:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21297:(5631.f), synclink.ko_merged.c:21346:(5660.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21391:(5660.f), synclink.ko_merged.c:21414:(5660.f), synclink.ko_merged.c:21415:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21389
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:21389
	lval 1: REP:[6045].count
	lval 2: REP:[6055].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].count and
REP:[6055].count
	Cluster ID: 195
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21168:(5626.f)] and
	[synclink.ko_merged.c:21168:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].count and
REP:[6076].count
	Cluster ID: 451
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21168:(5626.f)] and
	[synclink.ko_merged.c:20986:(5595.f), synclink.ko_merged.c:20989:(5595.f), synclink.ko_merged.c:20997:(5595.f), synclink.ko_merged.c:20998:(5595.f), synclink.ko_merged.c:21002:(5595.f), synclink.ko_merged.c:21003:(5595.f), synclink.ko_merged.c:21036:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].count
	lval 2: REP:[6055].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].count and
REP:[6076].count
	Cluster ID: 196
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21168:(5626.f)] and
	[synclink.ko_merged.c:20999:(5595.f), synclink.ko_merged.c:21002:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].count
	lval 2: REP:[6055].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].dma_requested and
REP:[6045].dma_requested
	Cluster ID: 104
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22027:(5114.f)] and
	[synclink.ko_merged.c:21996:(5113.f), synclink.ko_merged.c:22027:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].dma_requested
	lval 2: REP:[6076].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].dma_requested
	lval 2: REP:[6055].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].dma_requested
	lval 2: REP:[6076].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].dma_requested
	lval 2: REP:[6055].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].dma_requested and
REP:[6076].dma_requested
	Cluster ID: 197
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22027:(5114.f)] and
	[synclink.ko_merged.c:22027:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].flags and
REP:[6055].flags
	Cluster ID: 453
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21169:(5626.f)] and
	[synclink.ko_merged.c:19262:(5326.f), synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21169:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].flags
	lval 2: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].flags and
REP:[6076].flags
	Cluster ID: 198
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21169:(5626.f)] and
	[synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21006:(5595.f), synclink.ko_merged.c:21032:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].get_tx_holding_index and
REP:[6045].get_tx_holding_index
	Cluster ID: 109
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21864:(5134.f)] and
	[synclink.ko_merged.c:23453:(5121.f), synclink.ko_merged.c:21864:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].get_tx_holding_index
	lval 2: REP:[6076].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].get_tx_holding_index
	lval 2: REP:[6055].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].get_tx_holding_index
	lval 2: REP:[6076].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].get_tx_holding_index
	lval 2: REP:[6055].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].get_tx_holding_index and
REP:[6076].get_tx_holding_index
	Cluster ID: 199
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21864:(5134.f)] and
	[synclink.ko_merged.c:21864:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].get_tx_holding_index and
REP:[6118].get_tx_holding_index
	Cluster ID: 200
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21864:(5134.f)] and
	[synclink.ko_merged.c:21892:(5135.f), synclink.ko_merged.c:21894:(5135.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6076].get_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].intermediate_rxbuffer and
REP:[6045].intermediate_rxbuffer
	Cluster ID: 366
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21824:(5132.f), synclink.ko_merged.c:21825:(5132.f)] and
	[synclink.ko_merged.c:21813:(5131.f), synclink.ko_merged.c:21827:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6055].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6055].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].intermediate_rxbuffer and
REP:[6045].intermediate_rxbuffer
	Cluster ID: 114
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21827:(5132.f)] and
	[synclink.ko_merged.c:21813:(5131.f), synclink.ko_merged.c:21827:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6055].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].intermediate_rxbuffer
	lval 2: REP:[6055].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].intermediate_rxbuffer and
REP:[6055].intermediate_rxbuffer
	Cluster ID: 456
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21827:(5132.f)] and
	[synclink.ko_merged.c:21824:(5132.f), synclink.ko_merged.c:21825:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].intermediate_rxbuffer
	lval 2: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].intermediate_rxbuffer and
REP:[6076].intermediate_rxbuffer
	Cluster ID: 201
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21827:(5132.f)] and
	[synclink.ko_merged.c:21827:(5132.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].intermediate_rxbuffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].io_addr_requested and
REP:[6045].io_addr_requested
	Cluster ID: 116
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22034:(5114.f)] and
	[synclink.ko_merged.c:21941:(5113.f), synclink.ko_merged.c:22034:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].io_addr_requested
	lval 2: REP:[6076].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].io_addr_requested
	lval 2: REP:[6055].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].io_addr_requested
	lval 2: REP:[6076].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].io_addr_requested
	lval 2: REP:[6055].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].io_addr_requested and
REP:[6076].io_addr_requested
	Cluster ID: 202
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22034:(5114.f)] and
	[synclink.ko_merged.c:22034:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].irq_requested and
REP:[6045].irq_requested
	Cluster ID: 118
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22022:(5114.f)] and
	[synclink.ko_merged.c:21949:(5113.f), synclink.ko_merged.c:22022:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].irq_requested
	lval 2: REP:[6076].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].irq_requested
	lval 2: REP:[6055].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].irq_requested
	lval 2: REP:[6076].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].irq_requested
	lval 2: REP:[6055].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].irq_requested and
REP:[6076].irq_requested
	Cluster ID: 203
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22022:(5114.f)] and
	[synclink.ko_merged.c:22022:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].lcr_base and
REP:[6045].lcr_base
	Cluster ID: 372
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22049:(5114.f), synclink.ko_merged.c:22050:(5114.f)] and
	[synclink.ko_merged.c:21982:(5113.f), synclink.ko_merged.c:22051:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6055].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6055].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].lcr_base and
REP:[6045].lcr_base
	Cluster ID: 121
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22051:(5114.f)] and
	[synclink.ko_merged.c:21982:(5113.f), synclink.ko_merged.c:22051:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6055].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].lcr_base
	lval 2: REP:[6055].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].lcr_base and
REP:[6055].lcr_base
	Cluster ID: 460
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22051:(5114.f)] and
	[synclink.ko_merged.c:22049:(5114.f), synclink.ko_merged.c:22050:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].lcr_base
	lval 2: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].lcr_base and
REP:[6076].lcr_base
	Cluster ID: 204
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22051:(5114.f)] and
	[synclink.ko_merged.c:22051:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].lcr_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].lcr_mem_requested and
REP:[6045].lcr_mem_requested
	Cluster ID: 123
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22043:(5114.f)] and
	[synclink.ko_merged.c:21967:(5113.f), synclink.ko_merged.c:22043:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].lcr_mem_requested
	lval 2: REP:[6076].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].lcr_mem_requested
	lval 2: REP:[6055].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].lcr_mem_requested
	lval 2: REP:[6076].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].lcr_mem_requested
	lval 2: REP:[6055].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].lcr_mem_requested and
REP:[6076].lcr_mem_requested
	Cluster ID: 205
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22043:(5114.f)] and
	[synclink.ko_merged.c:22043:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].memory_base and
REP:[6045].memory_base
	Cluster ID: 378
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22045:(5114.f), synclink.ko_merged.c:22046:(5114.f)] and
	[synclink.ko_merged.c:21968:(5113.f), synclink.ko_merged.c:22047:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6055].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6055].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].memory_base and
REP:[6045].memory_base
	Cluster ID: 127
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22047:(5114.f)] and
	[synclink.ko_merged.c:21968:(5113.f), synclink.ko_merged.c:22047:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6055].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].memory_base
	lval 2: REP:[6055].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].memory_base and
REP:[6055].memory_base
	Cluster ID: 463
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22047:(5114.f)] and
	[synclink.ko_merged.c:22045:(5114.f), synclink.ko_merged.c:22046:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].memory_base
	lval 2: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].memory_base and
REP:[6076].memory_base
	Cluster ID: 206
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22047:(5114.f)] and
	[synclink.ko_merged.c:22047:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].memory_base
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].put_tx_holding_index and
REP:[6045].put_tx_holding_index
	Cluster ID: 135
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21865:(5134.f)] and
	[synclink.ko_merged.c:23454:(5121.f), synclink.ko_merged.c:21865:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].put_tx_holding_index
	lval 2: REP:[6076].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].put_tx_holding_index
	lval 2: REP:[6055].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].put_tx_holding_index
	lval 2: REP:[6076].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].put_tx_holding_index
	lval 2: REP:[6055].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].put_tx_holding_index and
REP:[6076].put_tx_holding_index
	Cluster ID: 207
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21865:(5134.f)] and
	[synclink.ko_merged.c:21865:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].put_tx_holding_index and
REP:[6118].put_tx_holding_index
	Cluster ID: 208
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21865:(5134.f)] and
	[synclink.ko_merged.c:21916:(5136.f), synclink.ko_merged.c:21918:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6076].put_tx_holding_index
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_buffer_count and
REP:[6045].rx_buffer_count
	Cluster ID: 393
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21803:(5126.f)] and
	[synclink.ko_merged.c:21638:(5125.f), synclink.ko_merged.c:21641:(5125.f), synclink.ko_merged.c:21643:(5125.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].rx_buffer_count
	lval 2: REP:[6076].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].rx_buffer_count
	lval 2: REP:[6055].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].rx_buffer_count
	lval 2: REP:[6076].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].rx_buffer_count
	lval 2: REP:[6055].rx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_buffer_list and
REP:[6045].rx_buffer_list
	Cluster ID: 141
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21748:(5130.f)] and
	[synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21748:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6055].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6055].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_buffer_list and
REP:[6045].rx_buffer_list
	Cluster ID: 395
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21803:(5126.f)] and
	[synclink.ko_merged.c:21706:(5129.f), synclink.ko_merged.c:21748:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6055].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].rx_buffer_list
	lval 2: REP:[6055].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_buffer_list and
REP:[6055].rx_buffer_list
	Cluster ID: 465
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21748:(5130.f)] and
	[synclink.ko_merged.c:21803:(5126.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].rx_buffer_list
	lval 2: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].rx_buffer_list and
REP:[6076].rx_buffer_list
	Cluster ID: 209
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21748:(5130.f)] and
	[synclink.ko_merged.c:21748:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].rx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].shared_mem_requested and
REP:[6045].shared_mem_requested
	Cluster ID: 147
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22038:(5114.f)] and
	[synclink.ko_merged.c:21958:(5113.f), synclink.ko_merged.c:22038:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].shared_mem_requested
	lval 2: REP:[6076].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].shared_mem_requested
	lval 2: REP:[6055].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].shared_mem_requested
	lval 2: REP:[6076].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].shared_mem_requested
	lval 2: REP:[6055].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].shared_mem_requested and
REP:[6076].shared_mem_requested
	Cluster ID: 216
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22038:(5114.f)] and
	[synclink.ko_merged.c:22038:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tty and
REP:[6045].tty
	Cluster ID: 404
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19291:(5326.f), synclink.ko_merged.c:19302:(5326.f)] and
	[synclink.ko_merged.c:21344:(5660.f), synclink.ko_merged.c:21412:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19302
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tty
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6076].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tty
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6055].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tty
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6076].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tty
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6055].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tty and
REP:[6055].tty
	Cluster ID: 471
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19291:(5326.f), synclink.ko_merged.c:19302:(5326.f)] and
	[synclink.ko_merged.c:21170:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19302
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6076].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:19302
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6076].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	made empty at: synclink.ko_merged.c:19302
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tty and
REP:[6055].tty
	Cluster ID: 217
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21170:(5626.f)] and
	[synclink.ko_merged.c:21170:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tty and
REP:[6076].tty
	Cluster ID: 499
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19291:(5326.f), synclink.ko_merged.c:19302:(5326.f)] and
	[synclink.ko_merged.c:21024:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19302
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tty
	made empty at: synclink.ko_merged.c:19302
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].tty
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6055].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].tty
	made empty at: synclink.ko_merged.c:19302
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6076].tty
	made empty at: synclink.ko_merged.c:19302
	lval 2: REP:[6055].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tty and
REP:[6076].tty
	Cluster ID: 218
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21170:(5626.f)] and
	[synclink.ko_merged.c:21024:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tty
	lval 2: REP:[6055].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tty and
REP:[6082].tty
	Cluster ID: 470
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21170:(5626.f)] and
	[synclink.ko_merged.c:19361:(5225.f), synclink.ko_merged.c:19413:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6103].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_buffer_count and
REP:[6045].tx_buffer_count
	Cluster ID: 411
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21804:(5126.f)] and
	[synclink.ko_merged.c:21637:(5125.f), synclink.ko_merged.c:21640:(5125.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_buffer_count
	lval 2: REP:[6076].tx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tx_buffer_count
	lval 2: REP:[6055].tx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tx_buffer_count
	lval 2: REP:[6076].tx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tx_buffer_count
	lval 2: REP:[6055].tx_buffer_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_buffer_list and
REP:[6045].tx_buffer_list
	Cluster ID: 159
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21749:(5130.f)] and
	[synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21708:(5129.f), synclink.ko_merged.c:21749:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6055].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6055].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_buffer_list and
REP:[6045].tx_buffer_list
	Cluster ID: 415
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21804:(5126.f)] and
	[synclink.ko_merged.c:21707:(5129.f), synclink.ko_merged.c:21708:(5129.f), synclink.ko_merged.c:21749:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6055].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tx_buffer_list
	lval 2: REP:[6055].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_buffer_list and
REP:[6055].tx_buffer_list
	Cluster ID: 473
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21749:(5130.f)] and
	[synclink.ko_merged.c:21804:(5126.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_buffer_list
	lval 2: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_buffer_list and
REP:[6076].tx_buffer_list
	Cluster ID: 219
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21749:(5130.f)] and
	[synclink.ko_merged.c:21749:(5130.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_buffer_list and
REP:[6085].tx_buffer_list
	Cluster ID: 474
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21749:(5130.f)] and
	[synclink.ko_merged.c:23793:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_buffer_list
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_buffer_list
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_holding_buffers[0].buffer and
REP:[6045].tx_holding_buffers[0].buffer
	Cluster ID: 422
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21858:(5134.f), synclink.ko_merged.c:21859:(5134.f)] and
	[synclink.ko_merged.c:21842:(5133.f), synclink.ko_merged.c:21860:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6055].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6055].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_holding_buffers[0].buffer and
REP:[6045].tx_holding_buffers[0].buffer
	Cluster ID: 165
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21860:(5134.f)] and
	[synclink.ko_merged.c:21842:(5133.f), synclink.ko_merged.c:21860:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6055].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tx_holding_buffers[0].buffer
	lval 2: REP:[6055].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_holding_buffers[0].buffer and
REP:[6055].tx_holding_buffers[0].buffer
	Cluster ID: 476
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21860:(5134.f)] and
	[synclink.ko_merged.c:21858:(5134.f), synclink.ko_merged.c:21859:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	lval 2: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_holding_buffers[0].buffer and
REP:[6076].tx_holding_buffers[0].buffer
	Cluster ID: 220
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21860:(5134.f)] and
	[synclink.ko_merged.c:21860:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_holding_count and
REP:[6045].tx_holding_count
	Cluster ID: 167
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21866:(5134.f)] and
	[synclink.ko_merged.c:23455:(5121.f), synclink.ko_merged.c:21866:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].tx_holding_count
	lval 2: REP:[6076].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].tx_holding_count
	lval 2: REP:[6055].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].tx_holding_count
	lval 2: REP:[6076].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].tx_holding_count
	lval 2: REP:[6055].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].tx_holding_count and
REP:[6076].tx_holding_count
	Cluster ID: 221
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21866:(5134.f)] and
	[synclink.ko_merged.c:21866:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].xmit_buf and
REP:[6045].xmit_buf
	Cluster ID: 426
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19271:(5326.f), synclink.ko_merged.c:19272:(5326.f)] and
	[synclink.ko_merged.c:19220:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6055].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6055].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].xmit_buf and
REP:[6045].xmit_buf
	Cluster ID: 176
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19273:(5326.f)] and
	[synclink.ko_merged.c:19220:(5320.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6055].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].xmit_buf
	lval 2: REP:[6055].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].xmit_buf and
REP:[6055].xmit_buf
	Cluster ID: 480
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19273:(5326.f)] and
	[synclink.ko_merged.c:19271:(5326.f), synclink.ko_merged.c:19272:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].xmit_buf
	lval 2: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 2: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6055].xmit_buf and
REP:[6076].xmit_buf
	Cluster ID: 223
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19273:(5326.f)] and
	[synclink.ko_merged.c:19273:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6055].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6076].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6055].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[5963]
	Cluster ID: 484
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[5972]
	Cluster ID: 485
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6013]
	Cluster ID: 52
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6022]
	Cluster ID: 486
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6025]
	Cluster ID: 487
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6059]
	Cluster ID: 224
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6068]
	Cluster ID: 225
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6068]
	Cluster ID: 489
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6059] and
REP:[6089]
	Cluster ID: 226
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23493:(5117.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6059]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6061].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 293
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23730:(5119.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6061].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6061].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6061].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[5963]
	Cluster ID: 269
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:7372:(907.f), synclink.ko_merged.c:7375:(907.f), synclink.ko_merged.c:7378:(907.f), synclink.ko_merged.c:7381:(907.f), synclink.ko_merged.c:7382:(907.f), synclink.ko_merged.c:7385:(907.f), synclink.ko_merged.c:7386:(907.f), synclink.ko_merged.c:7389:(907.f), synclink.ko_merged.c:7390:(907.f), synclink.ko_merged.c:7393:(907.f), synclink.ko_merged.c:7394:(907.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[5976]
	Cluster ID: 287
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:23472:(5120.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19245
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	made empty at: synclink.ko_merged.c:19245
	lval 1: REP:[5976]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6017]
	Cluster ID: 313
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:23447:(5121.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6017]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6017]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6017]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6017]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6022]
	Cluster ID: 327
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:24196:(5111.f), synclink.ko_merged.c:24204:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6022]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6022]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6022]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6025]
	Cluster ID: 332
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:23155:(5095.f), synclink.ko_merged.c:23162:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6026]
	Cluster ID: 337
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:23163:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6026]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6033]
	Cluster ID: 352
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:24012:(5110.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6033]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6033]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6033]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6033]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6059]
	Cluster ID: 488
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:23493:(5117.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6059]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6059]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6059]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6059]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6068]
	Cluster ID: 494
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6068]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6068]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6068]
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6068]
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6062] and
REP:[6089]
	Cluster ID: 534
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:24260:(5107.f), synclink.ko_merged.c:24269:(5107.f), synclink.ko_merged.c:24270:(5107.f), synclink.ko_merged.c:24271:(5107.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6066]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6062]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6063].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 294
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23735:(5119.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6063].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6063].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6063].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6065].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 295
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23589:(5118.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6065].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6065].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6065].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6067].virt_addr and
REP:[5998].virt_addr
	Cluster ID: 296
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23617:(5118.f)] and
	[synclink.ko_merged.c:21791:(5128.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6067].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6067].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(3)
	lval 1: REP:[5998].virt_addr
	lval 2: REP:[6067].virt_addr
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[5963]
	Cluster ID: 490
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:24231:(5124.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19616
	lval 1: REP:[5963]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[5972]
	Cluster ID: 491
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:23106:(5090.f), synclink.ko_merged.c:23110:(5090.f), synclink.ko_merged.c:23133:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:24662
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:24662
	lval 1: REP:[5972]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6013]
	Cluster ID: 53
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6013]
	Cluster ID: 304
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23633:(5118.f)] and
	[synclink.ko_merged.c:7513:(939.f), synclink.ko_merged.c:7516:(939.f), synclink.ko_merged.c:7519:(939.f), synclink.ko_merged.c:7520:(939.f), synclink.ko_merged.c:7523:(939.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6021]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6013]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6021]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6013]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6022]
	Cluster ID: 492
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:24197:(5111.f), synclink.ko_merged.c:24211:(5111.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6022]
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6025]
	Cluster ID: 493
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:23158:(5095.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6025]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6068]
	Cluster ID: 227
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6068]
	Cluster ID: 495
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:23633:(5118.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6068] and
REP:[6089]
	Cluster ID: 228
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23628:(5118.f), synclink.ko_merged.c:23630:(5118.f)] and
	[synclink.ko_merged.c:19488:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6089]
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6068]
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6074].flags and
REP:[6055].flags
	Cluster ID: 454
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21079:(5226.f)] and
	[synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21169:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].flags
	lval 2: REP:[6074].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].flags
	lval 2: REP:[6074].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].flags
	lval 2: REP:[6074].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].flags
	lval 2: REP:[6074].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].count and
REP:[6045].count
	Cluster ID: 496
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20999:(5595.f), synclink.ko_merged.c:21002:(5595.f)] and
	[synclink.ko_merged.c:21225:(5631.f), synclink.ko_merged.c:21232:(5631.f), synclink.ko_merged.c:21281:(5631.f), synclink.ko_merged.c:21293:(5631.f), synclink.ko_merged.c:21297:(5631.f), synclink.ko_merged.c:21346:(5660.f), synclink.ko_merged.c:21389:(5660.f), synclink.ko_merged.c:21391:(5660.f), synclink.ko_merged.c:21414:(5660.f), synclink.ko_merged.c:21415:(5660.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21389
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:21389
	lval 1: REP:[6045].count
	lval 2: REP:[6076].count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].count and
REP:[6076].count
	Cluster ID: 497
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20999:(5595.f), synclink.ko_merged.c:21002:(5595.f)] and
	[synclink.ko_merged.c:20986:(5595.f), synclink.ko_merged.c:20989:(5595.f), synclink.ko_merged.c:20997:(5595.f), synclink.ko_merged.c:20998:(5595.f), synclink.ko_merged.c:21002:(5595.f), synclink.ko_merged.c:21003:(5595.f), synclink.ko_merged.c:21036:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].count and
REP:[6076].count
	Cluster ID: 229
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20999:(5595.f), synclink.ko_merged.c:21002:(5595.f)] and
	[synclink.ko_merged.c:20999:(5595.f), synclink.ko_merged.c:21002:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].dma_requested and
REP:[6055].dma_requested
	Cluster ID: 452
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22027:(5114.f)] and
	[synclink.ko_merged.c:22024:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6055].dma_requested
	lval 2: REP:[6076].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6055].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].dma_requested
	lval 2: REP:[6045].dma_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].flags and
REP:[6082].flags
	Cluster ID: 107
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21006:(5595.f), synclink.ko_merged.c:21032:(5595.f)] and
	[synclink.ko_merged.c:19420:(5225.f), synclink.ko_merged.c:19422:(5225.f), synclink.ko_merged.c:19425:(5225.f), synclink.ko_merged.c:19427:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6055].flags
	lval 2: REP:[6103].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6055].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].flags
	lval 2: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].flags
	lval 2: REP:[6055].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].io_addr_requested and
REP:[6055].io_addr_requested
	Cluster ID: 457
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22034:(5114.f)] and
	[synclink.ko_merged.c:22032:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6055].io_addr_requested
	lval 2: REP:[6076].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6055].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].io_addr_requested
	lval 2: REP:[6045].io_addr_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].irq_requested and
REP:[6055].irq_requested
	Cluster ID: 458
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22022:(5114.f)] and
	[synclink.ko_merged.c:22020:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6055].irq_requested
	lval 2: REP:[6076].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6055].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].irq_requested
	lval 2: REP:[6045].irq_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].lcr_mem_requested and
REP:[6055].lcr_mem_requested
	Cluster ID: 461
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22043:(5114.f)] and
	[synclink.ko_merged.c:22040:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6055].lcr_mem_requested
	lval 2: REP:[6076].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6055].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].lcr_mem_requested
	lval 2: REP:[6045].lcr_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].shared_mem_requested and
REP:[6055].shared_mem_requested
	Cluster ID: 469
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:22038:(5114.f)] and
	[synclink.ko_merged.c:22036:(5114.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6055].shared_mem_requested
	lval 2: REP:[6076].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6055].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].shared_mem_requested
	lval 2: REP:[6045].shared_mem_requested
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].tty and
REP:[6076].tty
	Cluster ID: 230
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21024:(5595.f)] and
	[synclink.ko_merged.c:21024:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6076].tty and
REP:[6082].tty
	Cluster ID: 498
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21024:(5595.f)] and
	[synclink.ko_merged.c:19361:(5225.f), synclink.ko_merged.c:19413:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 2: REP:[6103].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 2: REP:[6045].tty
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].flags and
REP:[6074].flags
	Cluster ID: 364
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19420:(5225.f), synclink.ko_merged.c:19422:(5225.f), synclink.ko_merged.c:19425:(5225.f), synclink.ko_merged.c:19427:(5225.f)] and
	[synclink.ko_merged.c:21079:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6103].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].flags and
REP:[6103].flags
	Cluster ID: 106
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19420:(5225.f), synclink.ko_merged.c:19422:(5225.f), synclink.ko_merged.c:19425:(5225.f), synclink.ko_merged.c:19427:(5225.f)] and
	[synclink.ko_merged.c:19420:(5225.f), synclink.ko_merged.c:19422:(5225.f), synclink.ko_merged.c:19425:(5225.f), synclink.ko_merged.c:19427:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].flags
	lval 2: REP:[6082].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].flags
	lval 2: REP:[6045].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].ignore_status_mask and
REP:[6103].ignore_status_mask
	Cluster ID: 111
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19441:(5225.f), synclink.ko_merged.c:19445:(5225.f), synclink.ko_merged.c:19448:(5225.f)] and
	[synclink.ko_merged.c:19441:(5225.f), synclink.ko_merged.c:19445:(5225.f), synclink.ko_merged.c:19448:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].ignore_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].ignore_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].ignore_status_mask
	lval 2: REP:[6082].ignore_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].ignore_status_mask
	lval 2: REP:[6045].ignore_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.data_bits and
REP:[6082].params.data_bits
	Cluster ID: 379
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19379:(5225.f), synclink.ko_merged.c:19382:(5225.f), synclink.ko_merged.c:19385:(5225.f), synclink.ko_merged.c:19388:(5225.f), synclink.ko_merged.c:19391:(5225.f)] and
	[synclink.ko_merged.c:23198:(5098.f), synclink.ko_merged.c:23213:(5098.f), synclink.ko_merged.c:19410:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.data_bits
	lval 2: REP:[6103].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.data_bits
	lval 2: REP:[6045].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.data_bits and
REP:[6103].params.data_bits
	Cluster ID: 128
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19379:(5225.f), synclink.ko_merged.c:19382:(5225.f), synclink.ko_merged.c:19385:(5225.f), synclink.ko_merged.c:19388:(5225.f), synclink.ko_merged.c:19391:(5225.f)] and
	[synclink.ko_merged.c:19379:(5225.f), synclink.ko_merged.c:19382:(5225.f), synclink.ko_merged.c:19385:(5225.f), synclink.ko_merged.c:19388:(5225.f), synclink.ko_merged.c:19391:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.data_bits
	lval 2: REP:[6082].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.data_bits
	lval 2: REP:[6045].params.data_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.data_rate and
REP:[6074].params.data_rate
	Cluster ID: 381
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19413:(5225.f)] and
	[synclink.ko_merged.c:21083:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6103].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.data_rate and
REP:[6082].params.data_rate
	Cluster ID: 380
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19413:(5225.f)] and
	[synclink.ko_merged.c:23230:(5098.f), synclink.ko_merged.c:19412:(5225.f), synclink.ko_merged.c:19415:(5225.f), synclink.ko_merged.c:19416:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.data_rate
	lval 2: REP:[6103].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.data_rate
	lval 2: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.data_rate and
REP:[6103].params.data_rate
	Cluster ID: 129
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19413:(5225.f)] and
	[synclink.ko_merged.c:19413:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.data_rate
	lval 2: REP:[6082].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.data_rate
	lval 2: REP:[6045].params.data_rate
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.parity and
REP:[6082].params.parity
	Cluster ID: 388
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19399:(5225.f), synclink.ko_merged.c:19402:(5225.f), synclink.ko_merged.c:19404:(5225.f), synclink.ko_merged.c:19407:(5225.f)] and
	[synclink.ko_merged.c:23201:(5098.f), synclink.ko_merged.c:23203:(5098.f), synclink.ko_merged.c:23216:(5098.f), synclink.ko_merged.c:23218:(5098.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.parity
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.parity
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6045].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.parity and
REP:[6103].params.parity
	Cluster ID: 131
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19399:(5225.f), synclink.ko_merged.c:19402:(5225.f), synclink.ko_merged.c:19404:(5225.f), synclink.ko_merged.c:19407:(5225.f)] and
	[synclink.ko_merged.c:19399:(5225.f), synclink.ko_merged.c:19402:(5225.f), synclink.ko_merged.c:19404:(5225.f), synclink.ko_merged.c:19407:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.parity
	lval 2: REP:[6082].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.parity
	lval 2: REP:[6045].params.parity
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.stop_bits and
REP:[6082].params.stop_bits
	Cluster ID: 389
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19395:(5225.f), synclink.ko_merged.c:19397:(5225.f)] and
	[synclink.ko_merged.c:23193:(5098.f), synclink.ko_merged.c:19410:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.stop_bits
	lval 2: REP:[6103].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.stop_bits
	lval 2: REP:[6045].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].params.stop_bits and
REP:[6103].params.stop_bits
	Cluster ID: 132
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19395:(5225.f), synclink.ko_merged.c:19397:(5225.f)] and
	[synclink.ko_merged.c:19395:(5225.f), synclink.ko_merged.c:19397:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].params.stop_bits
	lval 2: REP:[6082].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].params.stop_bits
	lval 2: REP:[6045].params.stop_bits
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].read_status_mask and
REP:[6082].read_status_mask
	Cluster ID: 391
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19429:(5225.f), synclink.ko_merged.c:19431:(5225.f), synclink.ko_merged.c:19434:(5225.f), synclink.ko_merged.c:19437:(5225.f)] and
	[synclink.ko_merged.c:19431:(5225.f), synclink.ko_merged.c:19434:(5225.f), synclink.ko_merged.c:19437:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].read_status_mask
	lval 2: REP:[6103].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].read_status_mask
	lval 2: REP:[6045].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].read_status_mask and
REP:[6103].read_status_mask
	Cluster ID: 137
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19429:(5225.f), synclink.ko_merged.c:19431:(5225.f), synclink.ko_merged.c:19434:(5225.f), synclink.ko_merged.c:19437:(5225.f)] and
	[synclink.ko_merged.c:19429:(5225.f), synclink.ko_merged.c:19431:(5225.f), synclink.ko_merged.c:19434:(5225.f), synclink.ko_merged.c:19437:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].read_status_mask
	lval 2: REP:[6082].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].read_status_mask
	lval 2: REP:[6045].read_status_mask
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].timeout and
REP:[6074].timeout
	Cluster ID: 401
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19416:(5225.f), synclink.ko_merged.c:19418:(5225.f)] and
	[synclink.ko_merged.c:21084:(5226.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6103].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].timeout and
REP:[6076].timeout
	Cluster ID: 402
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19416:(5225.f), synclink.ko_merged.c:19418:(5225.f)] and
	[synclink.ko_merged.c:21016:(5595.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6103].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].timeout and
REP:[6082].timeout
	Cluster ID: 400
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19416:(5225.f), synclink.ko_merged.c:19418:(5225.f)] and
	[synclink.ko_merged.c:19418:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].timeout
	lval 2: REP:[6103].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].timeout
	lval 2: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6082].timeout and
REP:[6103].timeout
	Cluster ID: 151
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19416:(5225.f), synclink.ko_merged.c:19418:(5225.f)] and
	[synclink.ko_merged.c:19416:(5225.f), synclink.ko_merged.c:19418:(5225.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 2: REP:[6082].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].timeout
	lval 2: REP:[6082].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].timeout
	lval 2: REP:[6045].timeout
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6085].xmit_buf and
REP:[6055].xmit_buf
	Cluster ID: 481
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19522:(5350.f), synclink.ko_merged.c:19540:(5350.f)] and
	[synclink.ko_merged.c:19273:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19540
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].xmit_buf
	made empty at: synclink.ko_merged.c:19540
	lval 2: REP:[6085].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].xmit_buf
	made empty at: synclink.ko_merged.c:19540
	lval 2: REP:[6085].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].xmit_buf
	made empty at: synclink.ko_merged.c:19540
	lval 2: REP:[6085].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].xmit_buf
	made empty at: synclink.ko_merged.c:19540
	lval 2: REP:[6085].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6088].xmit_buf and
REP:[6055].xmit_buf
	Cluster ID: 482
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19475:(5343.f)] and
	[synclink.ko_merged.c:19273:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].xmit_buf
	lval 2: REP:[6088].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].xmit_buf
	lval 2: REP:[6088].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].xmit_buf
	lval 2: REP:[6088].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].xmit_buf
	lval 2: REP:[6088].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6006].serial_signals
	Cluster ID: 43
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:21476:(5671.f), synclink.ko_merged.c:21479:(5671.f), synclink.ko_merged.c:21482:(5671.f), synclink.ko_merged.c:21485:(5671.f), synclink.ko_merged.c:21488:(5671.f), synclink.ko_merged.c:21491:(5671.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:21476
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6095].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6095].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6082].serial_signals
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	made empty at: synclink.ko_merged.c:19452
	lval 1: REP:[6045].serial_signals
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6006].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6006].serial_signals
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6055].serial_signals
	Cluster ID: 213
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:19292:(5326.f), synclink.ko_merged.c:19296:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6076].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6055].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6093].serial_signals
	Cluster ID: 251
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6109].serial_signals
	Cluster ID: 252
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:19850:(5396.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6109].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6112].serial_signals
	Cluster ID: 253
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:19819:(5391.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6112].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6112].serial_signals
	Cluster ID: 536
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:23398:(5094.f), synclink.ko_merged.c:19819:(5391.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6112].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6109].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6109].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:20506
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6076].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6076].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6055].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6055].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 537
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:22984:(5087.f), synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f), synclink.ko_merged.c:23398:(5094.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6093].serial_signals and
REP:[6118].serial_signals
	Cluster ID: 234
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:20494:(5152.f), synclink.ko_merged.c:20497:(5152.f), synclink.ko_merged.c:20500:(5152.f), synclink.ko_merged.c:20503:(5152.f)] and
	[synclink.ko_merged.c:22985:(5087.f), synclink.ko_merged.c:23376:(5093.f), synclink.ko_merged.c:23379:(5093.f), synclink.ko_merged.c:23382:(5093.f), synclink.ko_merged.c:23385:(5093.f), synclink.ko_merged.c:23388:(5093.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19452
	lval 2: REP:[6103].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].serial_signals
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6093].serial_signals
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6103].flags and
REP:[6055].flags
	Cluster ID: 363
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19420:(5225.f), synclink.ko_merged.c:19422:(5225.f), synclink.ko_merged.c:19425:(5225.f), synclink.ko_merged.c:19427:(5225.f)] and
	[synclink.ko_merged.c:19262:(5326.f), synclink.ko_merged.c:19305:(5326.f), synclink.ko_merged.c:21169:(5626.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6082].flags
	lval 2: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
	lval 1: REP:[6082].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	lval 1: REP:[6045].flags
	lval 2: REP:[6076].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6045].flags
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].x_char and
REP:[6109].x_char
	Cluster ID: 542
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19843:(5396.f)] and
	[synclink.ko_merged.c:19842:(5396.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].x_char and
REP:[6109].x_char
	Cluster ID: 255
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19843:(5396.f)] and
	[synclink.ko_merged.c:19843:(5396.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].x_char and
REP:[6118].x_char
	Cluster ID: 541
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19843:(5396.f)] and
	[synclink.ko_merged.c:23085:(5090.f), synclink.ko_merged.c:23103:(5090.f), synclink.ko_merged.c:23127:(5090.f), synclink.ko_merged.c:23128:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6107].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 2nd access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6103].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 2nd access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6079].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6109].x_char and
REP:[6118].x_char
	Cluster ID: 241
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19843:(5396.f)] and
	[synclink.ko_merged.c:23129:(5090.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
	made empty at: synclink.ko_merged.c:19793
	lval 1: REP:[6107].x_char
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6109].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].x_char
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6109].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].x_char
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6109].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].x_char
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6109].x_char
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6115].xmit_cnt and
REP:[6045].xmit_cnt
	Cluster ID: 432
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19693:(5371.f)] and
	[synclink.ko_merged.c:19320:(5334.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6115].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6115].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6082].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6082].xmit_cnt
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6115].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6045].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6045].xmit_cnt
LS for 2nd access:
L+ = empty;
	lval 2: REP:[6115].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].cmr_value and
REP:[6118].cmr_value
	Cluster ID: 246
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23783:(5123.f)] and
	[synclink.ko_merged.c:23783:(5123.f), synclink.ko_merged.c:23787:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].cmr_value
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].current_tx_buffer and
REP:[6085].current_tx_buffer
	Cluster ID: 523
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23812:(5123.f)] and
	[synclink.ko_merged.c:23785:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].current_tx_buffer
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].current_tx_buffer
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].current_tx_buffer and
REP:[6118].current_tx_buffer
	Cluster ID: 247
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23812:(5123.f)] and
	[synclink.ko_merged.c:23812:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].current_tx_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].put_tx_holding_index and
REP:[6118].put_tx_holding_index
	Cluster ID: 256
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21916:(5136.f), synclink.ko_merged.c:21917:(5136.f)] and
	[synclink.ko_merged.c:21916:(5136.f), synclink.ko_merged.c:21918:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].start_tx_dma_buffer and
REP:[6118].start_tx_dma_buffer
	Cluster ID: 248
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23786:(5123.f)] and
	[synclink.ko_merged.c:23786:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].start_tx_dma_buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_dma_buffers_used and
REP:[6085].tx_dma_buffers_used
	Cluster ID: 524
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23463:(5122.f), synclink.ko_merged.c:23810:(5123.f)] and
	[synclink.ko_merged.c:23810:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_dma_buffers_used
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_dma_buffers_used
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	lval 2: REP:[6118].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_dma_buffers_used and
REP:[6118].tx_dma_buffers_used
	Cluster ID: 249
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23810:(5123.f)] and
	[synclink.ko_merged.c:23810:(5123.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19616
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 2nd access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 2: REP:[6085].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].tx_dma_buffers_used
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_buffers[0].buffer and
REP:[6055].tx_holding_buffers[0].buffer
	Cluster ID: 477
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21890:(5135.f), synclink.ko_merged.c:21914:(5136.f)] and
	[synclink.ko_merged.c:21860:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].tx_holding_buffers[0].buffer
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].tx_holding_buffers[0].buffer
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].tx_holding_buffers[0].buffer
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_buffers[0].buffer
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_buffers[0].buffer_size and
REP:[6118].tx_holding_buffers[0].buffer_size
	Cluster ID: 545
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21913:(5136.f)] and
	[synclink.ko_merged.c:21884:(5135.f), synclink.ko_merged.c:21885:(5135.f), synclink.ko_merged.c:21889:(5135.f), synclink.ko_merged.c:21890:(5135.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6118].irq_spinlock#g} (1)
	(rep. lock)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_buffers[0].buffer_size and
REP:[6118].tx_holding_buffers[0].buffer_size
	Cluster ID: 257
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21913:(5136.f)] and
	[synclink.ko_merged.c:21913:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_count and
REP:[6055].tx_holding_count
	Cluster ID: 478
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21880:(5135.f), synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21909:(5136.f), synclink.ko_merged.c:21915:(5136.f), synclink.ko_merged.c:19596:(5355.f)] and
	[synclink.ko_merged.c:21866:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_count and
REP:[6055].tx_holding_count
	Cluster ID: 222
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21915:(5136.f)] and
	[synclink.ko_merged.c:21866:(5134.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].tx_holding_count
	made empty at: synclink.ko_merged.c:19603
	lval 2: REP:[6118].tx_holding_count
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_count and
REP:[6118].tx_holding_count
	Cluster ID: 546
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21915:(5136.f)] and
	[synclink.ko_merged.c:21880:(5135.f), synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21909:(5136.f), synclink.ko_merged.c:21915:(5136.f), synclink.ko_merged.c:19596:(5355.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].tx_holding_count and
REP:[6118].tx_holding_count
	Cluster ID: 258
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21915:(5136.f)] and
	[synclink.ko_merged.c:21891:(5135.f), synclink.ko_merged.c:21915:(5136.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
LS for 2nd access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19603
	Th. 1 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_buf and
REP:[6055].xmit_buf
	Cluster ID: 483
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:19578:(5355.f), synclink.ko_merged.c:19616:(5355.f), synclink.ko_merged.c:19652:(5355.f)] and
	[synclink.ko_merged.c:19273:(5326.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19652
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f

Different possible paths & LS (first 4):

(0)
	lval 1: REP:[6076].xmit_buf
	made empty at: synclink.ko_merged.c:19652
	lval 2: REP:[6118].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(1)
	lval 1: REP:[6055].xmit_buf
	made empty at: synclink.ko_merged.c:19652
	lval 2: REP:[6118].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24694 784849 w/ func: f
(2)
	lval 1: REP:[6076].xmit_buf
	made empty at: synclink.ko_merged.c:19652
	lval 2: REP:[6118].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
	lval 1: REP:[6055].xmit_buf
	made empty at: synclink.ko_merged.c:19652
	lval 2: REP:[6118].xmit_buf
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_cnt and
REP:[6088].xmit_cnt
	Cluster ID: 515
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:21889:(5135.f), synclink.ko_merged.c:19627:(5355.f), synclink.ko_merged.c:19655:(5355.f)] and
	[synclink.ko_merged.c:19485:(5343.f), synclink.ko_merged.c:19490:(5343.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
LS for 2nd access:
L+ = {REP:[6088].irq_spinlock#g} (1)
	(rep. lock)
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
****
Possible race between access to:

REP:[6118].xmit_cnt and
REP:[6115].xmit_cnt
	Cluster ID: 516
	Escapes? true / true 
	Accessed at locs:
	[synclink.ko_merged.c:23113:(5090.f), synclink.ko_merged.c:23136:(5090.f), synclink.ko_merged.c:21889:(5135.f), synclink.ko_merged.c:19627:(5355.f), synclink.ko_merged.c:19655:(5355.f)] and
	[synclink.ko_merged.c:19693:(5371.f)]

	Confidence: used PTA nodes lblSet(8, 8)

LS for 1st access:
L+ = empty;
	made empty at: synclink.ko_merged.c:19627
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {REP:[6107].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6107].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(1)
LS for 1st access:
L+ = {REP:[6103].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6103].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(2)
LS for 1st access:
L+ = {REP:[6085].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6085].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
(3)
LS for 1st access:
L+ = {REP:[6079].irq_spinlock#g} (1)
	(rep. lock)
	lval 1: REP:[6079].xmit_cnt
	Th. 1 spawned: synclink.ko_merged.c:24695 784880 w/ func: f
	Th. 2 spawned: synclink.ko_merged.c:24695 784880 w/ func: f


$$$$$$
Total Warnings: 557


Printing Alias assumptions used by warnings
-----
nc	4	REP:[5957].flags#g/REP:[5957].flags#g	0	0
nc	297	REP:[6006].serial_signals#g/REP:[6112].serial_signals#g	8	8
nc	298	REP:[6006].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	42	REP:[6006].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	329	REP:[6025]#g/REP:[5963]#g	8	8
nc	330	REP:[6025]#g/REP:[5972]#g	8	8
nc	49	REP:[6025]#g/REP:[6013]#g	8	8
nc	302	REP:[6025]#g/REP:[6013]#g	8	8
nc	331	REP:[6025]#g/REP:[6022]#g	8	8
nc	74	REP:[6025]#g/REP:[6033]#g	8	8
nc	75	REP:[6025]#g/REP:[6059]#g	8	8
nc	76	REP:[6025]#g/REP:[6068]#g	8	8
nc	333	REP:[6025]#g/REP:[6068]#g	8	8
nc	77	REP:[6025]#g/REP:[6089]#g	8	8
nc	334	REP:[6026]#g/REP:[5963]#g	8	8
nc	335	REP:[6026]#g/REP:[5972]#g	8	8
nc	50	REP:[6026]#g/REP:[6013]#g	8	8
nc	336	REP:[6026]#g/REP:[6022]#g	8	8
nc	78	REP:[6026]#g/REP:[6033]#g	8	8
nc	79	REP:[6026]#g/REP:[6059]#g	8	8
nc	80	REP:[6026]#g/REP:[6068]#g	8	8
nc	338	REP:[6026]#g/REP:[6068]#g	8	8
nc	81	REP:[6026]#g/REP:[6089]#g	8	8
nc	93	REP:[6045].cmr_value#g/REP:[6103].cmr_value#g	8	8
nc	98	REP:[6045].cts_chkcount#g/REP:[6103].cts_chkcount#g	8	8
nc	102	REP:[6045].dcd_chkcount#g/REP:[6103].dcd_chkcount#g	8	8
nc	105	REP:[6045].dsr_chkcount#g/REP:[6103].dsr_chkcount#g	8	8
nc	368	REP:[6045].irq_occurred#g/REP:[6045].irq_occurred#g	8	8
nc	374	REP:[6045].loopback_bits#g/REP:[6079].loopback_bits#g	8	8
nc	124	REP:[6045].loopback_bits#g/REP:[6103].loopback_bits#g	8	8
nc	375	REP:[6045].mbre_bit#g/REP:[6082].mbre_bit#g	8	8
nc	376	REP:[6045].mbre_bit#g/REP:[6091].mbre_bit#g	8	8
nc	130	REP:[6045].params.mode#g/REP:[6103].params.mode#g	8	8
nc	138	REP:[6045].ri_chkcount#g/REP:[6103].ri_chkcount#g	8	8
nc	143	REP:[6045].rx_enabled#g/REP:[6103].rx_enabled#g	8	8
nc	150	REP:[6045].tcsr_value#g/REP:[6103].tcsr_value#g	8	8
nc	399	REP:[6045].tcsr_value#g/REP:[6118].tcsr_value#g	8	8
nc	407	REP:[6045].tx_active#g/REP:[6118].tx_active#g	8	8
nc	156	REP:[6045].tx_active#g/REP:[6118].tx_active#g	8	8
nc	420	REP:[6045].tx_enabled#g/REP:[6091].tx_enabled#g	8	8
nc	419	REP:[6045].tx_enabled#g/REP:[6118].tx_enabled#g	8	8
nc	163	REP:[6045].tx_enabled#g/REP:[6118].tx_enabled#g	8	8
nc	174	REP:[6045].usc_idle_mode#g/REP:[6103].usc_idle_mode#g	8	8
nc	179	REP:[6045].xmit_cnt#g/REP:[6082].xmit_cnt#g	8	8
nc	430	REP:[6045].xmit_cnt#g/REP:[6118].xmit_cnt#g	8	8
nc	178	REP:[6045].xmit_cnt#g/REP:[6118].xmit_cnt#g	8	8
nc	182	REP:[6045].xmit_head#g/REP:[6103].xmit_head#g	8	8
nc	446	REP:[6045].xmit_tail#g/REP:[6053].xmit_tail#g	8	8
nc	187	REP:[6045].xmit_tail#g/REP:[6082].xmit_tail#g	8	8
nc	439	REP:[6045].xmit_tail#g/REP:[6082].xmit_tail#g	8	8
nc	438	REP:[6045].xmit_tail#g/REP:[6118].xmit_tail#g	8	8
nc	186	REP:[6045].xmit_tail#g/REP:[6118].xmit_tail#g	8	8
nc	177	REP:[6053].xmit_cnt#g/REP:[6082].xmit_cnt#g	8	8
nc	441	REP:[6053].xmit_cnt#g/REP:[6088].xmit_cnt#g	8	8
nc	190	REP:[6053].xmit_cnt#g/REP:[6088].xmit_cnt#g	8	8
nc	442	REP:[6053].xmit_cnt#g/REP:[6115].xmit_cnt#g	8	8
nc	440	REP:[6053].xmit_cnt#g/REP:[6118].xmit_cnt#g	8	8
nc	189	REP:[6053].xmit_cnt#g/REP:[6118].xmit_cnt#g	8	8
nc	181	REP:[6053].xmit_head#g/REP:[6045].xmit_head#g	8	8
nc	443	REP:[6053].xmit_head#g/REP:[6082].xmit_head#g	8	8
nc	444	REP:[6053].xmit_head#g/REP:[6088].xmit_head#g	8	8
nc	191	REP:[6053].xmit_head#g/REP:[6088].xmit_head#g	8	8
nc	445	REP:[6053].xmit_head#g/REP:[6118].xmit_head#g	8	8
nc	192	REP:[6053].xmit_head#g/REP:[6118].xmit_head#g	8	8
nc	437	REP:[6053].xmit_tail#g/REP:[6045].xmit_tail#g	8	8
nc	185	REP:[6053].xmit_tail#g/REP:[6082].xmit_tail#g	8	8
nc	447	REP:[6053].xmit_tail#g/REP:[6118].xmit_tail#g	8	8
nc	193	REP:[6053].xmit_tail#g/REP:[6118].xmit_tail#g	8	8
nc	210	REP:[6055].rx_enabled#g/REP:[6076].rx_enabled#g	8	8
nc	144	REP:[6055].rx_overflow#g/REP:[6076].rx_overflow#g	8	8
nc	145	REP:[6055].rx_rcc_underrun#g/REP:[6076].rx_rcc_underrun#g	8	8
nc	211	REP:[6055].serial_signals#g/REP:[6076].serial_signals#g	8	8
nc	41	REP:[6055].serial_signals#g/REP:[6082].serial_signals#g	8	8
nc	468	REP:[6055].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	212	REP:[6055].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	155	REP:[6055].tx_active#g/REP:[6076].tx_active#g	8	8
nc	162	REP:[6055].tx_enabled#g/REP:[6076].tx_enabled#g	8	8
nc	142	REP:[6076].rx_enabled#g/REP:[6082].rx_enabled#g	8	8
nc	467	REP:[6076].serial_signals#g/REP:[6055].serial_signals#g	8	8
nc	501	REP:[6079].serial_signals#g/REP:[6112].serial_signals#g	8	8
nc	125	REP:[6082].mbre_bit#g/REP:[6045].mbre_bit#g	8	8
nc	520	REP:[6082].mbre_bit#g/REP:[6079].mbre_bit#g	8	8
nc	245	REP:[6082].mbre_bit#g/REP:[6103].mbre_bit#g	8	8
nc	382	REP:[6082].params.mode#g/REP:[6006].params.mode#g	8	8
nc	383	REP:[6082].params.mode#g/REP:[6074].params.mode#g	8	8
nc	384	REP:[6082].params.mode#g/REP:[6079].params.mode#g	8	8
nc	386	REP:[6082].params.mode#g/REP:[6088].params.mode#g	8	8
nc	387	REP:[6082].params.mode#g/REP:[6115].params.mode#g	8	8
nc	398	REP:[6082].tcsr_value#g/REP:[6045].tcsr_value#g	8	8
nc	433	REP:[6082].xmit_head#g/REP:[6053].xmit_head#g	8	8
nc	435	REP:[6082].xmit_head#g/REP:[6088].xmit_head#g	8	8
nc	183	REP:[6082].xmit_head#g/REP:[6088].xmit_head#g	8	8
nc	436	REP:[6082].xmit_head#g/REP:[6118].xmit_head#g	8	8
nc	184	REP:[6082].xmit_head#g/REP:[6118].xmit_head#g	8	8
nc	94	REP:[6085].cmr_value#g/REP:[6103].cmr_value#g	8	8
nc	361	REP:[6085].current_tx_buffer#g/REP:[6045].current_tx_buffer#g	8	8
nc	101	REP:[6085].current_tx_buffer#g/REP:[6045].current_tx_buffer#g	8	8
nc	231	REP:[6085].drop_rts_on_tx_done#g/REP:[6103].drop_rts_on_tx_done#g	8	8
nc	232	REP:[6085].icount.tx#g/REP:[6103].icount.tx#g	8	8
nc	502	REP:[6085].serial_signals#g/REP:[6079].serial_signals#g	8	8
nc	233	REP:[6085].serial_signals#g/REP:[6103].serial_signals#g	8	8
nc	149	REP:[6085].start_tx_dma_buffer#g/REP:[6045].start_tx_dma_buffer#g	8	8
nc	505	REP:[6085].tx_active#g/REP:[6079].tx_active#g	8	8
nc	237	REP:[6085].tx_active#g/REP:[6103].tx_active#g	8	8
nc	416	REP:[6085].tx_buffer_list#g/REP:[6045].tx_buffer_list#g	8	8
nc	161	REP:[6085].tx_dma_buffers_used#g/REP:[6045].tx_dma_buffers_used#g	8	8
nc	509	REP:[6085].tx_enabled#g/REP:[6079].tx_enabled#g	8	8
nc	238	REP:[6085].tx_enabled#g/REP:[6103].tx_enabled#g	8	8
nc	511	REP:[6085].tx_timer.expires#g/REP:[6079].tx_timer.expires#g	8	8
nc	239	REP:[6085].tx_timer.expires#g/REP:[6103].tx_timer.expires#g	8	8
nc	512	REP:[6085].x_char#g/REP:[6079].x_char#g	8	8
nc	240	REP:[6085].x_char#g/REP:[6103].x_char#g	8	8
nc	514	REP:[6085].xmit_cnt#g/REP:[6079].xmit_cnt#g	8	8
nc	242	REP:[6085].xmit_cnt#g/REP:[6103].xmit_cnt#g	8	8
nc	519	REP:[6085].xmit_tail#g/REP:[6079].xmit_tail#g	8	8
nc	244	REP:[6085].xmit_tail#g/REP:[6103].xmit_tail#g	8	8
nc	431	REP:[6088].xmit_cnt#g/REP:[6045].xmit_cnt#g	8	8
nc	180	REP:[6088].xmit_cnt#g/REP:[6045].xmit_cnt#g	8	8
nc	526	REP:[6088].xmit_cnt#g/REP:[6115].xmit_cnt#g	8	8
nc	525	REP:[6088].xmit_cnt#g/REP:[6118].xmit_cnt#g	8	8
nc	243	REP:[6088].xmit_cnt#g/REP:[6118].xmit_cnt#g	8	8
nc	528	REP:[6088].xmit_head#g/REP:[6053].xmit_head#g	8	8
nc	527	REP:[6088].xmit_head#g/REP:[6082].xmit_head#g	8	8
nc	529	REP:[6088].xmit_head#g/REP:[6118].xmit_head#g	8	8
nc	250	REP:[6088].xmit_head#g/REP:[6118].xmit_head#g	8	8
nc	530	REP:[6089]#g/REP:[5963]#g	8	8
nc	531	REP:[6089]#g/REP:[5972]#g	8	8
nc	54	REP:[6089]#g/REP:[6013]#g	8	8
nc	532	REP:[6089]#g/REP:[6022]#g	8	8
nc	533	REP:[6089]#g/REP:[6025]#g	8	8
nc	535	REP:[6089]#g/REP:[6068]#g	8	8
nc	521	REP:[6091].mbre_bit#g/REP:[6082].mbre_bit#g	8	8
nc	405	REP:[6091].tx_active#g/REP:[6006].tx_active#g	8	8
nc	406	REP:[6091].tx_active#g/REP:[6074].tx_active#g	8	8
nc	408	REP:[6091].tx_active#g/REP:[6088].tx_active#g	8	8
nc	409	REP:[6091].tx_active#g/REP:[6115].tx_active#g	8	8
nc	418	REP:[6091].tx_enabled#g/REP:[6074].tx_enabled#g	8	8
nc	358	REP:[6103].cmr_value#g/REP:[6045].cmr_value#g	8	8
nc	522	REP:[6103].cmr_value#g/REP:[6085].cmr_value#g	8	8
nc	538	REP:[6103].idle_mode#g/REP:[6082].idle_mode#g	8	8
nc	385	REP:[6103].params.mode#g/REP:[6045].params.mode#g	8	8
nc	396	REP:[6103].rx_enabled#g/REP:[6045].rx_enabled#g	8	8
nc	466	REP:[6103].rx_enabled#g/REP:[6055].rx_enabled#g	8	8
nc	434	REP:[6103].xmit_head#g/REP:[6045].xmit_head#g	8	8
nc	517	REP:[6103].xmit_tail#g/REP:[6045].xmit_tail#g	8	8
nc	44	REP:[6109].serial_signals#g/REP:[6006].serial_signals#g	8	8
nc	214	REP:[6109].serial_signals#g/REP:[6055].serial_signals#g	8	8
nc	539	REP:[6109].serial_signals#g/REP:[6055].serial_signals#g	8	8
nc	254	REP:[6109].serial_signals#g/REP:[6112].serial_signals#g	8	8
nc	540	REP:[6109].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	235	REP:[6109].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	45	REP:[6112].serial_signals#g/REP:[6006].serial_signals#g	8	8
nc	215	REP:[6112].serial_signals#g/REP:[6055].serial_signals#g	8	8
nc	543	REP:[6112].serial_signals#g/REP:[6055].serial_signals#g	8	8
nc	544	REP:[6112].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	236	REP:[6112].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	500	REP:[6118].icount.tx#g/REP:[6006].icount.tx#g	8	8
nc	503	REP:[6118].tx_active#g/REP:[6006].tx_active#g	8	8
nc	504	REP:[6118].tx_active#g/REP:[6074].tx_active#g	8	8
nc	506	REP:[6118].tx_active#g/REP:[6088].tx_active#g	8	8
nc	507	REP:[6118].tx_active#g/REP:[6115].tx_active#g	8	8
nc	508	REP:[6118].tx_enabled#g/REP:[6074].tx_enabled#g	8	8
nc	510	REP:[6118].tx_enabled#g/REP:[6091].tx_enabled#g	8	8
nc	513	REP:[6118].x_char#g/REP:[6109].x_char#g	8	8
nc	548	REP:[6118].xmit_head#g/REP:[6053].xmit_head#g	8	8
nc	547	REP:[6118].xmit_head#g/REP:[6082].xmit_head#g	8	8
nc	549	REP:[6118].xmit_head#g/REP:[6088].xmit_head#g	8	8
nc	518	REP:[6118].xmit_tail#g/REP:[6053].xmit_tail#g	8	8
nc	5	REP:[5962].count#g/REP:[5962].count#g	8	8
nc	6	REP:[5962].count#g/REP:[5964].count#g	8	8
nc	7	REP:[5962].count#g/REP:[6032].count#g	8	8
nc	262	REP:[5962].count#g/REP:[6032].count#g	8	8
nc	263	REP:[5962].count#g/REP:[6061].count#g	8	8
nc	264	REP:[5962].count#g/REP:[6065].count#g	8	8
nc	289	REP:[5962].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	265	REP:[5963]#g/REP:[5963]#g	8	8
nc	266	REP:[5963]#g/REP:[5972]#g	8	8
nc	9	REP:[5963]#g/REP:[5976]#g	8	8
nc	299	REP:[5963]#g/REP:[6013]#g	8	8
nc	11	REP:[5963]#g/REP:[6017]#g	8	8
nc	12	REP:[5963]#g/REP:[6022]#g	8	8
nc	267	REP:[5963]#g/REP:[6022]#g	8	8
nc	13	REP:[5963]#g/REP:[6025]#g	8	8
nc	268	REP:[5963]#g/REP:[6025]#g	8	8
nc	14	REP:[5963]#g/REP:[6026]#g	8	8
nc	15	REP:[5963]#g/REP:[6033]#g	8	8
nc	16	REP:[5963]#g/REP:[6059]#g	8	8
nc	17	REP:[5963]#g/REP:[6068]#g	8	8
nc	270	REP:[5963]#g/REP:[6068]#g	8	8
nc	8	REP:[5963]#g/REP:[6086]#g	8	8
nc	18	REP:[5963]#g/REP:[6089]#g	8	8
nc	19	REP:[5964].count#g/REP:[5964].count#g	8	8
nc	20	REP:[5964].count#g/REP:[6032].count#g	8	8
nc	271	REP:[5964].count#g/REP:[6032].count#g	8	8
nc	272	REP:[5964].count#g/REP:[6061].count#g	8	8
nc	273	REP:[5964].count#g/REP:[6065].count#g	8	8
nc	21	REP:[5964].rcc#g/REP:[5964].rcc#g	8	8
nc	274	REP:[5964].rcc#g/REP:[5974].rcc#g	8	8
nc	22	REP:[5964].rcc#g/REP:[5974].rcc#g	8	8
nc	23	REP:[5964].rcc#g/REP:[6032].rcc#g	8	8
nc	275	REP:[5964].rcc#g/REP:[6061].rcc#g	8	8
nc	276	REP:[5964].rcc#g/REP:[6065].rcc#g	8	8
nc	24	REP:[5964].status#g/REP:[5964].status#g	8	8
nc	25	REP:[5964].status#g/REP:[6032].status#g	8	8
nc	277	REP:[5964].status#g/REP:[6032].status#g	8	8
nc	278	REP:[5964].status#g/REP:[6061].status#g	8	8
nc	279	REP:[5964].status#g/REP:[6065].status#g	8	8
nc	300	REP:[5972]#g/REP:[6013]#g	8	8
nc	280	REP:[5974].rcc#g/REP:[5974].rcc#g	8	8
nc	26	REP:[5974].rcc#g/REP:[5974].rcc#g	8	8
nc	27	REP:[5974].rcc#g/REP:[6032].rcc#g	8	8
nc	281	REP:[5974].rcc#g/REP:[6061].rcc#g	8	8
nc	282	REP:[5974].rcc#g/REP:[6065].rcc#g	8	8
nc	283	REP:[5976]#g/REP:[5963]#g	8	8
nc	284	REP:[5976]#g/REP:[5972]#g	8	8
nc	28	REP:[5976]#g/REP:[5976]#g	8	8
nc	30	REP:[5976]#g/REP:[6017]#g	8	8
nc	31	REP:[5976]#g/REP:[6022]#g	8	8
nc	285	REP:[5976]#g/REP:[6022]#g	8	8
nc	32	REP:[5976]#g/REP:[6025]#g	8	8
nc	286	REP:[5976]#g/REP:[6025]#g	8	8
nc	33	REP:[5976]#g/REP:[6026]#g	8	8
nc	34	REP:[5976]#g/REP:[6033]#g	8	8
nc	35	REP:[5976]#g/REP:[6059]#g	8	8
nc	36	REP:[5976]#g/REP:[6068]#g	8	8
nc	288	REP:[5976]#g/REP:[6068]#g	8	8
nc	37	REP:[5976]#g/REP:[6089]#g	8	8
nc	290	REP:[5998].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	38	REP:[5998].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	555	REP:[6006].next_device#g/REP:[5992].next_device#g	8	8
nc	29	REP:[6013]#g/REP:[5976]#g	8	8
nc	46	REP:[6013]#g/REP:[6013]#g	8	8
nc	303	REP:[6013]#g/REP:[6062]#g	8	8
nc	10	REP:[6013]#g/REP:[6119]#g	8	8
nc	55	REP:[6013].link#g/REP:[6013].link#g	8	8
nc	305	REP:[6013].link#g/REP:[6013].link#g	8	8
nc	306	REP:[6013].phys_entry#g/REP:[5974].phys_entry#g	8	8
nc	56	REP:[6013].phys_entry#g/REP:[6013].phys_entry#g	8	8
nc	307	REP:[6013].phys_entry#g/REP:[6032].phys_entry#g	8	8
nc	308	REP:[6013].phys_entry#g/REP:[6038].phys_entry#g	8	8
nc	309	REP:[6017]#g/REP:[5963]#g	8	8
nc	310	REP:[6017]#g/REP:[5972]#g	8	8
nc	57	REP:[6017]#g/REP:[6017]#g	8	8
nc	47	REP:[6017]#g/REP:[6021]#g	8	8
nc	58	REP:[6017]#g/REP:[6022]#g	8	8
nc	311	REP:[6017]#g/REP:[6022]#g	8	8
nc	59	REP:[6017]#g/REP:[6025]#g	8	8
nc	312	REP:[6017]#g/REP:[6025]#g	8	8
nc	60	REP:[6017]#g/REP:[6026]#g	8	8
nc	61	REP:[6017]#g/REP:[6033]#g	8	8
nc	62	REP:[6017]#g/REP:[6059]#g	8	8
nc	63	REP:[6017]#g/REP:[6068]#g	8	8
nc	314	REP:[6017]#g/REP:[6068]#g	8	8
nc	64	REP:[6017]#g/REP:[6089]#g	8	8
nc	65	REP:[6019].phys_addr#g/REP:[6019].phys_addr#g	8	8
nc	315	REP:[6019].virt_addr#g/REP:[5962].virt_addr#g	8	8
nc	316	REP:[6019].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	39	REP:[6019].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	291	REP:[6019].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	66	REP:[6019].virt_addr#g/REP:[6019].virt_addr#g	8	8
nc	317	REP:[6019].virt_addr#g/REP:[6019].virt_addr#g	8	8
nc	318	REP:[6019].virt_addr#g/REP:[6032].virt_addr#g	8	8
nc	319	REP:[6019].virt_addr#g/REP:[6061].virt_addr#g	8	8
nc	320	REP:[6019].virt_addr#g/REP:[6063].virt_addr#g	8	8
nc	321	REP:[6019].virt_addr#g/REP:[6065].virt_addr#g	8	8
nc	322	REP:[6019].virt_addr#g/REP:[6067].virt_addr#g	8	8
nc	323	REP:[6022]#g/REP:[5963]#g	8	8
nc	324	REP:[6022]#g/REP:[5972]#g	8	8
nc	48	REP:[6022]#g/REP:[6013]#g	8	8
nc	301	REP:[6022]#g/REP:[6013]#g	8	8
nc	67	REP:[6022]#g/REP:[6022]#g	8	8
nc	325	REP:[6022]#g/REP:[6022]#g	8	8
nc	68	REP:[6022]#g/REP:[6025]#g	8	8
nc	326	REP:[6022]#g/REP:[6025]#g	8	8
nc	69	REP:[6022]#g/REP:[6026]#g	8	8
nc	70	REP:[6022]#g/REP:[6033]#g	8	8
nc	71	REP:[6022]#g/REP:[6059]#g	8	8
nc	72	REP:[6022]#g/REP:[6068]#g	8	8
nc	328	REP:[6022]#g/REP:[6068]#g	8	8
nc	73	REP:[6022]#g/REP:[6089]#g	8	8
nc	82	REP:[6032].count#g/REP:[6032].count#g	8	8
nc	339	REP:[6032].count#g/REP:[6032].count#g	8	8
nc	340	REP:[6032].count#g/REP:[6061].count#g	8	8
nc	341	REP:[6032].count#g/REP:[6065].count#g	8	8
nc	342	REP:[6032].rcc#g/REP:[5974].rcc#g	8	8
nc	83	REP:[6032].rcc#g/REP:[6032].rcc#g	8	8
nc	343	REP:[6032].rcc#g/REP:[6061].rcc#g	8	8
nc	344	REP:[6032].rcc#g/REP:[6065].rcc#g	8	8
nc	84	REP:[6032].status#g/REP:[6032].status#g	8	8
nc	345	REP:[6032].status#g/REP:[6032].status#g	8	8
nc	346	REP:[6032].status#g/REP:[6061].status#g	8	8
nc	347	REP:[6032].status#g/REP:[6065].status#g	8	8
nc	292	REP:[6032].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	348	REP:[6033]#g/REP:[5963]#g	8	8
nc	349	REP:[6033]#g/REP:[5972]#g	8	8
nc	51	REP:[6033]#g/REP:[6013]#g	8	8
nc	350	REP:[6033]#g/REP:[6022]#g	8	8
nc	351	REP:[6033]#g/REP:[6025]#g	8	8
nc	85	REP:[6033]#g/REP:[6033]#g	8	8
nc	86	REP:[6033]#g/REP:[6059]#g	8	8
nc	87	REP:[6033]#g/REP:[6068]#g	8	8
nc	353	REP:[6033]#g/REP:[6068]#g	8	8
nc	88	REP:[6033]#g/REP:[6089]#g	8	8
nc	89	REP:[6045].blocked_open#g/REP:[6045].blocked_open#g	8	8
nc	354	REP:[6045].blocked_open#g/REP:[6076].blocked_open#g	8	8
nc	90	REP:[6045].buffer_list#g/REP:[6045].buffer_list#g	8	8
nc	355	REP:[6045].buffer_list#g/REP:[6045].buffer_list#g	8	8
nc	448	REP:[6045].buffer_list#g/REP:[6055].buffer_list#g	8	8
nc	92	REP:[6045].buffer_list_phys#g/REP:[6045].buffer_list_phys#g	8	8
nc	357	REP:[6045].buffer_list_phys#g/REP:[6045].buffer_list_phys#g	8	8
nc	359	REP:[6045].count#g/REP:[6045].count#g	8	8
nc	95	REP:[6045].count#g/REP:[6045].count#g	8	8
nc	96	REP:[6045].count#g/REP:[6055].count#g	8	8
nc	360	REP:[6045].count#g/REP:[6076].count#g	8	8
nc	97	REP:[6045].count#g/REP:[6076].count#g	8	8
nc	99	REP:[6045].current_rx_buffer#g/REP:[6045].current_rx_buffer#g	8	8
nc	100	REP:[6045].current_tx_buffer#g/REP:[6045].current_tx_buffer#g	8	8
nc	103	REP:[6045].dma_requested#g/REP:[6045].dma_requested#g	8	8
nc	362	REP:[6045].dma_requested#g/REP:[6055].dma_requested#g	8	8
nc	108	REP:[6045].get_tx_holding_index#g/REP:[6045].get_tx_holding_index#g	8	8
nc	110	REP:[6045].get_tx_holding_index#g/REP:[6118].get_tx_holding_index#g	8	8
nc	112	REP:[6045].init_error#g/REP:[6045].init_error#g	8	8
nc	113	REP:[6045].intermediate_rxbuffer#g/REP:[6045].intermediate_rxbuffer#g	8	8
nc	365	REP:[6045].intermediate_rxbuffer#g/REP:[6045].intermediate_rxbuffer#g	8	8
nc	455	REP:[6045].intermediate_rxbuffer#g/REP:[6055].intermediate_rxbuffer#g	8	8
nc	115	REP:[6045].io_addr_requested#g/REP:[6045].io_addr_requested#g	8	8
nc	367	REP:[6045].io_addr_requested#g/REP:[6055].io_addr_requested#g	8	8
nc	117	REP:[6045].irq_requested#g/REP:[6045].irq_requested#g	8	8
nc	369	REP:[6045].irq_requested#g/REP:[6055].irq_requested#g	8	8
nc	119	REP:[6045].last_mem_alloc#g/REP:[6045].last_mem_alloc#g	8	8
nc	370	REP:[6045].last_mem_alloc#g/REP:[6045].last_mem_alloc#g	8	8
nc	120	REP:[6045].lcr_base#g/REP:[6045].lcr_base#g	8	8
nc	371	REP:[6045].lcr_base#g/REP:[6045].lcr_base#g	8	8
nc	459	REP:[6045].lcr_base#g/REP:[6055].lcr_base#g	8	8
nc	122	REP:[6045].lcr_mem_requested#g/REP:[6045].lcr_mem_requested#g	8	8
nc	373	REP:[6045].lcr_mem_requested#g/REP:[6055].lcr_mem_requested#g	8	8
nc	126	REP:[6045].memory_base#g/REP:[6045].memory_base#g	8	8
nc	377	REP:[6045].memory_base#g/REP:[6045].memory_base#g	8	8
nc	462	REP:[6045].memory_base#g/REP:[6055].memory_base#g	8	8
nc	556	REP:[6045].next_device#g/REP:[5992].next_device#g	8	8
nc	390	REP:[6045].pending_bh#g/REP:[6006].pending_bh#g	8	8
nc	133	REP:[6045].pending_bh#g/REP:[6045].pending_bh#g	8	8
nc	134	REP:[6045].put_tx_holding_index#g/REP:[6045].put_tx_holding_index#g	8	8
nc	136	REP:[6045].put_tx_holding_index#g/REP:[6118].put_tx_holding_index#g	8	8
nc	139	REP:[6045].rx_buffer_count#g/REP:[6045].rx_buffer_count#g	8	8
nc	392	REP:[6045].rx_buffer_count#g/REP:[6082].rx_buffer_count#g	8	8
nc	394	REP:[6045].rx_buffer_list#g/REP:[6045].rx_buffer_list#g	8	8
nc	140	REP:[6045].rx_buffer_list#g/REP:[6045].rx_buffer_list#g	8	8
nc	464	REP:[6045].rx_buffer_list#g/REP:[6055].rx_buffer_list#g	8	8
nc	40	REP:[6045].serial_signals#g/REP:[6082].serial_signals#g	8	8
nc	146	REP:[6045].shared_mem_requested#g/REP:[6045].shared_mem_requested#g	8	8
nc	397	REP:[6045].shared_mem_requested#g/REP:[6055].shared_mem_requested#g	8	8
nc	148	REP:[6045].start_tx_dma_buffer#g/REP:[6045].start_tx_dma_buffer#g	8	8
nc	152	REP:[6045].tty#g/REP:[6045].tty#g	8	8
nc	153	REP:[6045].tty#g/REP:[6055].tty#g	8	8
nc	154	REP:[6045].tty#g/REP:[6076].tty#g	8	8
nc	403	REP:[6045].tty#g/REP:[6082].tty#g	8	8
nc	157	REP:[6045].tx_buffer_count#g/REP:[6045].tx_buffer_count#g	8	8
nc	410	REP:[6045].tx_buffer_count#g/REP:[6045].tx_buffer_count#g	8	8
nc	412	REP:[6045].tx_buffer_count#g/REP:[6085].tx_buffer_count#g	8	8
nc	413	REP:[6045].tx_buffer_count#g/REP:[6118].tx_buffer_count#g	8	8
nc	414	REP:[6045].tx_buffer_list#g/REP:[6045].tx_buffer_list#g	8	8
nc	158	REP:[6045].tx_buffer_list#g/REP:[6045].tx_buffer_list#g	8	8
nc	472	REP:[6045].tx_buffer_list#g/REP:[6055].tx_buffer_list#g	8	8
nc	160	REP:[6045].tx_dma_buffers_used#g/REP:[6045].tx_dma_buffers_used#g	8	8
nc	417	REP:[6045].tx_dma_buffers_used#g/REP:[6118].tx_dma_buffers_used#g	8	8
nc	164	REP:[6045].tx_holding_buffers[0].buffer#g/REP:[6045].tx_holding_buffers[0].buffer#g	8	8
nc	421	REP:[6045].tx_holding_buffers[0].buffer#g/REP:[6045].tx_holding_buffers[0].buffer#g	8	8
nc	475	REP:[6045].tx_holding_buffers[0].buffer#g/REP:[6055].tx_holding_buffers[0].buffer#g	8	8
nc	423	REP:[6045].tx_holding_buffers[0].buffer#g/REP:[6118].tx_holding_buffers[0].buffer#g	8	8
nc	166	REP:[6045].tx_holding_count#g/REP:[6045].tx_holding_count#g	8	8
nc	424	REP:[6045].tx_holding_count#g/REP:[6118].tx_holding_count#g	8	8
nc	168	REP:[6045].tx_holding_count#g/REP:[6118].tx_holding_count#g	8	8
nc	169	REP:[6045].tx_timer.base#g/REP:[6045].tx_timer.base#g	8	8
nc	170	REP:[6045].tx_timer.data#g/REP:[6045].tx_timer.data#g	8	8
nc	171	REP:[6045].tx_timer.function#g/REP:[6045].tx_timer.function#g	8	8
nc	172	REP:[6045].tx_timer.lock#g/REP:[6045].tx_timer.lock#g	8	8
nc	173	REP:[6045].tx_timer.magic#g/REP:[6045].tx_timer.magic#g	8	8
nc	425	REP:[6045].xmit_buf#g/REP:[6045].xmit_buf#g	8	8
nc	175	REP:[6045].xmit_buf#g/REP:[6045].xmit_buf#g	8	8
nc	479	REP:[6045].xmit_buf#g/REP:[6055].xmit_buf#g	8	8
nc	427	REP:[6045].xmit_buf#g/REP:[6085].xmit_buf#g	8	8
nc	428	REP:[6045].xmit_buf#g/REP:[6088].xmit_buf#g	8	8
nc	429	REP:[6045].xmit_buf#g/REP:[6118].xmit_buf#g	8	8
nc	188	REP:[6048].low_latency#g/REP:[6048].low_latency#g	8	8
nc	356	REP:[6055].buffer_list#g/REP:[6045].buffer_list#g	8	8
nc	91	REP:[6055].buffer_list#g/REP:[6045].buffer_list#g	8	8
nc	449	REP:[6055].buffer_list#g/REP:[6055].buffer_list#g	8	8
nc	194	REP:[6055].buffer_list#g/REP:[6076].buffer_list#g	8	8
nc	450	REP:[6055].count#g/REP:[6045].count#g	8	8
nc	195	REP:[6055].count#g/REP:[6055].count#g	8	8
nc	451	REP:[6055].count#g/REP:[6076].count#g	8	8
nc	196	REP:[6055].count#g/REP:[6076].count#g	8	8
nc	104	REP:[6055].dma_requested#g/REP:[6045].dma_requested#g	8	8
nc	197	REP:[6055].dma_requested#g/REP:[6076].dma_requested#g	8	8
nc	453	REP:[6055].flags#g/REP:[6055].flags#g	8	8
nc	198	REP:[6055].flags#g/REP:[6076].flags#g	8	8
nc	109	REP:[6055].get_tx_holding_index#g/REP:[6045].get_tx_holding_index#g	8	8
nc	199	REP:[6055].get_tx_holding_index#g/REP:[6076].get_tx_holding_index#g	8	8
nc	200	REP:[6055].get_tx_holding_index#g/REP:[6118].get_tx_holding_index#g	8	8
nc	366	REP:[6055].intermediate_rxbuffer#g/REP:[6045].intermediate_rxbuffer#g	8	8
nc	114	REP:[6055].intermediate_rxbuffer#g/REP:[6045].intermediate_rxbuffer#g	8	8
nc	456	REP:[6055].intermediate_rxbuffer#g/REP:[6055].intermediate_rxbuffer#g	8	8
nc	201	REP:[6055].intermediate_rxbuffer#g/REP:[6076].intermediate_rxbuffer#g	8	8
nc	116	REP:[6055].io_addr_requested#g/REP:[6045].io_addr_requested#g	8	8
nc	202	REP:[6055].io_addr_requested#g/REP:[6076].io_addr_requested#g	8	8
nc	118	REP:[6055].irq_requested#g/REP:[6045].irq_requested#g	8	8
nc	203	REP:[6055].irq_requested#g/REP:[6076].irq_requested#g	8	8
nc	372	REP:[6055].lcr_base#g/REP:[6045].lcr_base#g	8	8
nc	121	REP:[6055].lcr_base#g/REP:[6045].lcr_base#g	8	8
nc	460	REP:[6055].lcr_base#g/REP:[6055].lcr_base#g	8	8
nc	204	REP:[6055].lcr_base#g/REP:[6076].lcr_base#g	8	8
nc	123	REP:[6055].lcr_mem_requested#g/REP:[6045].lcr_mem_requested#g	8	8
nc	205	REP:[6055].lcr_mem_requested#g/REP:[6076].lcr_mem_requested#g	8	8
nc	378	REP:[6055].memory_base#g/REP:[6045].memory_base#g	8	8
nc	127	REP:[6055].memory_base#g/REP:[6045].memory_base#g	8	8
nc	463	REP:[6055].memory_base#g/REP:[6055].memory_base#g	8	8
nc	206	REP:[6055].memory_base#g/REP:[6076].memory_base#g	8	8
nc	135	REP:[6055].put_tx_holding_index#g/REP:[6045].put_tx_holding_index#g	8	8
nc	207	REP:[6055].put_tx_holding_index#g/REP:[6076].put_tx_holding_index#g	8	8
nc	208	REP:[6055].put_tx_holding_index#g/REP:[6118].put_tx_holding_index#g	8	8
nc	393	REP:[6055].rx_buffer_count#g/REP:[6045].rx_buffer_count#g	8	8
nc	141	REP:[6055].rx_buffer_list#g/REP:[6045].rx_buffer_list#g	8	8
nc	395	REP:[6055].rx_buffer_list#g/REP:[6045].rx_buffer_list#g	8	8
nc	465	REP:[6055].rx_buffer_list#g/REP:[6055].rx_buffer_list#g	8	8
nc	209	REP:[6055].rx_buffer_list#g/REP:[6076].rx_buffer_list#g	8	8
nc	147	REP:[6055].shared_mem_requested#g/REP:[6045].shared_mem_requested#g	8	8
nc	216	REP:[6055].shared_mem_requested#g/REP:[6076].shared_mem_requested#g	8	8
nc	404	REP:[6055].tty#g/REP:[6045].tty#g	8	8
nc	471	REP:[6055].tty#g/REP:[6055].tty#g	8	8
nc	217	REP:[6055].tty#g/REP:[6055].tty#g	8	8
nc	499	REP:[6055].tty#g/REP:[6076].tty#g	8	8
nc	218	REP:[6055].tty#g/REP:[6076].tty#g	8	8
nc	470	REP:[6055].tty#g/REP:[6082].tty#g	8	8
nc	411	REP:[6055].tx_buffer_count#g/REP:[6045].tx_buffer_count#g	8	8
nc	159	REP:[6055].tx_buffer_list#g/REP:[6045].tx_buffer_list#g	8	8
nc	415	REP:[6055].tx_buffer_list#g/REP:[6045].tx_buffer_list#g	8	8
nc	473	REP:[6055].tx_buffer_list#g/REP:[6055].tx_buffer_list#g	8	8
nc	219	REP:[6055].tx_buffer_list#g/REP:[6076].tx_buffer_list#g	8	8
nc	474	REP:[6055].tx_buffer_list#g/REP:[6085].tx_buffer_list#g	8	8
nc	422	REP:[6055].tx_holding_buffers[0].buffer#g/REP:[6045].tx_holding_buffers[0].buffer#g	8	8
nc	165	REP:[6055].tx_holding_buffers[0].buffer#g/REP:[6045].tx_holding_buffers[0].buffer#g	8	8
nc	476	REP:[6055].tx_holding_buffers[0].buffer#g/REP:[6055].tx_holding_buffers[0].buffer#g	8	8
nc	220	REP:[6055].tx_holding_buffers[0].buffer#g/REP:[6076].tx_holding_buffers[0].buffer#g	8	8
nc	167	REP:[6055].tx_holding_count#g/REP:[6045].tx_holding_count#g	8	8
nc	221	REP:[6055].tx_holding_count#g/REP:[6076].tx_holding_count#g	8	8
nc	426	REP:[6055].xmit_buf#g/REP:[6045].xmit_buf#g	8	8
nc	176	REP:[6055].xmit_buf#g/REP:[6045].xmit_buf#g	8	8
nc	480	REP:[6055].xmit_buf#g/REP:[6055].xmit_buf#g	8	8
nc	223	REP:[6055].xmit_buf#g/REP:[6076].xmit_buf#g	8	8
nc	484	REP:[6059]#g/REP:[5963]#g	8	8
nc	485	REP:[6059]#g/REP:[5972]#g	8	8
nc	52	REP:[6059]#g/REP:[6013]#g	8	8
nc	486	REP:[6059]#g/REP:[6022]#g	8	8
nc	487	REP:[6059]#g/REP:[6025]#g	8	8
nc	224	REP:[6059]#g/REP:[6059]#g	8	8
nc	225	REP:[6059]#g/REP:[6068]#g	8	8
nc	489	REP:[6059]#g/REP:[6068]#g	8	8
nc	226	REP:[6059]#g/REP:[6089]#g	8	8
nc	293	REP:[6061].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	269	REP:[6062]#g/REP:[5963]#g	8	8
nc	287	REP:[6062]#g/REP:[5976]#g	8	8
nc	313	REP:[6062]#g/REP:[6017]#g	8	8
nc	327	REP:[6062]#g/REP:[6022]#g	8	8
nc	332	REP:[6062]#g/REP:[6025]#g	8	8
nc	337	REP:[6062]#g/REP:[6026]#g	8	8
nc	352	REP:[6062]#g/REP:[6033]#g	8	8
nc	488	REP:[6062]#g/REP:[6059]#g	8	8
nc	494	REP:[6062]#g/REP:[6068]#g	8	8
nc	534	REP:[6062]#g/REP:[6089]#g	8	8
nc	294	REP:[6063].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	295	REP:[6065].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	296	REP:[6067].virt_addr#g/REP:[5998].virt_addr#g	8	8
nc	490	REP:[6068]#g/REP:[5963]#g	8	8
nc	491	REP:[6068]#g/REP:[5972]#g	8	8
nc	53	REP:[6068]#g/REP:[6013]#g	8	8
nc	304	REP:[6068]#g/REP:[6013]#g	8	8
nc	492	REP:[6068]#g/REP:[6022]#g	8	8
nc	493	REP:[6068]#g/REP:[6025]#g	8	8
nc	227	REP:[6068]#g/REP:[6068]#g	8	8
nc	495	REP:[6068]#g/REP:[6068]#g	8	8
nc	228	REP:[6068]#g/REP:[6089]#g	8	8
nc	454	REP:[6074].flags#g/REP:[6055].flags#g	8	8
nc	496	REP:[6076].count#g/REP:[6045].count#g	8	8
nc	497	REP:[6076].count#g/REP:[6076].count#g	8	8
nc	229	REP:[6076].count#g/REP:[6076].count#g	8	8
nc	452	REP:[6076].dma_requested#g/REP:[6055].dma_requested#g	8	8
nc	107	REP:[6076].flags#g/REP:[6082].flags#g	8	8
nc	457	REP:[6076].io_addr_requested#g/REP:[6055].io_addr_requested#g	8	8
nc	458	REP:[6076].irq_requested#g/REP:[6055].irq_requested#g	8	8
nc	461	REP:[6076].lcr_mem_requested#g/REP:[6055].lcr_mem_requested#g	8	8
nc	469	REP:[6076].shared_mem_requested#g/REP:[6055].shared_mem_requested#g	8	8
nc	230	REP:[6076].tty#g/REP:[6076].tty#g	8	8
nc	498	REP:[6076].tty#g/REP:[6082].tty#g	8	8
nc	364	REP:[6082].flags#g/REP:[6074].flags#g	8	8
nc	106	REP:[6082].flags#g/REP:[6103].flags#g	8	8
nc	111	REP:[6082].ignore_status_mask#g/REP:[6103].ignore_status_mask#g	8	8
nc	379	REP:[6082].params.data_bits#g/REP:[6082].params.data_bits#g	8	8
nc	128	REP:[6082].params.data_bits#g/REP:[6103].params.data_bits#g	8	8
nc	381	REP:[6082].params.data_rate#g/REP:[6074].params.data_rate#g	8	8
nc	380	REP:[6082].params.data_rate#g/REP:[6082].params.data_rate#g	8	8
nc	129	REP:[6082].params.data_rate#g/REP:[6103].params.data_rate#g	8	8
nc	388	REP:[6082].params.parity#g/REP:[6082].params.parity#g	8	8
nc	131	REP:[6082].params.parity#g/REP:[6103].params.parity#g	8	8
nc	389	REP:[6082].params.stop_bits#g/REP:[6082].params.stop_bits#g	8	8
nc	132	REP:[6082].params.stop_bits#g/REP:[6103].params.stop_bits#g	8	8
nc	391	REP:[6082].read_status_mask#g/REP:[6082].read_status_mask#g	8	8
nc	137	REP:[6082].read_status_mask#g/REP:[6103].read_status_mask#g	8	8
nc	401	REP:[6082].timeout#g/REP:[6074].timeout#g	8	8
nc	402	REP:[6082].timeout#g/REP:[6076].timeout#g	8	8
nc	400	REP:[6082].timeout#g/REP:[6082].timeout#g	8	8
nc	151	REP:[6082].timeout#g/REP:[6103].timeout#g	8	8
nc	481	REP:[6085].xmit_buf#g/REP:[6055].xmit_buf#g	8	8
nc	482	REP:[6088].xmit_buf#g/REP:[6055].xmit_buf#g	8	8
nc	43	REP:[6093].serial_signals#g/REP:[6006].serial_signals#g	8	8
nc	213	REP:[6093].serial_signals#g/REP:[6055].serial_signals#g	8	8
nc	251	REP:[6093].serial_signals#g/REP:[6093].serial_signals#g	8	8
nc	252	REP:[6093].serial_signals#g/REP:[6109].serial_signals#g	8	8
nc	253	REP:[6093].serial_signals#g/REP:[6112].serial_signals#g	8	8
nc	536	REP:[6093].serial_signals#g/REP:[6112].serial_signals#g	8	8
nc	537	REP:[6093].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	234	REP:[6093].serial_signals#g/REP:[6118].serial_signals#g	8	8
nc	363	REP:[6103].flags#g/REP:[6055].flags#g	8	8
nc	542	REP:[6109].x_char#g/REP:[6109].x_char#g	8	8
nc	255	REP:[6109].x_char#g/REP:[6109].x_char#g	8	8
nc	541	REP:[6109].x_char#g/REP:[6118].x_char#g	8	8
nc	241	REP:[6109].x_char#g/REP:[6118].x_char#g	8	8
nc	432	REP:[6115].xmit_cnt#g/REP:[6045].xmit_cnt#g	8	8
nc	246	REP:[6118].cmr_value#g/REP:[6118].cmr_value#g	8	8
nc	523	REP:[6118].current_tx_buffer#g/REP:[6085].current_tx_buffer#g	8	8
nc	247	REP:[6118].current_tx_buffer#g/REP:[6118].current_tx_buffer#g	8	8
nc	256	REP:[6118].put_tx_holding_index#g/REP:[6118].put_tx_holding_index#g	8	8
nc	248	REP:[6118].start_tx_dma_buffer#g/REP:[6118].start_tx_dma_buffer#g	8	8
nc	524	REP:[6118].tx_dma_buffers_used#g/REP:[6085].tx_dma_buffers_used#g	8	8
nc	249	REP:[6118].tx_dma_buffers_used#g/REP:[6118].tx_dma_buffers_used#g	8	8
nc	477	REP:[6118].tx_holding_buffers[0].buffer#g/REP:[6055].tx_holding_buffers[0].buffer#g	8	8
nc	545	REP:[6118].tx_holding_buffers[0].buffer_size#g/REP:[6118].tx_holding_buffers[0].buffer_size#g	8	8
nc	257	REP:[6118].tx_holding_buffers[0].buffer_size#g/REP:[6118].tx_holding_buffers[0].buffer_size#g	8	8
nc	478	REP:[6118].tx_holding_count#g/REP:[6055].tx_holding_count#g	8	8
nc	222	REP:[6118].tx_holding_count#g/REP:[6055].tx_holding_count#g	8	8
nc	546	REP:[6118].tx_holding_count#g/REP:[6118].tx_holding_count#g	8	8
nc	258	REP:[6118].tx_holding_count#g/REP:[6118].tx_holding_count#g	8	8
nc	483	REP:[6118].xmit_buf#g/REP:[6055].xmit_buf#g	8	8
nc	515	REP:[6118].xmit_cnt#g/REP:[6088].xmit_cnt#g	8	8
nc	516	REP:[6118].xmit_cnt#g/REP:[6115].xmit_cnt#g	8	8


writeState: writing new state for Andersen to /home/jan/research/relay-race/racetests/synclink/ciltrees/.pta_temp.anders

Elapsed time (secs): 8.956559
Top heap size (MB): 72
Current heap size (MB): 33
Lifetime allocated bytes (MB): 688
Collections -- minor: 542 major: 44 compactions: 6
Bytes per word: 4
Exhausted tries: 1
return value is 0
ran 1 times
cleared status file: /tmp/temp.gobW3w
Mon Oct 12 14:21:01 PDT 2009
