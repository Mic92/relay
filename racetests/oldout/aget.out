Tue Jan 19 22:00:58 PST 2010
reserved status file: /tmp/temp.kD1t0u
running analysis on /home/jan/research/relay-race/racetests/aget/ciltrees
Registered summary type: rs_scc
Registered summary type: rs
Registered summary type: ss
Registered summary type: rss
Args: 
 ./race_anal.exe -cg /home/jan/research/relay-race/racetests/aget/ciltrees -r -u jan -st /tmp/temp.kD1t0u
Checking for data races
-----
Loading Cil Varinfo ID ranges for lookup tables
Loading ranges from .vids_ckeys_fixed
Setting Cil Varinfo ID ranges
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: ENTRY_POINTS
Finished parsing config group: SYM_EX
Done reading config file
myIP: 127.0.1.1
using /tmp/relay_scratch to store acquired files
using: /tmp/temp.kD1t0u to track status
Initializing Steensgaard AA info
Loading function info
Loading tempVar info
Using old PTA results
Old PTA results loaded
Initializing Andersen's AA info
Using old PTA results: /home/jan/research/relay-race/racetests/aget/ciltrees/.pta_results.anders
Old PTA results loaded
Reached end of /home/jan/research/relay-race/racetests/aget/ciltrees/calls.anders call graph file
Num funcs: 77
Scc_cg: Pruned 59 funcs w/out bodies for scc DAG
summary database will use:
	/home/jan/research/relay-race/racetests/aget/ciltrees/relay_sums
Initializing summary rss
Checking leftover state: rss
[Er]: Checkpoint: No left-over status file
Initializing summary ss
Checking leftover state: ss
[Er]: Checkpoint: No left-over status file
Initializing summary rs
BS: Not doing any post-reboot cleanup
[Er]: Multiple lock summaries for pthread_mutex_unlock:211.f
[Er]: makeSimpleLock: Couldn't find global kernel_sem
[Er]: makeSimpleLock: Couldn't find global kernel_flag
[Er]: Multiple lock summaries for pthread_mutex_lock:210.f
Initializing summary rs_scc
BS: Not doing any post-reboot cleanup
SH: initEscapeable found (1, 2) thread (acts, formals)

Entry points use roots: true
file server will use: 14440
trying to clear old summaries / local srcs, etc.
Starting bottomup analysis
-----
[Er]: Checkpoint: No left-over status file
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #3
=================================
Summarizing function: updateProgressBar : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: updateProgressBar:113.f
=======

SUMS (nm, lo, un, wr, re):	updateProgressBar	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 113.f : 34
>>> PROGRESS 1/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #14
=================================
Summarizing function: Log : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: Log:21.f
=======

SUMS (nm, lo, un, wr, re):	Log	0	0	0	4	

SS Sum:
 -> 
$SSBOT
SIZES: 21.f : 101
>>> PROGRESS 2/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #12
=================================
Summarizing function: handleHttpRetcode : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 10	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: handleHttpRetcode:114.f
=======

SUMS (nm, lo, un, wr, re):	handleHttpRetcode	0	0	0	3	

SS Sum:
 -> 
$SSBOT
SIZES: 114.f : 34
>>> PROGRESS 3/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #0
=================================
Summarizing function: http_get : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 18	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: http_get:67.f
=======

SUMS (nm, lo, un, wr, re):	http_get	1	0	4	12	

SS Sum:
 -> 
Vval: 0
SIZES: 67.f : 634
>>> PROGRESS 4/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #2
=================================
Summarizing function: sigalrm_handler : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 50	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: sigalrm_handler:199.f
=======

SUMS (nm, lo, un, wr, re):	sigalrm_handler	0	0	1	3	

SS Sum:
 -> 
$SSBOT
SIZES: 199.f : 34
>>> PROGRESS 5/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #5
=================================
Summarizing function: save_log : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: save_log:200.f
=======

SUMS (nm, lo, un, wr, re):	save_log	0	0	2	7	

SS Sum:
 -> 
$SSBOT
SIZES: 200.f : 34
>>> PROGRESS 6/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #4
=================================
Summarizing function: sigint_handler : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 13	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: sigint_handler:198.f
=======

SUMS (nm, lo, un, wr, re):	sigint_handler	1	0	3	9	

SS Sum:
 -> 
$SSBOT
SIZES: 198.f : 91
>>> PROGRESS 7/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #1
=================================
Summarizing function: signal_waiter : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 10	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: signal_waiter:28.f
=======

SUMS (nm, lo, un, wr, re):	signal_waiter	1	0	4	12	

SS Sum:
 -> 
Vval: 0
SIZES: 28.f : 91
>>> PROGRESS 8/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #7
=================================
Summarizing function: resume_get : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 16	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: resume_get:26.f
=======

SUMS (nm, lo, un, wr, re):	resume_get	0	0	4	17	

SS Sum:
 -> 
$SSBOT
SIZES: 26.f : 175
>>> PROGRESS 9/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #9
=================================
Summarizing function: numofthreads : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 34	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: numofthreads:66.f
=======

SUMS (nm, lo, un, wr, re):	numofthreads	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 66.f : 34
>>> PROGRESS 10/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #10
=================================
Summarizing function: calc_offset : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: calc_offset:65.f
=======

SUMS (nm, lo, un, wr, re):	calc_offset	0	0	0	0	

SS Sum:
 -> 
Vval: part * (total / nthreads___0)
SIZES: 65.f : 34
>>> PROGRESS 11/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #11
=================================
Summarizing function: http_head_req : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: http_head_req:64.f
=======

SUMS (nm, lo, un, wr, re):	http_head_req	0	0	4	7	

SS Sum:
 -> 
$SSBOT
SIZES: 64.f : 170
>>> PROGRESS 12/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #8
=================================
Summarizing function: get : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 65	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: get:25.f
=======

SUMS (nm, lo, un, wr, re):	get	0	0	13	17	

SS Sum:
 -> 
$SSBOT
SIZES: 25.f : 379
>>> PROGRESS 13/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #13
=================================
Summarizing function: read_log : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 56	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: read_log:24.f
=======

SUMS (nm, lo, un, wr, re):	read_log	0	0	1	5	

SS Sum:
 -> 
$SSTOP
SIZES: 24.f : 123
>>> PROGRESS 14/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #15
=================================
Summarizing function: usage : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 28	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: usage:20.f
=======

SUMS (nm, lo, un, wr, re):	usage	0	0	0	1	

SS Sum:
 -> 
$SSBOT
SIZES: 20.f : 34
>>> PROGRESS 15/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #17
=================================
Summarizing function: revstr : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 8	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: revstr:112.f
=======

SUMS (nm, lo, un, wr, re):	revstr	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 112.f : 87
>>> PROGRESS 16/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #16
=================================
Summarizing function: parse_url : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 2	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: parse_url:19.f
=======

SUMS (nm, lo, un, wr, re):	parse_url	0	0	8	5	

SS Sum:
 -> 
$SSBOT
SIZES: 19.f : 816
>>> PROGRESS 17/18 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #6
=================================
Summarizing function: main : aget_comb.c
-----
doing symstate
Prev ldiffCache hits: 17	misses: 3

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: main:38.f
=======

SUMS (nm, lo, un, wr, re):	main	0	0	25	29	

SS Sum:
 -> 
Vval: 0
SIZES: 38.f : 99
>>> PROGRESS 18/18 SCCs DONE!

=================================
getting next SCC from server
Bottomup analysis complete
-----



Beginning Thread Analysis:
-----
[Er]: No entry-points file!
Expected # thread-creation site pairs: 10
checking a thread-creation pair
Prev ldiffCache hits: 113	misses: 3

doing symstate
Prev ldiffCache hits: 15	misses: 1

doing symstate
now checking thread roots: signal_waiter(28.f), signal_waiter(28.f)
New race added to race reports
New race added to race reports
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 15	misses: 1

doing symstate
Prev ldiffCache hits: 15	misses: 1

doing symstate
now checking thread roots: signal_waiter(67.f), http_get(67.f)
New race added to race reports
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 13	misses: 3

doing symstate
Prev ldiffCache hits: 15	misses: 1

doing symstate
now checking thread roots: signal_waiter(67.f), http_get(67.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 13	misses: 3

doing symstate
now checking thread roots: signal_waiter(38.f), main(38.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 15	misses: 1

doing symstate
Prev ldiffCache hits: 13	misses: 3

doing symstate
now checking thread roots: http_get(67.f), http_get(67.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 13	misses: 3

doing symstate
Prev ldiffCache hits: 13	misses: 3

doing symstate
now checking thread roots: http_get(67.f), http_get(67.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 13	misses: 3

doing symstate
now checking thread roots: http_get(38.f), main(38.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 13	misses: 3

doing symstate
Prev ldiffCache hits: 13	misses: 3

doing symstate
now checking thread roots: http_get(67.f), http_get(67.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 13	misses: 3

doing symstate
now checking thread roots: http_get(38.f), main(38.f)
done with pair, sending notification
checking a thread-creation pair
now checking thread roots: main(38.f), main(38.f)
done with pair, sending notification
completed all thread pairs
Sorting races

Printing races

****
Possible race between access to:

nthreads @ aget_comb.c:172 and
nthreads @ aget_comb.c:172
	Cluster ID: 6
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:970:(198.f), aget_comb.c:1137:(200.f), aget_comb.c:1139:(200.f)] and
	[aget_comb.c:330:(25.f), aget_comb.c:332:(25.f), aget_comb.c:433:(26.f), aget_comb.c:222:(38.f), aget_comb.c:225:(38.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

req @ aget_comb.c:174 and
req @ aget_comb.c:174
	Cluster ID: 7
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1136:(200.f)] and
	[aget_comb.c:188:(38.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

wthread @ aget_comb.c:176 and
wthread @ aget_comb.c:176
	Cluster ID: 8
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1137:(200.f)] and
	[aget_comb.c:335:(25.f), aget_comb.c:435:(26.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

prev @ aget_comb.c:779 and
prev @ aget_comb.c:779
	Cluster ID: 2
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:788:(113.f)] and
	[aget_comb.c:804:(113.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(3)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
****
Possible race between access to:

prev @ aget_comb.c:779 and
prev @ aget_comb.c:779
	Cluster ID: 0
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:804:(113.f)] and
	[aget_comb.c:804:(113.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(3)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 4
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:984:(199.f), aget_comb.c:1140:(200.f)] and
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 9
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:984:(199.f), aget_comb.c:1140:(200.f)] and
	[aget_comb.c:1186:(24.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 13
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f)] and
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f), aget_comb.c:1094:(67.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
LS for 2nd access:
L+ = empty;
	made empty at: aget_comb.c:1094
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: aget_comb.c:1094
LS for 2nd access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 15
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f), aget_comb.c:1094:(67.f)] and
	[aget_comb.c:1186:(24.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
	made empty at: aget_comb.c:1094
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(2)
LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 16
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f)] and
	[aget_comb.c:1188:(24.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 23].clength and
[REP: 23].clength
	Cluster ID: 10
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:984:(199.f)] and
	[aget_comb.c:929:(64.f)]

	Confidence: used PTA nodes lblSet(1, 1)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

[REP: 20].clength and
[REP: 20].clength
	Cluster ID: 19
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1094:(67.f)] and
	[aget_comb.c:386:(25.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].fd and
[REP: 20].fd
	Cluster ID: 20
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1073:(67.f), aget_comb.c:1075:(67.f), aget_comb.c:1085:(67.f), aget_comb.c:1088:(67.f)] and
	[aget_comb.c:385:(25.f), aget_comb.c:463:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].foffset and
[REP: 20].foffset
	Cluster ID: 21
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1021:(67.f), aget_comb.c:1096:(67.f)] and
	[aget_comb.c:378:(25.f), aget_comb.c:380:(25.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].offset and
[REP: 20].offset
	Cluster ID: 17
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)] and
	[aget_comb.c:462:(26.f), aget_comb.c:464:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].offset and
[REP: 20].offset
	Cluster ID: 11
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)] and
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

[REP: 20].offset and
[REP: 20].offset
	Cluster ID: 14
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)] and
	[aget_comb.c:1081:(67.f), aget_comb.c:1084:(67.f), aget_comb.c:1085:(67.f), aget_comb.c:1088:(67.f), aget_comb.c:1090:(67.f), aget_comb.c:1096:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

[REP: 20].soffset and
[REP: 20].soffset
	Cluster ID: 22
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1073:(67.f), aget_comb.c:1075:(67.f), aget_comb.c:1077:(67.f)] and
	[aget_comb.c:376:(25.f), aget_comb.c:462:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 5
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:972:(198.f)] and
	[aget_comb.c:399:(25.f), aget_comb.c:480:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 1
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:972:(198.f)] and
	[aget_comb.c:972:(198.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:193 5478 w/ func: signal_waiter

Different possible paths & LS (first 4):

****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 3
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:972:(198.f)] and
	[aget_comb.c:1097:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 18
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1097:(67.f)] and
	[aget_comb.c:399:(25.f), aget_comb.c:480:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 12
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1097:(67.f)] and
	[aget_comb.c:1097:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get


$$$$$$
Total Warnings: 23


Printing Alias assumptions used by warnings
-----
nc	10	[REP: 23].clength#g/[REP: 23].clength#g	1	1
nc	19	[REP: 20].clength#g/[REP: 20].clength#g	2	2
nc	20	[REP: 20].fd#g/[REP: 20].fd#g	2	2
nc	21	[REP: 20].foffset#g/[REP: 20].foffset#g	2	2
nc	17	[REP: 20].offset#g/[REP: 20].offset#g	2	2
nc	11	[REP: 20].offset#g/[REP: 20].offset#g	2	2
nc	14	[REP: 20].offset#g/[REP: 20].offset#g	2	2
nc	22	[REP: 20].soffset#g/[REP: 20].soffset#g	2	2
nc	5	[REP: 20].status#g/[REP: 20].status#g	2	2
nc	1	[REP: 20].status#g/[REP: 20].status#g	2	2
nc	3	[REP: 20].status#g/[REP: 20].status#g	2	2
nc	18	[REP: 20].status#g/[REP: 20].status#g	2	2
nc	12	[REP: 20].status#g/[REP: 20].status#g	2	2


writeState: writing new state for Andersen to /home/jan/research/relay-race/racetests/aget/ciltrees/.pta_temp.anders

writeState: Not needed for Steens PTA
Elapsed time (secs): 0.228013
Top heap size (MB): 2
Current heap size (MB): 2
Lifetime allocated bytes (MB): 17
Collections -- minor: 18 major: 4 compactions: 0
Bytes per word: 4
Exhausted tries: 1
return value is 0
ran 1 times
cleared status file: /tmp/temp.kD1t0u
Tue Jan 19 22:00:58 PST 2010
