Tue Jan 19 22:00:59 PST 2010
reserved status file: /tmp/temp.zqEGh4
running analysis on /home/jan/research/relay-race/racetests/knot/ciltrees
Registered summary type: rs_scc
Registered summary type: rs
Registered summary type: ss
Registered summary type: rss
Args: 
 ./race_anal.exe -cg /home/jan/research/relay-race/racetests/knot/ciltrees -r -u jan -st /tmp/temp.zqEGh4
Checking for data races
-----
Loading Cil Varinfo ID ranges for lookup tables
Loading ranges from .vids_ckeys_fixed
Setting Cil Varinfo ID ranges
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: ENTRY_POINTS
Finished parsing config group: SYM_EX
Done reading config file
myIP: 127.0.1.1
using /tmp/relay_scratch to store acquired files
using: /tmp/temp.zqEGh4 to track status
Initializing Steensgaard AA info
Loading function info
Loading tempVar info
Using old PTA results
Old PTA results loaded
Initializing Andersen's AA info
Using old PTA results: /home/jan/research/relay-race/racetests/knot/ciltrees/.pta_results.anders
Old PTA results loaded
Reached end of /home/jan/research/relay-race/racetests/knot/ciltrees/calls.anders call graph file
Num funcs: 120
Scc_cg: Pruned 31 funcs w/out bodies for scc DAG
summary database will use:
	/home/jan/research/relay-race/racetests/knot/ciltrees/relay_sums
Initializing summary rss
Checking leftover state: rss
[Er]: Checkpoint: No left-over status file
Initializing summary ss
Checking leftover state: ss
[Er]: Checkpoint: No left-over status file
Initializing summary rs
BS: Not doing any post-reboot cleanup
[Er]: Multiple lock summaries for pthread_mutex_unlock:4.f
[Er]: makeSimpleLock: Couldn't find global kernel_sem
[Er]: makeSimpleLock: Couldn't find global kernel_flag
[Er]: Multiple lock summaries for pthread_mutex_lock:3.f
Initializing summary rs_scc
BS: Not doing any post-reboot cleanup
SH: initEscapeable found (3, 3) thread (acts, formals)

Entry points use roots: true
file server will use: 14440
trying to clear old summaries / local srcs, etc.
Starting bottomup analysis
-----
[Er]: Checkpoint: No left-over status file
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #0
=================================
Summarizing function: pthread_cancel : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: pthread_cancel:438.f
=======

SUMS (nm, lo, un, wr, re):	pthread_cancel	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 438.f : 34
>>> PROGRESS 1/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #1
=================================
Summarizing function: fwrite : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fwrite:295.f
=======

SUMS (nm, lo, un, wr, re):	fwrite	0	0	0	0	

SS Sum:
 -> 
Vval: 0U
SIZES: 295.f : 34
>>> PROGRESS 2/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #2
=================================
Summarizing function: inet_ntoa : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: inet_ntoa:366.f
=======

SUMS (nm, lo, un, wr, re):	inet_ntoa	0	0	0	0	

SS Sum:
 -> 
Mustptr -> lval = b
SIZES: 366.f : 34
>>> PROGRESS 3/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #63
=================================
Summarizing function: cache_remove : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_remove:68.f
=======

SUMS (nm, lo, un, wr, re):	cache_remove	0	0	5	10	

SS Sum:
 -> 
$SSBOT
SIZES: 68.f : 493
>>> PROGRESS 4/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #66
=================================
Summarizing function: cache_add : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 12	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_add:65.f
=======

SUMS (nm, lo, un, wr, re):	cache_add	0	0	5	9	

SS Sum:
 -> 
$SSBOT
SIZES: 65.f : 223
>>> PROGRESS 5/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #61
=================================
Summarizing function: cache_use : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 11	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_use:79.f
=======

SUMS (nm, lo, un, wr, re):	cache_use	0	0	4	10	

SS Sum:
 -> 
$SSBOT
SIZES: 79.f : 221
>>> PROGRESS 6/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #88
=================================
Summarizing function: free : lib.c
-----
doing symstate
Prev ldiffCache hits: 27	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: free:7.f
=======

SUMS (nm, lo, un, wr, re):	free	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 7.f : 80
>>> PROGRESS 7/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #73
=================================
Summarizing function: cache_entry_release : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_entry_release:24.f
=======

SUMS (nm, lo, un, wr, re):	cache_entry_release	0	1	4	3	

SS Sum:
 -> 
$SSBOT
SIZES: 24.f : 401
>>> PROGRESS 8/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #62
=================================
Summarizing function: cache_evict : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 7	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_evict:73.f
=======

SUMS (nm, lo, un, wr, re):	cache_evict	0	1	8	11	

SS Sum:
 -> 
$SSBOT
SIZES: 73.f : 144
>>> PROGRESS 9/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #64
=================================
Summarizing function: cache_entry_addref : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 21	misses: 7

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_entry_addref:23.f
=======

SUMS (nm, lo, un, wr, re):	cache_entry_addref	0	1	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 23.f : 223
>>> PROGRESS 10/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #60
=================================
Summarizing function: cache_finish_get : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_finish_get:81.f
=======

SUMS (nm, lo, un, wr, re):	cache_finish_get	0	2	9	14	

SS Sum:
 -> 
$SSBOT
SIZES: 81.f : 422
>>> PROGRESS 11/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #65
=================================
Summarizing function: cache_find : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 31	misses: 7

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_find:75.f
=======

SUMS (nm, lo, un, wr, re):	cache_find	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 75.f : 34
>>> PROGRESS 12/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #68
=================================
Summarizing function: fstat__extinline : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fstat__extinline:15.f
=======

SUMS (nm, lo, un, wr, re):	fstat__extinline	0	0	0	0	

SS Sum:
 -> 
$SSTOP
SIZES: 15.f : 34
>>> PROGRESS 13/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #69
=================================
Summarizing function: strdup : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: strdup:13.f
=======

SUMS (nm, lo, un, wr, re):	strdup	0	0	1	1	

SS Sum:
 -> 
Mustptr -> lval = _a180_4071_lib_1
SIZES: 13.f : 80
>>> PROGRESS 14/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #70
=================================
Summarizing function: snprintf : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: snprintf:11.f
=======

SUMS (nm, lo, un, wr, re):	snprintf	0	0	1	1	

SS Sum:
 -> 
Vval: 0
SIZES: 11.f : 116
>>> PROGRESS 15/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #71
=================================
Summarizing function: fprintf : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fprintf:10.f
=======

SUMS (nm, lo, un, wr, re):	fprintf	0	0	1	2	

SS Sum:
 -> 
Vval: 0
SIZES: 10.f : 116
>>> PROGRESS 16/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #82
=================================
Summarizing function: open : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: open:5.f
=======

SUMS (nm, lo, un, wr, re):	open	0	0	0	1	

SS Sum:
 -> 
Vval: 0
SIZES: 5.f : 80
>>> PROGRESS 17/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #83
=================================
Summarizing function: read : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: read:20.f
=======

SUMS (nm, lo, un, wr, re):	read	0	0	1	0	

SS Sum:
 -> 
Vval: 0
SIZES: 20.f : 80
>>> PROGRESS 18/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #87
=================================
Summarizing function: close : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: close:19.f
=======

SUMS (nm, lo, un, wr, re):	close	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 19.f : 34
>>> PROGRESS 19/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #67
=================================
Summarizing function: cache_new : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_new:45.f
=======

SUMS (nm, lo, un, wr, re):	cache_new	0	0	11	6	

SS Sum:
 -> 
$SSTOP
SIZES: 45.f : 99
>>> PROGRESS 20/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #59
=================================
Summarizing function: cache_get : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 37	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_get:22.f
=======

SUMS (nm, lo, un, wr, re):	cache_get	0	2	20	19	

SS Sum:
 -> 
$SSTOP
SIZES: 22.f : 215
>>> PROGRESS 21/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #80
=================================
Summarizing function: strstr : lib.c
-----
doing symstate
Prev ldiffCache hits: 70	misses: 17

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: strstr:122.f
=======

SUMS (nm, lo, un, wr, re):	strstr	0	0	0	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*haystack)

SIZES: 122.f : 81
>>> PROGRESS 22/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #77
=================================
Summarizing function: allow_file : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: allow_file:163.f
=======

SUMS (nm, lo, un, wr, re):	allow_file	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 163.f : 208
>>> PROGRESS 23/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #79
=================================
Summarizing function: input_get_line : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 1	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: input_get_line:94.f
=======

SUMS (nm, lo, un, wr, re):	input_get_line	0	0	3	3	

SS Sum:
 -> 
Extptr (18):
  lval = (*state).buf[0]
  lval = (*$NULL)(sum)

SIZES: 94.f : 593
>>> PROGRESS 24/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #81
=================================
Summarizing function: input_init : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 4	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: input_init:93.f
=======

SUMS (nm, lo, un, wr, re):	input_init	0	0	3	0	

SS Sum:
 -> 
$SSBOT
SIZES: 93.f : 224
>>> PROGRESS 25/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #86
=================================
Summarizing function: strlen : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 1

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: strlen:92.f
=======

SUMS (nm, lo, un, wr, re):	strlen	0	0	0	1	

SS Sum:
 -> 
Vval: 0U
SIZES: 92.f : 81
>>> PROGRESS 26/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #78
=================================
Summarizing function: http_parse : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: http_parse:96.f
=======

SUMS (nm, lo, un, wr, re):	http_parse	0	0	9	7	

SS Sum:
 -> 
$SSTOP
SIZES: 96.f : 511
>>> PROGRESS 27/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #76
=================================
Summarizing function: get_request_filename : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 20	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: get_request_filename:170.f
=======

SUMS (nm, lo, un, wr, re):	get_request_filename	0	0	9	9	

SS Sum:
 -> 
Extptr (6):
  lval = (*request).url
  lval = (*$NULL)(sum)

SIZES: 170.f : 725
>>> PROGRESS 28/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #58
=================================
Summarizing function: get_request_entry : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 16	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: get_request_entry:193.f
=======

SUMS (nm, lo, un, wr, re):	get_request_entry	0	2	29	29	

SS Sum:
 -> 
$SSTOP
SIZES: 193.f : 934
>>> PROGRESS 29/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #72
=================================
Summarizing function: __errno_location : lib.c
-----
doing symstate
Prev ldiffCache hits: 53	misses: 6

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __errno_location:149.f
=======

SUMS (nm, lo, un, wr, re):	__errno_location	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 149.f : 34
>>> PROGRESS 30/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #84
=================================
Summarizing function: write : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: write:146.f
=======

SUMS (nm, lo, un, wr, re):	write	0	0	0	1	

SS Sum:
 -> 
Vval: 0
SIZES: 146.f : 82
>>> PROGRESS 31/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #57
=================================
Summarizing function: process_client_cache : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: process_client_cache:199.f
=======

SUMS (nm, lo, un, wr, re):	process_client_cache	0	2	31	33	

SS Sum:
 -> 
$SSTOP
SIZES: 199.f : 944
>>> PROGRESS 32/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #75
=================================
Summarizing function: get_request_fd : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 69	misses: 10

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: get_request_fd:175.f
=======

SUMS (nm, lo, un, wr, re):	get_request_fd	0	0	9	11	

SS Sum:
 -> 
$SSTOP
SIZES: 175.f : 808
>>> PROGRESS 33/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #74
=================================
Summarizing function: process_client_nocache : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 17	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: process_client_nocache:181.f
=======

SUMS (nm, lo, un, wr, re):	process_client_nocache	0	0	11	14	

SS Sum:
 -> 
$SSTOP
SIZES: 181.f : 808
>>> PROGRESS 34/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #85
=================================
Summarizing function: http_init : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 26	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: http_init:95.f
=======

SUMS (nm, lo, un, wr, re):	http_init	0	0	4	0	

SS Sum:
 -> 
$SSBOT
SIZES: 95.f : 439
>>> PROGRESS 35/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #56
=================================
Summarizing function: process_client : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: process_client:212.f
=======

SUMS (nm, lo, un, wr, re):	process_client	0	2	36	39	

SS Sum:
 -> 
$SSBOT
SIZES: 212.f : 153
>>> PROGRESS 36/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #3
=================================
Summarizing function: thread_process_client : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 94	misses: 11

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: thread_process_client:223.f
=======

SUMS (nm, lo, un, wr, re):	thread_process_client	0	2	37	40	

SS Sum:
 -> 
Vval: 0
SIZES: 223.f : 153
>>> PROGRESS 37/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #4
=================================
Summarizing function: unlink : lib.c
-----
doing symstate
Prev ldiffCache hits: 72	misses: 5

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: unlink:293.f
=======

SUMS (nm, lo, un, wr, re):	unlink	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 293.f : 34
>>> PROGRESS 38/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #5
=================================
Summarizing function: __builtin_strncat : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __builtin_strncat:292.f
=======

SUMS (nm, lo, un, wr, re):	__builtin_strncat	0	0	1	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*dest)

SIZES: 292.f : 111
>>> PROGRESS 39/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #6
=================================
Summarizing function: __builtin_fabs : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __builtin_fabs:291.f
=======

SUMS (nm, lo, un, wr, re):	__builtin_fabs	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 291.f : 34
>>> PROGRESS 40/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #7
=================================
Summarizing function: sigwait : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: sigwait:362.f
=======

SUMS (nm, lo, un, wr, re):	sigwait	0	0	2	1	

SS Sum:
 -> 
Vval: 0
SIZES: 362.f : 118
>>> PROGRESS 41/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #8
=================================
Summarizing function: vfprintf : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: vfprintf:433.f
=======

SUMS (nm, lo, un, wr, re):	vfprintf	0	0	0	1	

SS Sum:
 -> 
Vval: 0
SIZES: 433.f : 82
>>> PROGRESS 42/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #9
=================================
Summarizing function: __builtin_fabsl : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __builtin_fabsl:290.f
=======

SUMS (nm, lo, un, wr, re):	__builtin_fabsl	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 290.f : 34
>>> PROGRESS 43/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #10
=================================
Summarizing function: __builtin_strchr : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __builtin_strchr:289.f
=======

SUMS (nm, lo, un, wr, re):	__builtin_strchr	0	0	0	1	

SS Sum:
 -> 
Extptr (0):
  lval = (*s___0)

SIZES: 289.f : 82
>>> PROGRESS 44/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #11
=================================
Summarizing function: __builtin_strpbrk : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __builtin_strpbrk:288.f
=======

SUMS (nm, lo, un, wr, re):	__builtin_strpbrk	0	0	0	2	

SS Sum:
 -> 
Extptr (0):
  lval = (*s1)

SIZES: 288.f : 118
>>> PROGRESS 45/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #12
=================================
Summarizing function: alarm : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: alarm:359.f
=======

SUMS (nm, lo, un, wr, re):	alarm	0	0	0	0	

SS Sum:
 -> 
Vval: 0U
SIZES: 359.f : 34
>>> PROGRESS 46/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #13
=================================
Summarizing function: lseek : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: lseek:429.f
=======

SUMS (nm, lo, un, wr, re):	lseek	0	0	0	0	

SS Sum:
 -> 
Vval: offset
SIZES: 429.f : 34
>>> PROGRESS 47/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #14
=================================
Summarizing function: strerror : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: strerror:427.f
=======

SUMS (nm, lo, un, wr, re):	strerror	0	0	0	0	

SS Sum:
 -> 
Vval: "foo"
SIZES: 427.f : 34
>>> PROGRESS 48/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #15
=================================
Summarizing function: pwrite : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: pwrite:353.f
=======

SUMS (nm, lo, un, wr, re):	pwrite	0	0	0	1	

SS Sum:
 -> 
Vval: 0
SIZES: 353.f : 82
>>> PROGRESS 49/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #16
=================================
Summarizing function: pthread_sigmask : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
FUN TIMES : 
  FUN:22.f : 0.0108850002289
  FUN:45.f : 0.00785183906555
  FUN:438.f : 0.00564289093018
  FUN:212.f : 0.00433301925659
  FUN:181.f : 0.00421690940857
  FUN:96.f : 0.00376605987549
  FUN:199.f : 0.00375509262085
  FUN:94.f : 0.00323295593262
  FUN:163.f : 0.00279784202576
  FUN:68.f : 0.00206995010376
  FUN:73.f : 0.0020010471344
  FUN:193.f : 0.00196504592896
  FUN:81.f : 0.00170207023621
  FUN:175.f : 0.00163793563843
  FUN:24.f : 0.00157284736633
  FUN:170.f : 0.00148892402649
  FUN:65.f : 0.00136399269104
  FUN:79.f : 0.0012800693512
  FUN:23.f : 0.00105810165405
  FUN:15.f : 0.00102591514587
  FUN:223.f : 0.00101590156555
  FUN:75.f : 0.000962018966675
  FUN:10.f : 0.000771045684814
  FUN:13.f : 0.000552892684937
  FUN:11.f : 0.000519990921021
  FUN:122.f : 0.00050687789917
  FUN:20.f : 0.00043511390686
  FUN:5.f : 0.000426054000854
  FUN:7.f : 0.000417947769165
  FUN:295.f : 0.000394105911255
  FUN:421.f : 0.000380992889404
  FUN:93.f : 0.00032901763916
  FUN:95.f : 0.000306129455566
  FUN:366.f : 0.000305891036987
  FUN:19.f : 0.00028395652771
  FUN:288.f : 0.000238180160522
  FUN:289.f : 0.000236034393311
  FUN:362.f : 0.000231981277466
  FUN:292.f : 0.000225067138672
  FUN:92.f : 0.000213861465454
  FUN:353.f : 0.0002121925354
  FUN:146.f : 0.000210046768188
  FUN:433.f : 0.000205039978027
  FUN:429.f : 0.000141859054565
  FUN:149.f : 0.000141143798828
  FUN:293.f : 0.000136852264404
  FUN:291.f : 0.000131845474243
  FUN:359.f : 0.000131130218506
  FUN:290.f : 0.000130176544189
  FUN:427.f : 0.00012993812561
TOTAL: 0.073971
=================================
Finished an SCC (1)
=================================
Summary for function: pthread_sigmask:421.f
=======

SUMS (nm, lo, un, wr, re):	pthread_sigmask	0	0	2	2	

SS Sum:
 -> 
Vval: 0
SIZES: 421.f : 118
>>> PROGRESS 50/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #17
=================================
Summarizing function: pread : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: pread:348.f
=======

SUMS (nm, lo, un, wr, re):	pread	0	0	1	0	

SS Sum:
 -> 
Vval: 0
SIZES: 348.f : 82
>>> PROGRESS 51/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #18
=================================
Summarizing function: pthread_self : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: pthread_self:347.f
=======

SUMS (nm, lo, un, wr, re):	pthread_self	0	0	0	0	

SS Sum:
 -> 
Vval: 0UL
SIZES: 347.f : 34
>>> PROGRESS 52/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #19
=================================
Summarizing function: pthread_join : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: pthread_join:417.f
=======

SUMS (nm, lo, un, wr, re):	pthread_join	0	0	1	0	

SS Sum:
 -> 
Vval: 0
SIZES: 417.f : 82
>>> PROGRESS 53/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #20
=================================
Summarizing function: pthread_setcanceltype : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: pthread_setcanceltype:344.f
=======

SUMS (nm, lo, un, wr, re):	pthread_setcanceltype	0	0	1	0	

SS Sum:
 -> 
Vval: 0
SIZES: 344.f : 82
>>> PROGRESS 54/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #21
=================================
Summarizing function: time : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: time:342.f
=======

SUMS (nm, lo, un, wr, re):	time	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 342.f : 34
>>> PROGRESS 55/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #22
=================================
Summarizing function: fflush : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fflush:413.f
=======

SUMS (nm, lo, un, wr, re):	fflush	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 413.f : 34
>>> PROGRESS 56/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #23
=================================
Summarizing function: ftw : lib.c
-----
doing symstate
[Er]: SS call: *fn returned 0 fun(s)
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
[Er]: call: *fn returned 0 fun(s)
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: ftw:484.f
=======

SUMS (nm, lo, un, wr, re):	ftw	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 484.f : 34
>>> PROGRESS 57/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #24
=================================
Summarizing function: putchar : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: putchar:411.f
=======

SUMS (nm, lo, un, wr, re):	putchar	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 411.f : 34
>>> PROGRESS 58/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #25
=================================
Summarizing function: isdigit : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: isdigit:482.f
=======

SUMS (nm, lo, un, wr, re):	isdigit	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 482.f : 34
>>> PROGRESS 59/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #26
=================================
Summarizing function: memset : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: memset:407.f
=======

SUMS (nm, lo, un, wr, re):	memset	0	0	1	0	

SS Sum:
 -> 
Extptr (0):
  lval = (*s___0)

SIZES: 407.f : 82
>>> PROGRESS 60/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #27
=================================
Summarizing function: __builtin_strcat : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __builtin_strcat:474.f
=======

SUMS (nm, lo, un, wr, re):	__builtin_strcat	0	0	1	1	

SS Sum:
 -> 
Extptr (1):
  lval = (*dest)

SIZES: 474.f : 111
>>> PROGRESS 61/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #28
=================================
Summarizing function: dup : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: dup:327.f
=======

SUMS (nm, lo, un, wr, re):	dup	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 327.f : 34
>>> PROGRESS 62/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #30
=================================
Summarizing function: current_usecs : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: current_usecs:151.f
=======

SUMS (nm, lo, un, wr, re):	current_usecs	0	0	0	1	

SS Sum:
 -> 
$SSTOP
SIZES: 151.f : 34
>>> PROGRESS 63/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #31
=================================
Summarizing function: atoi : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: atoi:145.f
=======

SUMS (nm, lo, un, wr, re):	atoi	0	0	0	1	

SS Sum:
 -> 
Vval: (*nptr)
SIZES: 145.f : 82
>>> PROGRESS 64/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #32
=================================
Summarizing function: printf : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: printf:144.f
=======

SUMS (nm, lo, un, wr, re):	printf	0	0	0	1	

SS Sum:
 -> 
Vval: 0
SIZES: 144.f : 82
>>> PROGRESS 65/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #33
=================================
Summarizing function: htons : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: htons:143.f
=======

SUMS (nm, lo, un, wr, re):	htons	0	0	0	0	

SS Sum:
 -> 
Vval: (unsigned short)0
SIZES: 143.f : 34
>>> PROGRESS 66/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #34
=================================
Summarizing function: socket : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: socket:138.f
=======

SUMS (nm, lo, un, wr, re):	socket	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 138.f : 34
>>> PROGRESS 67/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #48
=================================
Summarizing function: cache_init : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: cache_init:21.f
=======

SUMS (nm, lo, un, wr, re):	cache_init	0	0	1	1	

SS Sum:
 -> 
$SSBOT
SIZES: 21.f : 34
>>> PROGRESS 68/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #29
=================================
Summarizing function: main : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: main:255.f
=======

SUMS (nm, lo, un, wr, re):	main	1	0	15	16	

SS Sum:
 -> 
Vval: 0
SIZES: 255.f : 263
>>> PROGRESS 69/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #35
=================================
Summarizing function: strtok : lib.c
-----
doing symstate
Prev ldiffCache hits: 53	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: strtok:397.f
=======

SUMS (nm, lo, un, wr, re):	strtok	0	0	2	1	

SS Sum:
 -> 
Extptr (0):
  lval = (*s___0)

SIZES: 397.f : 111
>>> PROGRESS 70/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #36
=================================
Summarizing function: sigemptyset : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: sigemptyset:465.f
=======

SUMS (nm, lo, un, wr, re):	sigemptyset	0	0	2	1	

SS Sum:
 -> 
Vval: 0
SIZES: 465.f : 82
>>> PROGRESS 71/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #37
=================================
Summarizing function: bzero : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: bzero:393.f
=======

SUMS (nm, lo, un, wr, re):	bzero	0	0	1	0	

SS Sum:
 -> 
$SSBOT
SIZES: 393.f : 82
>>> PROGRESS 72/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #38
=================================
Summarizing function: sigaddset : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: sigaddset:459.f
=======

SUMS (nm, lo, un, wr, re):	sigaddset	0	0	2	1	

SS Sum:
 -> 
Vval: 0
SIZES: 459.f : 82
>>> PROGRESS 73/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #55
=================================
Summarizing function: accept_loop : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: accept_loop:226.f
=======

SUMS (nm, lo, un, wr, re):	accept_loop	1	0	41	43	

SS Sum:
 -> 
$SSBOT
SIZES: 226.f : 91
>>> PROGRESS 74/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #39
=================================
Summarizing function: thread_main : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 89	misses: 8

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: thread_main:245.f
=======

SUMS (nm, lo, un, wr, re):	thread_main	1	0	42	45	

SS Sum:
 -> 
Vval: 0
SIZES: 245.f : 255
>>> PROGRESS 75/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #40
=================================
Summarizing function: connect : lib.c
-----
doing symstate
Prev ldiffCache hits: 82	misses: 4

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: connect:387.f
=======

SUMS (nm, lo, un, wr, re):	connect	0	0	1	1	

SS Sum:
 -> 
Vval: 0
SIZES: 387.f : 82
>>> PROGRESS 76/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #41
=================================
Summarizing function: thread_main_autospawn : knot_comb.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: thread_main_autospawn:242.f
=======

SUMS (nm, lo, un, wr, re):	thread_main_autospawn	1	0	41	43	

SS Sum:
 -> 
Vval: 0
SIZES: 242.f : 91
>>> PROGRESS 77/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #42
=================================
Summarizing function: hstrerror : lib.c
-----
doing symstate
Prev ldiffCache hits: 82	misses: 2

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: hstrerror:384.f
=======

SUMS (nm, lo, un, wr, re):	hstrerror	0	0	0	0	

SS Sum:
 -> 
Vval: "foo"
SIZES: 384.f : 34
>>> PROGRESS 78/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #43
=================================
Summarizing function: fclose : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fclose:312.f
=======

SUMS (nm, lo, un, wr, re):	fclose	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 312.f : 34
>>> PROGRESS 79/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #44
=================================
Summarizing function: inet_addr : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: inet_addr:454.f
=======

SUMS (nm, lo, un, wr, re):	inet_addr	0	0	0	1	

SS Sum:
 -> 
Vval: ss
SIZES: 454.f : 82
>>> PROGRESS 80/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #45
=================================
Summarizing function: fopen64 : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fopen64:309.f
=======

SUMS (nm, lo, un, wr, re):	fopen64	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 309.f : 34
>>> PROGRESS 81/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #46
=================================
Summarizing function: send : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: send:378.f
=======

SUMS (nm, lo, un, wr, re):	send	0	0	0	1	

SS Sum:
 -> 
Vval: 0
SIZES: 378.f : 82
>>> PROGRESS 82/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #47
=================================
Summarizing function: fopen : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fopen:306.f
=======

SUMS (nm, lo, un, wr, re):	fopen	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 306.f : 34
>>> PROGRESS 83/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #49
=================================
Summarizing function: sprintf : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: sprintf:445.f
=======

SUMS (nm, lo, un, wr, re):	sprintf	0	0	1	1	

SS Sum:
 -> 
Vval: 0
SIZES: 445.f : 118
>>> PROGRESS 84/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #50
=================================
Summarizing function: recv : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: recv:373.f
=======

SUMS (nm, lo, un, wr, re):	recv	0	0	1	0	

SS Sum:
 -> 
Vval: 0
SIZES: 373.f : 82
>>> PROGRESS 85/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #51
=================================
Summarizing function: fread : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: fread:301.f
=======

SUMS (nm, lo, un, wr, re):	fread	0	0	1	0	

SS Sum:
 -> 
Vval: 0U
SIZES: 301.f : 82
>>> PROGRESS 86/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #52
=================================
Summarizing function: __h_errno_location : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: __h_errno_location:372.f
=======

SUMS (nm, lo, un, wr, re):	__h_errno_location	0	0	0	0	

SS Sum:
 -> 
Vval: 0
SIZES: 372.f : 34
>>> PROGRESS 87/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #53
=================================
Summarizing function: gethostbyname : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: gethostbyname:369.f
=======

SUMS (nm, lo, un, wr, re):	gethostbyname	0	0	0	1	

SS Sum:
 -> 
Mustptr -> lval = r
SIZES: 369.f : 82
>>> PROGRESS 88/89 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #54
=================================
Summarizing function: getopt : lib.c
-----
doing symstate
Prev ldiffCache hits: 0	misses: 0

Prev GAPostCache hits: 0	misses: 0

doing lockset
doing guarded access
=================================
Finished an SCC (1)
=================================
Summary for function: getopt:440.f
=======

SUMS (nm, lo, un, wr, re):	getopt	0	0	0	2	

SS Sum:
 -> 
Vval: (*((*argv)))
SIZES: 440.f : 122
>>> PROGRESS 89/89 SCCs DONE!

=================================
getting next SCC from server
Bottomup analysis complete
-----



Beginning Thread Analysis:
-----
[Er]: No entry-points file!
Expected # thread-creation site pairs: 6
checking a thread-creation pair
Prev ldiffCache hits: 0	misses: 0

doing symstate
Prev ldiffCache hits: 168	misses: 3

doing symstate
now checking thread roots: thread_main(245.f), thread_main(245.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
now checking thread roots: thread_main(242.f), thread_main_autospawn(242.f)
now checking thread roots: thread_main_autospawn(245.f), thread_main(245.f)
now checking thread roots: thread_main_autospawn(242.f), thread_main_autospawn(242.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 168	misses: 3

doing symstate
Prev ldiffCache hits: 168	misses: 3

doing symstate
now checking thread roots: thread_main(223.f), thread_process_client(223.f)
New race added to race reports
now checking thread roots: thread_main_autospawn(223.f), thread_process_client(223.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 74	misses: 3

doing symstate
now checking thread roots: thread_main(255.f), main(255.f)
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
New race added to race reports
now checking thread roots: thread_main_autospawn(255.f), main(255.f)
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 168	misses: 3

doing symstate
Prev ldiffCache hits: 74	misses: 3

doing symstate
now checking thread roots: thread_process_client(223.f), thread_process_client(223.f)
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
Prev ldiffCache hits: 74	misses: 3

doing symstate
now checking thread roots: thread_process_client(255.f), main(255.f)
New race added to race reports
done with pair, sending notification
checking a thread-creation pair
now checking thread roots: main(255.f), main(255.f)
done with pair, sending notification
completed all thread pairs
Sorting races

Printing races

****
Possible race between access to:

g_cache_hits @ knot_comb.c:769 and
g_cache_hits @ knot_comb.c:769
	Cluster ID: 41
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:487:(22.f)] and
	[knot_comb.c:1256:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {g_cache_mutex#g:33} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_cache_hits @ knot_comb.c:769 and
g_cache_hits @ knot_comb.c:769
	Cluster ID: 35
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:487:(22.f)] and
	[knot_comb.c:1257:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {g_cache_mutex#g:33} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_cache_misses @ knot_comb.c:770 and
g_cache_misses @ knot_comb.c:770
	Cluster ID: 42
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:490:(22.f)] and
	[knot_comb.c:1258:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {g_cache_mutex#g:33} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_cache_misses @ knot_comb.c:770 and
g_cache_misses @ knot_comb.c:770
	Cluster ID: 36
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:490:(22.f)] and
	[knot_comb.c:1259:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {g_cache_mutex#g:33} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_hash @ knot_comb.c:263 and
g_hash @ knot_comb.c:263
	Cluster ID: 48
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:372:(65.f), knot_comb.c:423:(68.f), knot_comb.c:446:(75.f)] and
	[knot_comb.c:472:(21.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {g_cache_mutex#g:33} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a296_8660_knot_comb_1 @ knot_comb.c:268 and
_a296_8660_knot_comb_1 @ knot_comb.c:268
	Cluster ID: 1
	Escapes? true / true 
	Accessed at locs:
	[lib.c:366:(11.f), lib.c:173:(20.f)] and
	[lib.c:366:(11.f), lib.c:173:(20.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1 @ knot_comb.c:567 and
_a567_17365_knot_comb_1 @ knot_comb.c:567
	Cluster ID: 21
	Escapes? true / true 
	Accessed at locs:
	[lib.c:299:(7.f)] and
	[knot_comb.c:598:(96.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.buf[0] @ knot_comb.c:567 and
_a567_17365_knot_comb_1.buf[0] @ knot_comb.c:567
	Cluster ID: 2
	Escapes? true / true 
	Accessed at locs:
	[lib.c:173:(20.f), knot_comb.c:694:(94.f), knot_comb.c:698:(94.f)] and
	[lib.c:173:(20.f), knot_comb.c:694:(94.f), knot_comb.c:698:(94.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.socket @ knot_comb.c:567 and
_a567_17365_knot_comb_1.socket @ knot_comb.c:567
	Cluster ID: 3
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:669:(93.f)] and
	[knot_comb.c:669:(93.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.socket @ knot_comb.c:567 and
_a567_17365_knot_comb_1.socket @ knot_comb.c:567
	Cluster ID: 22
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:669:(93.f)] and
	[knot_comb.c:709:(94.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.used @ knot_comb.c:567 and
_a567_17365_knot_comb_1.used @ knot_comb.c:567
	Cluster ID: 4
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:667:(93.f), knot_comb.c:701:(94.f), knot_comb.c:703:(94.f), knot_comb.c:722:(94.f)] and
	[knot_comb.c:667:(93.f), knot_comb.c:701:(94.f), knot_comb.c:703:(94.f), knot_comb.c:722:(94.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.used @ knot_comb.c:567 and
_a567_17365_knot_comb_1.used @ knot_comb.c:567
	Cluster ID: 23
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:667:(93.f), knot_comb.c:701:(94.f), knot_comb.c:703:(94.f), knot_comb.c:722:(94.f)] and
	[knot_comb.c:685:(94.f), knot_comb.c:688:(94.f), knot_comb.c:702:(94.f), knot_comb.c:718:(94.f), knot_comb.c:719:(94.f), knot_comb.c:721:(94.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.valid @ knot_comb.c:567 and
_a567_17365_knot_comb_1.valid @ knot_comb.c:567
	Cluster ID: 5
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:668:(93.f), knot_comb.c:704:(94.f), knot_comb.c:715:(94.f), knot_comb.c:721:(94.f)] and
	[knot_comb.c:668:(93.f), knot_comb.c:704:(94.f), knot_comb.c:715:(94.f), knot_comb.c:721:(94.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a567_17365_knot_comb_1.valid @ knot_comb.c:567 and
_a567_17365_knot_comb_1.valid @ knot_comb.c:567
	Cluster ID: 24
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:668:(93.f), knot_comb.c:704:(94.f), knot_comb.c:715:(94.f), knot_comb.c:721:(94.f)] and
	[knot_comb.c:688:(94.f), knot_comb.c:691:(94.f), knot_comb.c:702:(94.f), knot_comb.c:707:(94.f), knot_comb.c:709:(94.f), knot_comb.c:715:(94.f), knot_comb.c:719:(94.f), knot_comb.c:721:(94.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

g_spawn_on_demand @ knot_comb.c:761 and
g_spawn_on_demand @ knot_comb.c:761
	Cluster ID: 49
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1085:(226.f)] and
	[knot_comb.c:1189:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_open @ knot_comb.c:765 and
g_conn_open @ knot_comb.c:765
	Cluster ID: 6
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1077:(226.f)] and
	[knot_comb.c:1077:(226.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

g_conn_open @ knot_comb.c:765 and
g_conn_open @ knot_comb.c:765
	Cluster ID: 43
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1077:(226.f)] and
	[knot_comb.c:1249:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_open @ knot_comb.c:765 and
g_conn_open @ knot_comb.c:765
	Cluster ID: 37
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1077:(226.f)] and
	[knot_comb.c:1250:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_fail @ knot_comb.c:766 and
g_conn_fail @ knot_comb.c:766
	Cluster ID: 7
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1017:(212.f), knot_comb.c:1040:(212.f), knot_comb.c:1097:(226.f)] and
	[knot_comb.c:1017:(212.f), knot_comb.c:1040:(212.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

g_conn_fail @ knot_comb.c:766 and
g_conn_fail @ knot_comb.c:766
	Cluster ID: 44
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1017:(212.f), knot_comb.c:1040:(212.f)] and
	[knot_comb.c:1253:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_fail @ knot_comb.c:766 and
g_conn_fail @ knot_comb.c:766
	Cluster ID: 38
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1017:(212.f), knot_comb.c:1040:(212.f)] and
	[knot_comb.c:1254:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_succeed @ knot_comb.c:767 and
g_conn_succeed @ knot_comb.c:767
	Cluster ID: 8
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1015:(212.f)] and
	[knot_comb.c:1015:(212.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

g_conn_succeed @ knot_comb.c:767 and
g_conn_succeed @ knot_comb.c:767
	Cluster ID: 45
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1015:(212.f)] and
	[knot_comb.c:1251:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_succeed @ knot_comb.c:767 and
g_conn_succeed @ knot_comb.c:767
	Cluster ID: 39
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1015:(212.f)] and
	[knot_comb.c:1252:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_conn_active @ knot_comb.c:768 and
g_conn_active @ knot_comb.c:768
	Cluster ID: 52
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1050:(223.f)] and
	[knot_comb.c:1050:(223.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

****
Possible race between access to:

g_conn_active @ knot_comb.c:768 and
g_conn_active @ knot_comb.c:768
	Cluster ID: 53
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1050:(223.f)] and
	[knot_comb.c:1255:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

g_conn_active @ knot_comb.c:768 and
g_conn_active @ knot_comb.c:768
	Cluster ID: 34
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1078:(226.f), knot_comb.c:1098:(226.f), knot_comb.c:1104:(226.f)] and
	[knot_comb.c:1050:(223.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
****
Possible race between access to:

g_conn_active @ knot_comb.c:768 and
g_conn_active @ knot_comb.c:768
	Cluster ID: 9
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1078:(226.f), knot_comb.c:1098:(226.f), knot_comb.c:1104:(226.f)] and
	[knot_comb.c:1078:(226.f), knot_comb.c:1098:(226.f), knot_comb.c:1104:(226.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

g_conn_active @ knot_comb.c:768 and
g_conn_active @ knot_comb.c:768
	Cluster ID: 46
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1078:(226.f), knot_comb.c:1098:(226.f), knot_comb.c:1104:(226.f)] and
	[knot_comb.c:1255:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_bytes_sent @ knot_comb.c:771 and
g_bytes_sent @ knot_comb.c:771
	Cluster ID: 10
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:906:(181.f), knot_comb.c:963:(199.f), knot_comb.c:1027:(212.f)] and
	[knot_comb.c:906:(181.f), knot_comb.c:963:(199.f), knot_comb.c:1027:(212.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

g_bytes_sent @ knot_comb.c:771 and
g_bytes_sent @ knot_comb.c:771
	Cluster ID: 47
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:906:(181.f), knot_comb.c:963:(199.f), knot_comb.c:1027:(212.f)] and
	[knot_comb.c:1247:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

g_bytes_sent @ knot_comb.c:771 and
g_bytes_sent @ knot_comb.c:771
	Cluster ID: 40
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:906:(181.f), knot_comb.c:963:(199.f), knot_comb.c:1027:(212.f)] and
	[knot_comb.c:1248:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

_a863_25945_knot_comb_1 @ knot_comb.c:863 and
_a863_25945_knot_comb_1 @ knot_comb.c:863
	Cluster ID: 25
	Escapes? true / true 
	Accessed at locs:
	[lib.c:168:(146.f)] and
	[lib.c:299:(7.f), lib.c:173:(20.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	made empty at: knot_comb.c:990
	lval 1: [REP: 1]
	lval 2: [REP: 1]
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	made empty at: knot_comb.c:990
	lval 1: [REP: 1]
	lval 2: [REP: 1]
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1 @ knot_comb.c:994 and
_a994_28837_knot_comb_1 @ knot_comb.c:994
	Cluster ID: 26
	Escapes? true / true 
	Accessed at locs:
	[lib.c:299:(7.f)] and
	[knot_comb.c:781:(163.f), knot_comb.c:786:(163.f), knot_comb.c:792:(163.f), knot_comb.c:793:(163.f), knot_comb.c:798:(163.f), knot_comb.c:799:(163.f), knot_comb.c:804:(163.f), knot_comb.c:805:(163.f), knot_comb.c:810:(163.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1 @ knot_comb.c:994 and
_a994_28837_knot_comb_1 @ knot_comb.c:994
	Cluster ID: 0
	Escapes? true / true 
	Accessed at locs:
	[lib.c:299:(7.f)] and
	[lib.c:299:(7.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main

Different possible paths & LS (first 4):

(0)
	lval 1: _a944_27650_knot_comb_1
	lval 2: _a944_27650_knot_comb_1
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
(1)
	lval 1: _a863_25945_knot_comb_1
	lval 2: _a863_25945_knot_comb_1
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
(2)
	lval 1: _a567_17365_knot_comb_1
	lval 2: _a567_17365_knot_comb_1
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
(3)
	lval 1: _a268_7952_knot_comb_1
	lval 2: _a268_7952_knot_comb_1
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.closed @ knot_comb.c:994 and
_a994_28837_knot_comb_1.closed @ knot_comb.c:994
	Cluster ID: 11
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:562:(95.f), knot_comb.c:594:(96.f)] and
	[knot_comb.c:562:(95.f), knot_comb.c:594:(96.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.closed @ knot_comb.c:994 and
_a994_28837_knot_comb_1.closed @ knot_comb.c:994
	Cluster ID: 27
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:562:(95.f), knot_comb.c:594:(96.f)] and
	[knot_comb.c:836:(170.f), knot_comb.c:1021:(212.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.socket @ knot_comb.c:994 and
_a994_28837_knot_comb_1.socket @ knot_comb.c:994
	Cluster ID: 12
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:563:(95.f)] and
	[knot_comb.c:563:(95.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.socket @ knot_comb.c:994 and
_a994_28837_knot_comb_1.socket @ knot_comb.c:994
	Cluster ID: 28
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:563:(95.f)] and
	[knot_comb.c:587:(96.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.url[0] @ knot_comb.c:994 and
_a994_28837_knot_comb_1.url[0] @ knot_comb.c:994
	Cluster ID: 13
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:560:(95.f), knot_comb.c:588:(96.f)] and
	[knot_comb.c:560:(95.f), knot_comb.c:588:(96.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.url[0] @ knot_comb.c:994 and
_a994_28837_knot_comb_1.url[0] @ knot_comb.c:994
	Cluster ID: 29
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:560:(95.f), knot_comb.c:588:(96.f)] and
	[knot_comb.c:599:(96.f), knot_comb.c:602:(96.f), knot_comb.c:644:(96.f), knot_comb.c:837:(170.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.version @ knot_comb.c:994 and
_a994_28837_knot_comb_1.version @ knot_comb.c:994
	Cluster ID: 14
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:561:(95.f), knot_comb.c:589:(96.f), knot_comb.c:647:(96.f)] and
	[knot_comb.c:561:(95.f), knot_comb.c:589:(96.f), knot_comb.c:647:(96.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a994_28837_knot_comb_1.version @ knot_comb.c:994 and
_a994_28837_knot_comb_1.version @ knot_comb.c:994
	Cluster ID: 30
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:561:(95.f), knot_comb.c:589:(96.f), knot_comb.c:647:(96.f)] and
	[knot_comb.c:1034:(212.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

attr_init_done @ knot_comb.c:1056 and
attr_init_done @ knot_comb.c:1056
	Cluster ID: 31
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1092:(226.f)] and
	[knot_comb.c:1086:(226.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

attr_init_done @ knot_comb.c:1056 and
attr_init_done @ knot_comb.c:1056
	Cluster ID: 15
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1092:(226.f)] and
	[knot_comb.c:1092:(226.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a1059_30241_knot_comb_1 @ knot_comb.c:1059 and
_a1059_30241_knot_comb_1 @ knot_comb.c:1059
	Cluster ID: 16
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1079:(226.f)] and
	[knot_comb.c:1079:(226.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a1059_30241_knot_comb_2 @ knot_comb.c:1059 and
_a1059_30241_knot_comb_2 @ knot_comb.c:1059
	Cluster ID: 17
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1069:(226.f)] and
	[knot_comb.c:1069:(226.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

_a1227_34524_knot_comb_1.id @ knot_comb.c:1132 and
_a1227_34524_knot_comb_1.id @ knot_comb.c:1132
	Cluster ID: 50
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1125:(245.f)] and
	[knot_comb.c:1231:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

_a1227_34524_knot_comb_1.s @ knot_comb.c:1132 and
_a1227_34524_knot_comb_1.s @ knot_comb.c:1132
	Cluster ID: 51
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:1126:(245.f)] and
	[knot_comb.c:1232:(255.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

_a180_4071_lib_1 @ lib.c:179 and
_a180_4071_lib_1 @ lib.c:179
	Cluster ID: 18
	Escapes? true / true 
	Accessed at locs:
	[lib.c:181:(13.f)] and
	[lib.c:181:(13.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

$NULL @ :-1 and
$NULL @ :-1
	Cluster ID: 32
	Escapes? true / true 
	Accessed at locs:
	[lib.c:299:(7.f), lib.c:366:(11.f), lib.c:173:(20.f)] and
	[lib.c:158:(5.f), lib.c:181:(13.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
	made empty at: knot_comb.c:494
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	made empty at: knot_comb.c:494
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

[REP: 12] and
[REP: 12]
	Cluster ID: 20
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:610:(96.f), knot_comb.c:615:(96.f), knot_comb.c:637:(96.f)] and
	[knot_comb.c:610:(96.f), knot_comb.c:615:(96.f), knot_comb.c:637:(96.f)]

	Confidence: used PTA nodes lblSet(0, 0)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client
(1)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

[REP: 12] and
[REP: 12]
	Cluster ID: 33
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:610:(96.f), knot_comb.c:615:(96.f), knot_comb.c:637:(96.f)] and
	[lib.c:317:(92.f)]

	Confidence: used PTA nodes lblSet(0, 0)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1094 31143 w/ func: thread_process_client

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
****
Possible race between access to:

[REP: 1].refs and
[REP: 1].refs
	Cluster ID: 19
	Escapes? true / true 
	Accessed at locs:
	[knot_comb.c:511:(23.f), knot_comb.c:525:(24.f), knot_comb.c:526:(24.f)] and
	[knot_comb.c:511:(23.f), knot_comb.c:525:(24.f)]

	Confidence: used PTA nodes lblSet(19, 19)

LS for 1st access:
L+ = empty;
	made empty at: knot_comb.c:990
LS for 2nd access:
L+ = empty;
	made empty at: knot_comb.c:990
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(1)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1217 34086 w/ func: thread_main_autospawn
(2)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main
(3)
	Th. 1 spawned: knot_comb.c:1233 34783 w/ func: thread_main
	Th. 2 spawned: knot_comb.c:1233 34783 w/ func: thread_main


$$$$$$
Total Warnings: 54


Printing Alias assumptions used by warnings
-----
nc	20	[REP: 12]#g/[REP: 12]#g	0	0
nc	33	[REP: 12]#g/[REP: 12]#g	0	0
nc	19	[REP: 1].refs#g/[REP: 1].refs#g	19	19


writeState: writing new state for Andersen to /home/jan/research/relay-race/racetests/knot/ciltrees/.pta_temp.anders

writeState: Not needed for Steens PTA
Elapsed time (secs): 0.312019
Top heap size (MB): 3
Current heap size (MB): 3
Lifetime allocated bytes (MB): 28
Collections -- minor: 23 major: 6 compactions: 0
Bytes per word: 4
Exhausted tries: 1
return value is 0
ran 1 times
cleared status file: /tmp/temp.zqEGh4
Tue Jan 19 22:00:59 PST 2010
