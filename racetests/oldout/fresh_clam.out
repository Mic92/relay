Thu Jul  5 17:41:31 PDT 2007
reserved status file: /tmp/temp.qJtvEX
running analysis on ../tests/fresh_clam/ciltrees/
Checking for data races
-----
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: SYM_EX
Done reading config file
myIP: 127.0.0.1
using /tmp/relay_scratch to store acquired files
using: /tmp/temp.qJtvEX to track status
Initializing Steensgaard AA info
Loading function info
Using old PTA results
Old PTA results loaded
Reached end of ../tests/fresh_clam/ciltrees/calls.cil call graph file
Num funcs: 680
summary database will use:
	../tests/fresh_clam/ciltrees/relay_sums
Checking left-over state in rs
Checking left-over state in ss
file server will use: 14440
trying to clear old summaries / local srcs, etc.
Starting bottomup analysis
-----
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #0
=================================
Summarizing function: mspack_version : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6490
=======

SUMS (fk, lo, un, wr, re):	6490	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 1/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #1
=================================
Summarizing function: mspack_sys_selftest_internal : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6489
=======

SUMS (fk, lo, un, wr, re):	6489	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 2/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #2
=================================
Summarizing function: cabd_param : int (struct mscab_decompressor * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5870
=======

SUMS (fk, lo, un, wr, re):	5870	0	0	1	0	

Value :: $SSTOP

>>> PROGRESS 3/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #166
=================================
Summarizing function: msp_copy : void (void * , void * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6557
=======

SUMS (fk, lo, un, wr, re):	6557	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 4/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #168
=================================
Summarizing function: msp_seek : int (struct mspack_file * , long , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6535
=======

SUMS (fk, lo, un, wr, re):	6535	0	0	0	1	

Value :: Vval: 
	-1

>>> PROGRESS 5/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #169
=================================
Summarizing function: cabd_checksum : unsigned int (u_char * , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5866
=======

SUMS (fk, lo, un, wr, re):	5866	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 6/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #170
=================================
Summarizing function: msp_open : struct mspack_file *(struct mspack_system * , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6503
=======

SUMS (fk, lo, un, wr, re):	6503	0	0	3	1	

Value :: Mustptr: 
	Cell :: lval = _a45075_1543196_freshclam_comb ; isSum = false

>>> PROGRESS 7/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #171
=================================
Summarizing function: lzxd_set_output_length : void (struct lzxd_stream * , long )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5846
=======

SUMS (fk, lo, un, wr, re):	5846	0	0	1	0	

Value :: $SSBOT

>>> PROGRESS 8/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #507
=================================
Summarizing function: cli_dbgmsg : void (char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 847
=======

SUMS (fk, lo, un, wr, re):	847	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 9/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #172
=================================
Summarizing function: msp_msg : void (struct mspack_file * , char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6546
=======

SUMS (fk, lo, un, wr, re):	6546	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 10/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #173
=================================
Summarizing function: msp_read : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6519
=======

SUMS (fk, lo, un, wr, re):	6519	0	0	0	1	

Value :: Vval: 
	-1

>>> PROGRESS 11/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #174
=================================
Summarizing function: msp_write : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6527
=======

SUMS (fk, lo, un, wr, re):	6527	0	0	0	1	

Value :: Vval: 
	-1

>>> PROGRESS 12/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #379
=================================
Summarizing function: msp_close : void (struct mspack_file * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6516
=======

SUMS (fk, lo, un, wr, re):	6516	0	0	0	1	

Value :: $SSBOT

>>> PROGRESS 13/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (3) #164
=================================
Summarizing function: cabd_sys_read : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_write : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_read_block : int (struct mspack_system * , struct mscabd_decompress_state * , int * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_write : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_read : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_read_block : int (struct mspack_system * , struct mscabd_decompress_state * , int * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_write : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_read : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_read_block : int (struct mspack_system * , struct mscabd_decompress_state * , int * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cabd_sys_write : int (struct mspack_file * , void * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (3)
=================================
Summary for function: 5863
=======

SUMS (fk, lo, un, wr, re):	5863	0	0	13	28	

Value :: $SSTOP

Summary for function: 5864
=======

SUMS (fk, lo, un, wr, re):	5864	0	0	13	24	

Value :: $SSTOP

Summary for function: 5865
=======

SUMS (fk, lo, un, wr, re):	5865	0	0	18	28	

Value :: $SSTOP

>>> PROGRESS 14/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #3
=================================
Summarizing function: noned_decompress : int (struct noned_state * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5868
=======

SUMS (fk, lo, un, wr, re):	5868	0	0	12	27	

Value :: $SSTOP

>>> PROGRESS 15/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #385
=================================
Summarizing function: msp_free : void (void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6555
=======

SUMS (fk, lo, un, wr, re):	6555	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 16/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #506
=================================
Summarizing function: cli_errmsg : void (char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 919
=======

SUMS (fk, lo, un, wr, re):	919	0	0	0	1	

Value :: $SSBOT

>>> PROGRESS 17/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #505
=================================
Summarizing function: cli_calloc : void *(unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 848
=======

SUMS (fk, lo, un, wr, re):	848	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 18/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #387
=================================
Summarizing function: msp_alloc : void *(struct mspack_system * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6551
=======

SUMS (fk, lo, un, wr, re):	6551	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 19/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #6
=================================
Summarizing function: cabd_merge : int (struct mscab_decompressor * , struct mscabd_cabinet * , struct mscabd_cabinet * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5859
=======

SUMS (fk, lo, un, wr, re):	5859	0	0	16	39	

Value :: $SSTOP

>>> PROGRESS 20/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #4
=================================
Summarizing function: cabd_append : int (struct mscab_decompressor * , struct mscabd_cabinet * , struct mscabd_cabinet * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5858
=======

SUMS (fk, lo, un, wr, re):	5858	0	0	7	16	

Value :: $SSTOP

>>> PROGRESS 21/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #5
=================================
Summarizing function: cabd_prepend : int (struct mscab_decompressor * , struct mscabd_cabinet * , struct mscabd_cabinet * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5857
=======

SUMS (fk, lo, un, wr, re):	5857	0	0	7	16	

Value :: $SSTOP

>>> PROGRESS 22/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #130
=================================
Summarizing function: msp_tell : long (struct mspack_file * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6541
=======

SUMS (fk, lo, un, wr, re):	6541	0	0	0	1	

Value :: Vval: 
	0L

>>> PROGRESS 23/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #125
=================================
Summarizing function: mspack_sys_filelen : int (struct mspack_system * , struct mspack_file * , time_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5837
=======

SUMS (fk, lo, un, wr, re):	5837	0	0	1	0	

Value :: $SSTOP

>>> PROGRESS 24/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #129
=================================
Summarizing function: cabd_read_string : char *(struct mspack_system * , struct mspack_file * , struct mscabd_cabinet_p * , int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5853
=======

SUMS (fk, lo, un, wr, re):	5853	0	0	13	23	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 25/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #128
=================================
Summarizing function: cabd_read_headers : int (struct mspack_system * , struct mspack_file * , struct mscabd_cabinet_p * , long , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5852
=======

SUMS (fk, lo, un, wr, re):	5852	0	0	50	33	

Value :: $SSTOP

>>> PROGRESS 26/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #381
=================================
Summarizing function: noned_free : void (struct noned_state * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5869
=======

SUMS (fk, lo, un, wr, re):	5869	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 27/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #382
=================================
Summarizing function: mszipd_free : void (struct mszipd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5841
=======

SUMS (fk, lo, un, wr, re):	5841	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 28/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #383
=================================
Summarizing function: qtmd_free : void (struct qtmd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5844
=======

SUMS (fk, lo, un, wr, re):	5844	0	0	0	3	

Value :: $SSBOT

>>> PROGRESS 29/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #384
=================================
Summarizing function: lzxd_free : void (struct lzxd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5848
=======

SUMS (fk, lo, un, wr, re):	5848	0	0	0	3	

Value :: $SSBOT

>>> PROGRESS 30/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #380
=================================
Summarizing function: cabd_free_decomp : void (struct mscab_decompressor_p * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5862
=======

SUMS (fk, lo, un, wr, re):	5862	0	0	2	14	

Value :: $SSBOT

>>> PROGRESS 31/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #131
=================================
Summarizing function: cabd_close : void (struct mscab_decompressor * , struct mscabd_cabinet * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5851
=======

SUMS (fk, lo, un, wr, re):	5851	0	0	3	20	

Value :: $SSBOT

>>> PROGRESS 32/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #126
=================================
Summarizing function: cabd_find : int (struct mscab_decompressor_p * , u_char * , struct mspack_file * , char * , int , long , unsigned int * , struct mscabd_cabinet_p ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5856
=======

SUMS (fk, lo, un, wr, re):	5856	0	0	42	35	

Value :: $SSTOP

>>> PROGRESS 33/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #7
=================================
Summarizing function: cabd_search : struct mscabd_cabinet *(struct mscab_decompressor * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5854
=======

SUMS (fk, lo, un, wr, re):	5854	0	0	39	36	

Value :: $SSTOP

>>> PROGRESS 34/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #8
=================================
Summarizing function: cabd_open : struct mscabd_cabinet *(struct mscab_decompressor * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5849
=======

SUMS (fk, lo, un, wr, re):	5849	0	0	37	32	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 35/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #10
=================================
Summarizing function: qtmd_update_model : void (struct qtmd_model * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6413
=======

SUMS (fk, lo, un, wr, re):	6413	0	0	3	4	

Value :: $SSBOT

>>> PROGRESS 36/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #11
=================================
Summarizing function: qtmd_read_input : int (struct qtmd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6400
=======

SUMS (fk, lo, un, wr, re):	6400	0	0	15	27	

Value :: $SSTOP

>>> PROGRESS 37/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #9
=================================
Summarizing function: qtmd_decompress : int (struct qtmd_stream * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5843
=======

SUMS (fk, lo, un, wr, re):	5843	0	0	36	76	

Value :: $SSTOP

>>> PROGRESS 38/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #14
=================================
Summarizing function: mszipd_flush_window : int (struct mszipd_stream * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6376
=======

SUMS (fk, lo, un, wr, re):	6376	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 39/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #16
=================================
Summarizing function: make_decode_table___0 : int (unsigned int , unsigned int , unsigned char * , unsigned short * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6266
=======

SUMS (fk, lo, un, wr, re):	6266	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 40/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #17
=================================
Summarizing function: zipd_read_input : int (struct mszipd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6262
=======

SUMS (fk, lo, un, wr, re):	6262	0	0	15	27	

Value :: $SSTOP

>>> PROGRESS 41/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #15
=================================
Summarizing function: zip_read_lens : int (struct mszipd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6282
=======

SUMS (fk, lo, un, wr, re):	6282	0	0	20	32	

Value :: $SSTOP

>>> PROGRESS 42/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #13
=================================
Summarizing function: inflate___0 : int (struct mszipd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6320
=======

SUMS (fk, lo, un, wr, re):	6320	0	0	24	45	

Value :: $SSTOP

>>> PROGRESS 43/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #12
=================================
Summarizing function: mszipd_decompress : int (struct mszipd_stream * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5840
=======

SUMS (fk, lo, un, wr, re):	5840	0	0	26	49	

Value :: $SSTOP

>>> PROGRESS 44/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #18
=================================
Summarizing function: messageClearMarkers : void (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4111
=======

SUMS (fk, lo, un, wr, re):	4111	0	0	4	3	

Value :: $SSBOT

>>> PROGRESS 45/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #431
=================================
Summarizing function: cli_malloc : void *(unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 920
=======

SUMS (fk, lo, un, wr, re):	920	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 46/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #360
=================================
Summarizing function: lineCreate : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4104
=======

SUMS (fk, lo, un, wr, re):	4104	0	0	1	1	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 47/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #362
=================================
Summarizing function: lineGetData : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3354
=======

SUMS (fk, lo, un, wr, re):	3354	0	0	0	0	

Value :: Extptr (1): 
	Cell :: lval = (*line) ; isSum = false


>>> PROGRESS 48/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #359
=================================
Summarizing function: lineLink : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4105
=======

SUMS (fk, lo, un, wr, re):	4105	0	0	2	3	

Value :: Extptr (4): 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false
	Cell :: lval = (*line) ; isSum = false


>>> PROGRESS 49/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #363
=================================
Summarizing function: cli_filetype : cli_file_t (char * , size_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2508
=======

SUMS (fk, lo, un, wr, re):	2508	0	0	0	8	

Value :: $SSTOP

>>> PROGRESS 50/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #364
=================================
Summarizing function: isuuencodebegin : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3380
=======

SUMS (fk, lo, un, wr, re):	3380	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 51/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #367
=================================
Summarizing function: strip : size_t (char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3403
=======

SUMS (fk, lo, un, wr, re):	3403	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 52/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #366
=================================
Summarizing function: strstrip : unsigned int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3353
=======

SUMS (fk, lo, un, wr, re):	3353	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 53/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #368
=================================
Summarizing function: push : int (LINK1 * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4680
=======

SUMS (fk, lo, un, wr, re):	4680	0	0	3	4	

Value :: $SSTOP

>>> PROGRESS 54/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #369
=================================
Summarizing function: pop : int (LINK1 * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4681
=======

SUMS (fk, lo, un, wr, re):	4681	0	0	1	3	

Value :: $SSTOP

>>> PROGRESS 55/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #516
=================================
Summarizing function: tolower__extinline : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 112
=======

SUMS (fk, lo, un, wr, re):	112	0	0	0	0	

Value :: Vval: 
	__c

>>> PROGRESS 56/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #370
=================================
Summarizing function: compare : unsigned int (char * , char ** , char * , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4682
=======

SUMS (fk, lo, un, wr, re):	4682	0	0	4	2	

Value :: $SSTOP

>>> PROGRESS 57/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #406
=================================
Summarizing function: strcasecmp : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1916
=======

SUMS (fk, lo, un, wr, re):	1916	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 58/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #365
=================================
Summarizing function: simil : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4126
=======

SUMS (fk, lo, un, wr, re):	4126	0	0	7	9	

Value :: $SSTOP

>>> PROGRESS 59/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #361
=================================
Summarizing function: messageIsEncoding : void (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4115
=======

SUMS (fk, lo, un, wr, re):	4115	0	0	12	23	

Value :: $SSBOT

>>> PROGRESS 60/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #293
=================================
Summarizing function: messageAddLine : int (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3369
=======

SUMS (fk, lo, un, wr, re):	3369	0	0	19	26	

Value :: $SSTOP

>>> PROGRESS 61/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #19
=================================
Summarizing function: messageAddStrAtTop : int (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4108
=======

SUMS (fk, lo, un, wr, re):	4108	0	0	17	27	

Value :: $SSTOP

>>> PROGRESS 62/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #454
=================================
Summarizing function: cli_warnmsg : void (char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 970
=======

SUMS (fk, lo, un, wr, re):	970	0	0	0	1	

Value :: $SSBOT

>>> PROGRESS 63/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #20
=================================
Summarizing function: getURL : void *(void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3414
=======

SUMS (fk, lo, un, wr, re):	3414	0	1	1	5	

Value :: Vval: 
	0

>>> PROGRESS 64/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #317
=================================
Summarizing function: blobGetDataSize : unsigned long (blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3258
=======

SUMS (fk, lo, un, wr, re):	3258	0	0	0	1	

Value :: Vval: 
	b->len

>>> PROGRESS 65/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #318
=================================
Summarizing function: blobGetData : unsigned char *(blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3257
=======

SUMS (fk, lo, un, wr, re):	3257	0	0	0	2	

Value :: Extptr (1): 
	Cell :: lval = (*(b->data)) ; isSum = false


>>> PROGRESS 66/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #21
=================================
Summarizing function: blobcmp : int (blob * , blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3260
=======

SUMS (fk, lo, un, wr, re):	3260	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 67/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #319
=================================
Summarizing function: blobDestroy : void (blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3252
=======

SUMS (fk, lo, un, wr, re):	3252	0	0	0	4	

Value :: $SSBOT

>>> PROGRESS 68/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #22
=================================
Summarizing function: blobArrayDestroy : void (blob ** , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3253
=======

SUMS (fk, lo, un, wr, re):	3253	0	0	1	5	

Value :: $SSBOT

>>> PROGRESS 69/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #23
=================================
Summarizing function: __zzip_get16 : uint16_t (unsigned char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3128
=======

SUMS (fk, lo, un, wr, re):	3128	0	0	0	1	

Value :: Vval: 
	((*s) << 8) | (*s)

>>> PROGRESS 70/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #24
=================================
Summarizing function: __zzip_get32 : uint32_t (unsigned char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3127
=======

SUMS (fk, lo, un, wr, re):	3127	0	0	0	1	

Value :: Vval: 
	((((*s) << 24) | ((*s) << 16)) | ((*s) << 8)) | (*s)

>>> PROGRESS 71/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #101
=================================
Summarizing function: zzip_get_default_ext : zzip_strings_t *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3178
=======

SUMS (fk, lo, un, wr, re):	3178	0	0	0	0	

Value :: Mustptr: 
	Cell :: lval = ext ; isSum = false

>>> PROGRESS 72/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #102
=================================
Summarizing function: zzip_get_default_io : struct zzip_plugin_io *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2919
=======

SUMS (fk, lo, un, wr, re):	2919	0	0	0	0	

Value :: Mustptr: 
	Cell :: lval = default_io ; isSum = false

>>> PROGRESS 73/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #60
=================================
Summarizing function: __zzip_try_open : int (char * , int , char ** , struct zzip_plugin_io * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2920
=======

SUMS (fk, lo, un, wr, re):	2920	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 74/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #100
=================================
Summarizing function: zzip_dir_alloc_ext_io : ZZIP_DIR *(zzip_strings_t * , zzip_plugin_io_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3126
=======

SUMS (fk, lo, un, wr, re):	3126	0	0	2	0	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 75/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #457
=================================
Summarizing function: fstat__extinline : int (int , struct stat * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 960
=======

SUMS (fk, lo, un, wr, re):	960	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 76/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #104
=================================
Summarizing function: zzip_filesize : zzip_off_t (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3102
=======

SUMS (fk, lo, un, wr, re):	3102	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 77/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #105
=================================
Summarizing function: __zzip_find_disk_trailer : int (int , zzip_off_t , struct zzip_disk_trailer * , zzip_plugin_io_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3131
=======

SUMS (fk, lo, un, wr, re):	3131	0	0	2	1	

Value :: $SSTOP

>>> PROGRESS 78/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #107
=================================
Summarizing function: __zzip_aligned4 : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3133
=======

SUMS (fk, lo, un, wr, re):	3133	0	0	0	0	

Value :: Extptr (0): 
	Cell :: lval = (*p) ; isSum = false


>>> PROGRESS 79/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #106
=================================
Summarizing function: __zzip_parse_root_directory : int (int , struct zzip_disk_trailer * , struct zzip_dir_hdr ** , zzip_plugin_io_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3132
=======

SUMS (fk, lo, un, wr, re):	3132	0	0	10	4	

Value :: $SSTOP

>>> PROGRESS 80/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #103
=================================
Summarizing function: __zzip_dir_parse : enum __anonenum_zzip_error_t_37 (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3192
=======

SUMS (fk, lo, un, wr, re):	3192	0	0	10	3	

Value :: $SSTOP

>>> PROGRESS 81/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #116
=================================
Summarizing function: zzip_dir_free : int (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3124
=======

SUMS (fk, lo, un, wr, re):	3124	0	0	0	6	

Value :: $SSTOP

>>> PROGRESS 82/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #99
=================================
Summarizing function: zzip_dir_fdopen_ext_io : ZZIP_DIR *(int , zzip_error_t * , char ** , struct zzip_plugin_io * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2921
=======

SUMS (fk, lo, un, wr, re):	2921	0	0	16	8	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 83/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #59
=================================
Summarizing function: zzip_dir_open_ext_io : ZZIP_DIR *(char * , zzip_error_t * , char ** , struct zzip_plugin_io * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2868
=======

SUMS (fk, lo, un, wr, re):	2868	0	0	16	9	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 84/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #25
=================================
Summarizing function: zzip_dir_open : ZZIP_DIR *(zzip_char_t * , zzip_error_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3125
=======

SUMS (fk, lo, un, wr, re):	3125	0	0	16	9	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 85/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #26
=================================
Summarizing function: zzip_dir_alloc : ZZIP_DIR *(zzip_strings_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3123
=======

SUMS (fk, lo, un, wr, re):	3123	0	0	2	0	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 86/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #27
=================================
Summarizing function: zzip_dir_stat : int (ZZIP_DIR * , zzip_char_t * , ZZIP_STAT * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3110
=======

SUMS (fk, lo, un, wr, re):	3110	0	0	5	6	

Value :: $SSTOP

>>> PROGRESS 87/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #28
=================================
Summarizing function: zzip_init_io : int (struct zzip_plugin_io * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3103
=======

SUMS (fk, lo, un, wr, re):	3103	0	0	1	0	

Value :: $SSTOP

>>> PROGRESS 88/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #29
=================================
Summarizing function: zzip_realfd : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3091
=======

SUMS (fk, lo, un, wr, re):	3091	0	0	0	1	

Value :: Vval: 
	fp->fd

>>> PROGRESS 89/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #30
=================================
Summarizing function: zzip_realdir : void *(ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3090
=======

SUMS (fk, lo, un, wr, re):	3090	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(dir->realdir)) ; isSum = false


>>> PROGRESS 90/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #31
=================================
Summarizing function: zzip_file_real : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3089
=======

SUMS (fk, lo, un, wr, re):	3089	0	0	0	1	

Value :: Vval: 
	(unsigned int )fp->dir == (unsigned int )((struct zzip_dir *)0)

>>> PROGRESS 91/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #32
=================================
Summarizing function: zzip_dir_real : int (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3088
=======

SUMS (fk, lo, un, wr, re):	3088	0	0	0	1	

Value :: Vval: 
	(unsigned int )dir->realdir != (unsigned int )((void *)0)

>>> PROGRESS 92/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #33
=================================
Summarizing function: zzip_dirfd : int (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3087
=======

SUMS (fk, lo, un, wr, re):	3087	0	0	0	1	

Value :: Vval: 
	dir->fd

>>> PROGRESS 93/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #34
=================================
Summarizing function: zzip_dirhandle : ZZIP_DIR *(ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3086
=======

SUMS (fk, lo, un, wr, re):	3086	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(fp->dir)) ; isSum = false


>>> PROGRESS 94/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #35
=================================
Summarizing function: zzip_compr_str : zzip_char_t *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3085
=======

SUMS (fk, lo, un, wr, re):	3085	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 95/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #36
=================================
Summarizing function: zzip_seterror : void (ZZIP_DIR * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3084
=======

SUMS (fk, lo, un, wr, re):	3084	0	0	1	0	

Value :: $SSBOT

>>> PROGRESS 96/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #37
=================================
Summarizing function: zzip_error : int (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3083
=======

SUMS (fk, lo, un, wr, re):	3083	0	0	0	1	

Value :: Vval: 
	dir->errcode

>>> PROGRESS 97/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #39
=================================
Summarizing function: zzip_tell : long (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2916
=======

SUMS (fk, lo, un, wr, re):	2916	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 98/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #115
=================================
Summarizing function: zzip_dir_close : int (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2058
=======

SUMS (fk, lo, un, wr, re):	2058	0	0	1	6	

Value :: $SSTOP

>>> PROGRESS 99/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #114
=================================
Summarizing function: zzip_file_close : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2061
=======

SUMS (fk, lo, un, wr, re):	2061	0	0	4	11	

Value :: $SSTOP

>>> PROGRESS 100/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #118
=================================
Summarizing function: zzip_file_saveoffset : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2930
=======

SUMS (fk, lo, un, wr, re):	2930	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 101/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #40
=================================
Summarizing function: zzip_rewind : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2914
=======

SUMS (fk, lo, un, wr, re):	2914	0	0	8	14	

Value :: $SSTOP

>>> PROGRESS 102/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #117
=================================
Summarizing function: zzip_file_read : int (ZZIP_FILE * , char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2062
=======

SUMS (fk, lo, un, wr, re):	2062	0	0	9	11	

Value :: $SSTOP

>>> PROGRESS 103/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #38
=================================
Summarizing function: zzip_seek : zzip_off_t (ZZIP_FILE * , zzip_off_t , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2915
=======

SUMS (fk, lo, un, wr, re):	2915	0	0	14	21	

Value :: $SSTOP

>>> PROGRESS 104/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #110
=================================
Summarizing function: zzip_errno : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2860
=======

SUMS (fk, lo, un, wr, re):	2860	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 105/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #44
=================================
Summarizing function: zzip_read : zzip_ssize_t (ZZIP_FILE * , char * , zzip_size_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2909
=======

SUMS (fk, lo, un, wr, re):	2909	0	0	9	15	

Value :: $SSTOP

>>> PROGRESS 106/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #41
=================================
Summarizing function: zzip_fread : zzip_size_t (void * , zzip_size_t , zzip_size_t , ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2912
=======

SUMS (fk, lo, un, wr, re):	2912	0	0	8	14	

Value :: $SSTOP

>>> PROGRESS 107/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #111
=================================
Summarizing function: zzip_inflate_init : int (ZZIP_FILE * , struct zzip_dir_hdr * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2947
=======

SUMS (fk, lo, un, wr, re):	2947	0	0	6	12	

Value :: Vval: 
	0

>>> PROGRESS 108/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #112
=================================
Summarizing function: _dirsep_casecmp : int (zzip_char_t * , zzip_char_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2941
=======

SUMS (fk, lo, un, wr, re):	2941	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 109/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #113
=================================
Summarizing function: _dirsep_strrchr : zzip_char_t *(zzip_char_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2935
=======

SUMS (fk, lo, un, wr, re):	2935	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 110/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #109
=================================
Summarizing function: zzip_file_open : ZZIP_FILE *(ZZIP_DIR * , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2060
=======

SUMS (fk, lo, un, wr, re):	2060	0	0	30	32	

Value :: Extptr (50): 
	Cell :: lval = _a20937_725151_freshclam_comb ; isSum = false
	Cell :: lval = (*(dir->cache.fp)) ; isSum = false


>>> PROGRESS 111/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #49
=================================
Summarizing function: zzip_open_shared_io : ZZIP_FILE *(ZZIP_FILE * , char * , int , int , char ** , struct zzip_plugin_io * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2917
=======

SUMS (fk, lo, un, wr, re):	2917	0	0	52	45	

Value :: $SSTOP

>>> PROGRESS 112/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #43
=================================
Summarizing function: zzip_freopen : ZZIP_FILE *(char * , char * , ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2910
=======

SUMS (fk, lo, un, wr, re):	2910	0	0	55	53	

Value :: $SSTOP

>>> PROGRESS 113/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #42
=================================
Summarizing function: zzip_fopen : ZZIP_FILE *(zzip_char_t * , zzip_char_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2911
=======

SUMS (fk, lo, un, wr, re):	2911	0	0	52	43	

Value :: $SSTOP

>>> PROGRESS 114/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #46
=================================
Summarizing function: zzip_fclose : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2913
=======

SUMS (fk, lo, un, wr, re):	2913	0	0	3	10	

Value :: $SSTOP

>>> PROGRESS 115/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #45
=================================
Summarizing function: zzip_close : int (ZZIP_FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2908
=======

SUMS (fk, lo, un, wr, re):	2908	0	0	2	9	

Value :: $SSTOP

>>> PROGRESS 116/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #48
=================================
Summarizing function: zzip_open_ext_io : ZZIP_FILE *(char * , int , int , char ** , struct zzip_plugin_io * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2918
=======

SUMS (fk, lo, un, wr, re):	2918	0	0	52	43	

Value :: $SSTOP

>>> PROGRESS 117/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #47
=================================
Summarizing function: zzip_open : ZZIP_FILE *(zzip_char_t * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2907
=======

SUMS (fk, lo, un, wr, re):	2907	0	0	52	43	

Value :: $SSTOP

>>> PROGRESS 118/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #51
=================================
Summarizing function: zzip_strerror : zzip_char_t *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2890
=======

SUMS (fk, lo, un, wr, re):	2890	0	0	0	2	

Value :: Extptr (0): 
	Cell :: lval = (*(errlist.mesg)) ; isSum = false


>>> PROGRESS 119/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #50
=================================
Summarizing function: zzip_strerror_of : zzip_char_t *(ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2891
=======

SUMS (fk, lo, un, wr, re):	2891	0	0	0	3	

Value :: Extptr (0): 
	Cell :: lval = (*(errlist.mesg)) ; isSum = false


>>> PROGRESS 120/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #52
=================================
Summarizing function: zzip_seekdir : void (ZZIP_DIR * , zzip_off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2866
=======

SUMS (fk, lo, un, wr, re):	2866	0	0	1	1	

Value :: $SSBOT

>>> PROGRESS 121/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #53
=================================
Summarizing function: zzip_telldir : zzip_off_t (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2865
=======

SUMS (fk, lo, un, wr, re):	2865	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 122/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #54
=================================
Summarizing function: zzip_rewinddir : void (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2864
=======

SUMS (fk, lo, un, wr, re):	2864	0	0	1	1	

Value :: $SSBOT

>>> PROGRESS 123/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #55
=================================
Summarizing function: zzip_readdir : ZZIP_DIRENT *(ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2863
=======

SUMS (fk, lo, un, wr, re):	2863	0	0	7	7	

Value :: Extptr (5): 
	Cell :: lval = (*dir) ; isSum = false.dirent


>>> PROGRESS 124/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #56
=================================
Summarizing function: zzip_closedir : int (ZZIP_DIR * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2862
=======

SUMS (fk, lo, un, wr, re):	2862	0	0	1	6	

Value :: $SSTOP

>>> PROGRESS 125/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #525
=================================
Summarizing function: stat__extinline : int (char * , struct stat * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 19
=======

SUMS (fk, lo, un, wr, re):	19	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 126/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #58
=================================
Summarizing function: zzip_opendir_ext_io : ZZIP_DIR *(char * , int , zzip_strings_t * , zzip_plugin_io_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2867
=======

SUMS (fk, lo, un, wr, re):	2867	0	0	15	11	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 127/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #57
=================================
Summarizing function: zzip_opendir : ZZIP_DIR *(zzip_char_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2861
=======

SUMS (fk, lo, un, wr, re):	2861	0	0	15	11	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 128/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #61
=================================
Summarizing function: cli_unlock_mutex : void (void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2067
=======

SUMS (fk, lo, un, wr, re):	2067	0	1	0	2	

Value :: $SSBOT

>>> PROGRESS 129/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #67
=================================
Summarizing function: from_oct : int (int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7624
=======

SUMS (fk, lo, un, wr, re):	7624	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 130/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #66
=================================
Summarizing function: is_tar : int (u_char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2521
=======

SUMS (fk, lo, un, wr, re):	2521	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 131/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #65
=================================
Summarizing function: cli_filetype2 : cli_file_t (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2049
=======

SUMS (fk, lo, un, wr, re):	2049	0	0	0	9	

Value :: $SSTOP

>>> PROGRESS 132/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #91
=================================
Summarizing function: tread : int (void * , void * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2570
=======

SUMS (fk, lo, un, wr, re):	2570	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 133/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #94
=================================
Summarizing function: CalcCRC32 : unsigned long (unsigned long , u_char * , unsigned long )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2584
=======

SUMS (fk, lo, un, wr, re):	2584	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 134/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #74
=================================
Summarizing function: ReadHeader : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2568
=======

SUMS (fk, lo, un, wr, re):	2568	0	0	20	2	

Value :: Vval: 
	0

>>> PROGRESS 135/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #72
=================================
Summarizing function: IsArchive : int ()
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2572
=======

SUMS (fk, lo, un, wr, re):	2572	0	0	21	5	

Value :: $SSTOP

>>> PROGRESS 136/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #75
=================================
Summarizing function: tseek : int (void * , long , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2571
=======

SUMS (fk, lo, un, wr, re):	2571	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 137/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #73
=================================
Summarizing function: ReadBlock : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2573
=======

SUMS (fk, lo, un, wr, re):	2573	0	0	29	11	

Value :: Vval: 
	0

>>> PROGRESS 138/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #95
=================================
Summarizing function: InitCRC : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2583
=======

SUMS (fk, lo, un, wr, re):	2583	0	0	2	3	

Value :: $SSBOT

>>> PROGRESS 139/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #69
=================================
Summarizing function: urarlib_list : int (int , ArchiveList_struct * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2038
=======

SUMS (fk, lo, un, wr, re):	2038	0	0	50	31	

Value :: $SSTOP

>>> PROGRESS 140/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #78
=================================
Summarizing function: toupper__extinline : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2537
=======

SUMS (fk, lo, un, wr, re):	2537	0	0	0	0	

Value :: Vval: 
	__c

>>> PROGRESS 141/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #77
=================================
Summarizing function: strupper : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2640
=======

SUMS (fk, lo, un, wr, re):	2640	0	0	1	1	

Value :: Extptr (0): 
	Cell :: lval = (*Str) ; isSum = false


>>> PROGRESS 142/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #76
=================================
Summarizing function: stricomp : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2589
=======

SUMS (fk, lo, un, wr, re):	2589	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 143/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #80
=================================
Summarizing function: SetOldKeys : void (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2581
=======

SUMS (fk, lo, un, wr, re):	2581	0	0	4	6	

Value :: $SSBOT

>>> PROGRESS 144/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #90
=================================
Summarizing function: UpdKeys : void (u_char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2579
=======

SUMS (fk, lo, un, wr, re):	2579	0	0	1	2	

Value :: $SSBOT

>>> PROGRESS 145/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #81
=================================
Summarizing function: EncryptBlock : void (UBYTE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2815
=======

SUMS (fk, lo, un, wr, re):	2815	0	0	2	4	

Value :: $SSBOT

>>> PROGRESS 146/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #79
=================================
Summarizing function: SetCryptKeys : void (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2580
=======

SUMS (fk, lo, un, wr, re):	2580	0	0	6	8	

Value :: $SSBOT

>>> PROGRESS 147/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #83
=================================
Summarizing function: UnpInitData : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2575
=======

SUMS (fk, lo, un, wr, re):	2575	0	0	9	6	

Value :: $SSBOT

>>> PROGRESS 148/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #84
=================================
Summarizing function: DecodeAudio : unsigned char (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2577
=======

SUMS (fk, lo, un, wr, re):	2577	0	0	14	14	

Value :: $SSTOP

>>> PROGRESS 149/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #89
=================================
Summarizing function: DecryptBlock : void (u_char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2582
=======

SUMS (fk, lo, un, wr, re):	2582	0	0	2	4	

Value :: $SSBOT

>>> PROGRESS 150/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #88
=================================
Summarizing function: UnpRead : unsigned int (unsigned char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2574
=======

SUMS (fk, lo, un, wr, re):	2574	0	0	4	10	

Value :: $SSTOP

>>> PROGRESS 151/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #87
=================================
Summarizing function: UnpReadBuf : void (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2585
=======

SUMS (fk, lo, un, wr, re):	2585	0	0	6	11	

Value :: $SSBOT

>>> PROGRESS 152/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #92
=================================
Summarizing function: MakeDecodeTables : void (u_char * , struct Decode * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2588
=======

SUMS (fk, lo, un, wr, re):	2588	0	0	4	3	

Value :: $SSBOT

>>> PROGRESS 153/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #93
=================================
Summarizing function: DecodeNumber : void (struct Decode * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2578
=======

SUMS (fk, lo, un, wr, re):	2578	0	0	4	8	

Value :: $SSBOT

>>> PROGRESS 154/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #86
=================================
Summarizing function: ReadTables : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2586
=======

SUMS (fk, lo, un, wr, re):	2586	0	0	16	23	

Value :: $SSBOT

>>> PROGRESS 155/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #85
=================================
Summarizing function: ReadLastTables : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2587
=======

SUMS (fk, lo, un, wr, re):	2587	0	0	16	24	

Value :: $SSBOT

>>> PROGRESS 156/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #82
=================================
Summarizing function: Unpack : void (u_char * , short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2576
=======

SUMS (fk, lo, un, wr, re):	2576	0	0	42	59	

Value :: $SSBOT

>>> PROGRESS 157/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #71
=================================
Summarizing function: ExtrFile : short (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2569
=======

SUMS (fk, lo, un, wr, re):	2569	0	0	81	82	

Value :: $SSTOP

>>> PROGRESS 158/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #70
=================================
Summarizing function: urarlib_get : int (void * , unsigned long * , char * , int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2037
=======

SUMS (fk, lo, un, wr, re):	2037	0	0	88	85	

Value :: $SSTOP

>>> PROGRESS 159/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #96
=================================
Summarizing function: urarlib_freelist : void (ArchiveList_struct * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2039
=======

SUMS (fk, lo, un, wr, re):	2039	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 160/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #98
=================================
Summarizing function: zzip_dir_fdopen : ZZIP_DIR *(int , zzip_error_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2057
=======

SUMS (fk, lo, un, wr, re):	2057	0	0	16	8	

Value :: Mustptr: 
	Cell :: lval = _a22140_754815_freshclam_comb ; isSum = false

>>> PROGRESS 161/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #108
=================================
Summarizing function: zzip_dir_read : int (ZZIP_DIR * , ZZIP_DIRENT * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2059
=======

SUMS (fk, lo, un, wr, re):	2059	0	0	7	7	

Value :: $SSTOP

>>> PROGRESS 162/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #122
=================================
Summarizing function: cli_msexpand : int (FILE * , FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2046
=======

SUMS (fk, lo, un, wr, re):	2046	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 163/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #133
=================================
Summarizing function: msp_dopen : struct mspack_file *(struct mspack_system * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6510
=======

SUMS (fk, lo, un, wr, re):	6510	0	0	3	1	

Value :: Mustptr: 
	Cell :: lval = _a45109_1543957_freshclam_comb ; isSum = false

>>> PROGRESS 164/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #124
=================================
Summarizing function: cabd_dsearch : struct mscabd_cabinet *(struct mscab_decompressor * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5855
=======

SUMS (fk, lo, un, wr, re):	5855	0	0	42	37	

Value :: $SSTOP

>>> PROGRESS 165/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #127
=================================
Summarizing function: cabd_dopen : struct mscabd_cabinet *(struct mscab_decompressor * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5850
=======

SUMS (fk, lo, un, wr, re):	5850	0	0	41	33	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 166/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #135
=================================
Summarizing function: noned_init : struct noned_state *(struct mspack_system * , struct mspack_file * , struct mspack_file * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5867
=======

SUMS (fk, lo, un, wr, re):	5867	0	0	5	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 167/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #136
=================================
Summarizing function: mszipd_init : struct mszipd_stream *(struct mspack_system * , struct mspack_file * , struct mspack_file * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5839
=======

SUMS (fk, lo, un, wr, re):	5839	0	0	14	4	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 168/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #138
=================================
Summarizing function: qtmd_init_model : void (struct qtmd_model * , struct qtmd_modelsym * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6418
=======

SUMS (fk, lo, un, wr, re):	6418	0	0	5	0	

Value :: $SSBOT

>>> PROGRESS 169/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #139
=================================
Summarizing function: qtmd_static_init : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6408
=======

SUMS (fk, lo, un, wr, re):	6408	0	0	4	2	

Value :: $SSBOT

>>> PROGRESS 170/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #137
=================================
Summarizing function: qtmd_init : struct qtmd_stream *(struct mspack_system * , struct mspack_file * , struct mspack_file * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5842
=======

SUMS (fk, lo, un, wr, re):	5842	0	0	50	7	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 171/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #158
=================================
Summarizing function: lzxd_static_init : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6145
=======

SUMS (fk, lo, un, wr, re):	6145	0	0	2	1	

Value :: $SSBOT

>>> PROGRESS 172/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #163
=================================
Summarizing function: lzxd_reset_state : void (struct lzxd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6148
=======

SUMS (fk, lo, un, wr, re):	6148	0	0	8	0	

Value :: $SSBOT

>>> PROGRESS 173/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #157
=================================
Summarizing function: lzxd_init : struct lzxd_stream *(struct mspack_system * , struct mspack_file * , struct mspack_file * , int , int , int , long )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5845
=======

SUMS (fk, lo, un, wr, re):	5845	0	0	27	7	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 174/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #134
=================================
Summarizing function: cabd_init_decomp : int (struct mscab_decompressor_p * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5861
=======

SUMS (fk, lo, un, wr, re):	5861	0	0	101	33	

Value :: $SSTOP

>>> PROGRESS 175/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #132
=================================
Summarizing function: cabd_extract : int (struct mscab_decompressor * , struct mscabd_file * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5860
=======

SUMS (fk, lo, un, wr, re):	5860	0	0	119	41	

Value :: $SSTOP

>>> PROGRESS 176/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #140
=================================
Summarizing function: cabd_error : int (struct mscab_decompressor * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5871
=======

SUMS (fk, lo, un, wr, re):	5871	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 177/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #341
=================================
Summarizing function: fileblobCreate : fileblob *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3262
=======

SUMS (fk, lo, un, wr, re):	3262	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 178/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #343
=================================
Summarizing function: blobGetFilename : char *(blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3255
=======

SUMS (fk, lo, un, wr, re):	3255	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(b->name)) ; isSum = false


>>> PROGRESS 179/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #345
=================================
Summarizing function: sanitiseName : void (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3267
=======

SUMS (fk, lo, un, wr, re):	3267	0	0	1	1	

Value :: $SSBOT

>>> PROGRESS 180/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #344
=================================
Summarizing function: blobSetFilename : void (blob * , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3254
=======

SUMS (fk, lo, un, wr, re):	3254	0	0	2	5	

Value :: $SSBOT

>>> PROGRESS 181/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #342
=================================
Summarizing function: fileblobSetFilename : void (fileblob * , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3264
=======

SUMS (fk, lo, un, wr, re):	3264	0	0	7	9	

Value :: $SSBOT

>>> PROGRESS 182/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #458
=================================
Summarizing function: cli_realloc : void *(void * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 849
=======

SUMS (fk, lo, un, wr, re):	849	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9230_309468_freshclam_comb ; isSum = false

>>> PROGRESS 183/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #354
=================================
Summarizing function: blobAddData : int (blob * , unsigned char * , size_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3256
=======

SUMS (fk, lo, un, wr, re):	3256	0	0	5	6	

Value :: $SSTOP

>>> PROGRESS 184/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #353
=================================
Summarizing function: fileblobAddData : int (fileblob * , unsigned char * , size_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3266
=======

SUMS (fk, lo, un, wr, re):	3266	0	0	6	8	

Value :: $SSTOP

>>> PROGRESS 185/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #144
=================================
Summarizing function: tnef_attachment : int (FILE * , unsigned short , unsigned short , unsigned int , char * , fileblob ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7654
=======

SUMS (fk, lo, un, wr, re):	7654	0	0	11	12	

Value :: $SSTOP

>>> PROGRESS 186/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #145
=================================
Summarizing function: tnef_message : int (FILE * , unsigned short , unsigned short , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7653
=======

SUMS (fk, lo, un, wr, re):	7653	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 187/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #146
=================================
Summarizing function: tnef_header : int (FILE * , u_char * , unsigned short * , unsigned short * , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7655
=======

SUMS (fk, lo, un, wr, re):	7655	0	0	3	6	

Value :: $SSTOP

>>> PROGRESS 188/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #355
=================================
Summarizing function: fileblobDestroy : void (fileblob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3263
=======

SUMS (fk, lo, un, wr, re):	3263	0	0	0	6	

Value :: $SSBOT

>>> PROGRESS 189/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #410
=================================
Summarizing function: cli_writen : int (int , void * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1180
=======

SUMS (fk, lo, un, wr, re):	1180	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 190/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #422
=================================
Summarizing function: cli_readn : int (int , void * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1179
=======

SUMS (fk, lo, un, wr, re):	1179	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 191/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #479
=================================
Summarizing function: cli_rndnum : unsigned int (unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1183
=======

SUMS (fk, lo, un, wr, re):	1183	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 192/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #488
=================================
Summarizing function: body : void *(MD5_CTX * , void * , unsigned long )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1129
=======

SUMS (fk, lo, un, wr, re):	1129	0	0	4	5	

Value :: Extptr (4): 
	Cell :: lval = (*data) ; isSum = false


>>> PROGRESS 193/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #486
=================================
Summarizing function: MD5_Final : void (u_char * , MD5_CTX * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 977
=======

SUMS (fk, lo, un, wr, re):	977	0	0	7	7	

Value :: $SSBOT

>>> PROGRESS 194/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #487
=================================
Summarizing function: MD5_Update : void (MD5_CTX * , void * , unsigned long )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 976
=======

SUMS (fk, lo, un, wr, re):	976	0	0	6	8	

Value :: $SSBOT

>>> PROGRESS 195/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #489
=================================
Summarizing function: MD5_Init : void (MD5_CTX * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 975
=======

SUMS (fk, lo, un, wr, re):	975	0	0	6	0	

Value :: $SSBOT

>>> PROGRESS 196/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #480
=================================
Summarizing function: cli_md5buff : char *(char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1213
=======

SUMS (fk, lo, un, wr, re):	1213	0	0	0	2	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 197/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #478
=================================
Summarizing function: cli_gentemp : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 534
=======

SUMS (fk, lo, un, wr, re):	534	0	1	0	2	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 198/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #143
=================================
Summarizing function: cli_tnef : int (char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2435
=======

SUMS (fk, lo, un, wr, re):	2435	0	1	10	12	

Value :: $SSTOP

>>> PROGRESS 199/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #149
=================================
Summarizing function: free_file_list : void (file_list_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7112
=======

SUMS (fk, lo, un, wr, re):	7112	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 200/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #152
=================================
Summarizing function: print_sys_control : void (lzx_control_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7169
=======

SUMS (fk, lo, un, wr, re):	7169	0	0	0	8	

Value :: $SSBOT

>>> PROGRESS 201/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #184
=================================
Summarizing function: chm_read_data : int (int , unsigned char * , off_t , off_t , unsigned char * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7094
=======

SUMS (fk, lo, un, wr, re):	7094	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 202/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #185
=================================
Summarizing function: chm_endian_convert_32 : uint32_t (uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7090
=======

SUMS (fk, lo, un, wr, re):	7090	0	0	0	0	

Value :: Vval: 
	(((v >> 24) | ((v & 16711680U) >> 8)) | ((v & 65280U) << 8)) | (v << 24)

>>> PROGRESS 203/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #151
=================================
Summarizing function: read_sys_control : lzx_control_t *(int , itsf_header_t * , file_list_t * , unsigned char * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7171
=======

SUMS (fk, lo, un, wr, re):	7171	0	0	5	11	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 204/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #154
=================================
Summarizing function: print_sys_content : void (lzx_content_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7199
=======

SUMS (fk, lo, un, wr, re):	7199	0	0	0	4	

Value :: $SSBOT

>>> PROGRESS 205/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #153
=================================
Summarizing function: read_sys_content : lzx_content_t *(int , itsf_header_t * , file_list_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7201
=======

SUMS (fk, lo, un, wr, re):	7201	0	0	2	5	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 206/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #156
=================================
Summarizing function: print_sys_reset_table : void (lzx_reset_table_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7206
=======

SUMS (fk, lo, un, wr, re):	7206	0	0	0	8	

Value :: $SSBOT

>>> PROGRESS 207/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #186
=================================
Summarizing function: chm_endian_convert_64 : uint64_t (uint64_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7092
=======

SUMS (fk, lo, un, wr, re):	7092	0	0	0	0	

Value :: Vval: 
	(((((((v >> 56) | ((v & 71776119061217280ULL) >> 40)) | ((v & 280375465082880ULL) >> 24)) | ((v & 1095216660480ULL) >> 8)) | ((v & 4278190080ULL) << 8)) | ((v & 16711680ULL) << 24)) | ((v & 65280ULL) << 40)) | (v << 56)

>>> PROGRESS 208/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #155
=================================
Summarizing function: read_sys_reset_table : lzx_reset_table_t *(int , itsf_header_t * , file_list_t * , unsigned char * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7208
=======

SUMS (fk, lo, un, wr, re):	7208	0	0	7	11	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 209/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #161
=================================
Summarizing function: make_decode_table : int (unsigned int , unsigned int , unsigned char * , unsigned short * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6097
=======

SUMS (fk, lo, un, wr, re):	6097	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 210/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #162
=================================
Summarizing function: lzxd_read_input : int (struct lzxd_stream * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6093
=======

SUMS (fk, lo, un, wr, re):	6093	0	0	17	28	

Value :: $SSTOP

>>> PROGRESS 211/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #160
=================================
Summarizing function: lzxd_read_lens : int (struct lzxd_stream * , unsigned char * , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6113
=======

SUMS (fk, lo, un, wr, re):	6113	0	0	20	34	

Value :: $SSTOP

>>> PROGRESS 212/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #159
=================================
Summarizing function: lzxd_decompress : int (struct lzxd_stream * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5847
=======

SUMS (fk, lo, un, wr, re):	5847	0	0	40	66	

Value :: $SSTOP

>>> PROGRESS 213/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #175
=================================
Summarizing function: chm_copy_file_data : uint64_t (int , int , uint64_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7103
=======

SUMS (fk, lo, un, wr, re):	7103	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 214/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #150
=================================
Summarizing function: chm_decompress_stream : int (int , char * , itsf_header_t * , file_list_t * , file_list_t * , unsigned char * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7221
=======

SUMS (fk, lo, un, wr, re):	7221	0	0	54	54	

Value :: $SSTOP

>>> PROGRESS 215/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #178
=================================
Summarizing function: read_enc_int : uint64_t (unsigned char ** , unsigned char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7134
=======

SUMS (fk, lo, un, wr, re):	7134	0	0	1	2	

Value :: $SSTOP

>>> PROGRESS 216/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #177
=================================
Summarizing function: read_chunk_entries : int (unsigned char * , uint32_t , uint16_t , file_list_t * , file_list_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7140
=======

SUMS (fk, lo, un, wr, re):	7140	0	0	8	10	

Value :: $SSTOP

>>> PROGRESS 217/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #179
=================================
Summarizing function: print_chunk : void (chunk_header_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7151
=======

SUMS (fk, lo, un, wr, re):	7151	0	0	0	7	

Value :: $SSBOT

>>> PROGRESS 218/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #176
=================================
Summarizing function: read_chunk : int (int , off_t , uint32_t , unsigned char * , off_t , file_list_t * , file_list_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7154
=======

SUMS (fk, lo, un, wr, re):	7154	0	0	13	15	

Value :: $SSTOP

>>> PROGRESS 219/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #180
=================================
Summarizing function: itsp_print_header : void (itsp_header_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7124
=======

SUMS (fk, lo, un, wr, re):	7124	0	0	0	12	

Value :: $SSBOT

>>> PROGRESS 220/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #181
=================================
Summarizing function: itsp_read_header : int (int , itsp_header_t * , off_t , unsigned char * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7126
=======

SUMS (fk, lo, un, wr, re):	7126	0	0	10	12	

Value :: $SSTOP

>>> PROGRESS 221/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #182
=================================
Summarizing function: itsf_print_header : void (itsf_header_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7115
=======

SUMS (fk, lo, un, wr, re):	7115	0	0	0	11	

Value :: $SSBOT

>>> PROGRESS 222/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #183
=================================
Summarizing function: itsf_read_header : int (int , itsf_header_t * , unsigned char * , off_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7117
=======

SUMS (fk, lo, un, wr, re):	7117	0	0	9	11	

Value :: $SSTOP

>>> PROGRESS 223/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #148
=================================
Summarizing function: chm_unpack : int (int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2047
=======

SUMS (fk, lo, un, wr, re):	2047	0	0	64	55	

Value :: $SSTOP

>>> PROGRESS 224/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #193
=================================
Summarizing function: get_property_name : char *(char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4862
=======

SUMS (fk, lo, un, wr, re):	4862	0	0	1	3	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 225/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #191
=================================
Summarizing function: print_property_name : void (char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4874
=======

SUMS (fk, lo, un, wr, re):	4874	0	0	1	4	

Value :: $SSBOT

>>> PROGRESS 226/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #190
=================================
Summarizing function: print_ole2_property : void (property_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4878
=======

SUMS (fk, lo, un, wr, re):	4878	0	0	1	9	

Value :: $SSBOT

>>> PROGRESS 227/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #199
=================================
Summarizing function: ole2_read_block : int (int , ole2_header_t * , void * , int32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4883
=======

SUMS (fk, lo, un, wr, re):	4883	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 228/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #201
=================================
Summarizing function: ole2_endian_convert_32 : uint32_t (uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4859
=======

SUMS (fk, lo, un, wr, re):	4859	0	0	0	0	

Value :: Vval: 
	(((v >> 24) | ((v & 16711680U) >> 8)) | ((v & 65280U) << 8)) | (v << 24)

>>> PROGRESS 229/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #197
=================================
Summarizing function: ole2_get_next_bat_block : int32_t (int , ole2_header_t * , int32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4892
=======

SUMS (fk, lo, un, wr, re):	4892	0	0	0	7	

Value :: $SSTOP

>>> PROGRESS 230/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #198
=================================
Summarizing function: ole2_get_next_xbat_block : int32_t (int , ole2_header_t * , int32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4901
=======

SUMS (fk, lo, un, wr, re):	4901	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 231/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #196
=================================
Summarizing function: ole2_get_next_block_number : int32_t (int , ole2_header_t * , int32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4916
=======

SUMS (fk, lo, un, wr, re):	4916	0	0	0	8	

Value :: $SSTOP

>>> PROGRESS 232/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #194
=================================
Summarizing function: ole2_get_sbat_data_block : int32_t (int , ole2_header_t * , void * , int32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4931
=======

SUMS (fk, lo, un, wr, re):	4931	0	0	0	9	

Value :: $SSTOP

>>> PROGRESS 233/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #195
=================================
Summarizing function: ole2_get_next_sbat_block : int32_t (int , ole2_header_t * , int32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4922
=======

SUMS (fk, lo, un, wr, re):	4922	0	0	0	9	

Value :: $SSTOP

>>> PROGRESS 234/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #192
=================================
Summarizing function: handler_writefile : int (int , ole2_header_t * , property_t * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4959
=======

SUMS (fk, lo, un, wr, re):	4959	0	0	2	18	

Value :: $SSTOP

>>> PROGRESS 235/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #202
=================================
Summarizing function: ole2_endian_convert_16 : uint16_t (uint16_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4857
=======

SUMS (fk, lo, un, wr, re):	4857	0	0	0	0	

Value :: Vval: 
	(v >> 8) + (v << 8)

>>> PROGRESS 236/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #189
=================================
Summarizing function: ole2_walk_property_tree : void (int , ole2_header_t * , char * , int32_t , int (*)(int fd , ole2_header_t *hdr , property_t *prop , char *dir ) , int , int * , struct cl_limits * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: ole2_walk_property_tree : void (int , ole2_header_t * , char * , int32_t , int (*)(int fd , ole2_header_t *hdr , property_t *prop , char *dir ) , int , int * , struct cl_limits * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4939
=======

SUMS (fk, lo, un, wr, re):	4939	0	0	4	17	

Value :: $SSBOT

>>> PROGRESS 237/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #200
=================================
Summarizing function: print_ole2_header : void (ole2_header_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4880
=======

SUMS (fk, lo, un, wr, re):	4880	0	0	0	16	

Value :: $SSBOT

>>> PROGRESS 238/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #188
=================================
Summarizing function: cli_ole2_extract : int (int , char * , struct cl_limits * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2040
=======

SUMS (fk, lo, un, wr, re):	2040	0	0	2	7	

Value :: $SSTOP

>>> PROGRESS 239/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #204
=================================
Summarizing function: wm_decrypt_macro : u_char *(int , unsigned int , unsigned int , unsigned char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2045
=======

SUMS (fk, lo, un, wr, re):	2045	0	0	1	2	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 240/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #206
=================================
Summarizing function: wm_free_intnames : void (macro_intnames_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5364
=======

SUMS (fk, lo, un, wr, re):	5364	0	0	0	3	

Value :: $SSBOT

>>> PROGRESS 241/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #207
=================================
Summarizing function: wm_free_extnames : void (macro_extnames_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5349
=======

SUMS (fk, lo, un, wr, re):	5349	0	0	0	3	

Value :: $SSBOT

>>> PROGRESS 242/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #208
=================================
Summarizing function: wm_free_menu_info : void (menu_info_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5312
=======

SUMS (fk, lo, un, wr, re):	5312	0	0	0	1	

Value :: $SSBOT

>>> PROGRESS 243/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #209
=================================
Summarizing function: wm_free_macro_info : void (macro_info_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5289
=======

SUMS (fk, lo, un, wr, re):	5289	0	0	0	1	

Value :: $SSBOT

>>> PROGRESS 244/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #229
=================================
Summarizing function: vba_endian_convert_16 : uint16_t (uint16_t , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5013
=======

SUMS (fk, lo, un, wr, re):	5013	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 245/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #210
=================================
Summarizing function: wm_read_macro_intnames : macro_intnames_t *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5352
=======

SUMS (fk, lo, un, wr, re):	5352	0	0	5	7	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 246/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #227
=================================
Summarizing function: get_unicode_name : char *(char * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5020
=======

SUMS (fk, lo, un, wr, re):	5020	0	0	1	3	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 247/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #211
=================================
Summarizing function: wm_read_macro_extnames : macro_extnames_t *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5318
=======

SUMS (fk, lo, un, wr, re):	5318	0	0	6	9	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 248/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #212
=================================
Summarizing function: wm_read_menu_info : menu_info_t *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5300
=======

SUMS (fk, lo, un, wr, re):	5300	0	0	7	9	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 249/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #213
=================================
Summarizing function: wm_read_oxo3 : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5291
=======

SUMS (fk, lo, un, wr, re):	5291	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 250/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #230
=================================
Summarizing function: vba_endian_convert_32 : uint32_t (uint32_t , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5016
=======

SUMS (fk, lo, un, wr, re):	5016	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 251/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #215
=================================
Summarizing function: wm_read_macro_entry : int (int , macro_entry_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5271
=======

SUMS (fk, lo, un, wr, re):	5271	0	0	6	8	

Value :: $SSTOP

>>> PROGRESS 252/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #214
=================================
Summarizing function: wm_read_macro_info : macro_info_t *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5283
=======

SUMS (fk, lo, un, wr, re):	5283	0	0	8	10	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 253/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #216
=================================
Summarizing function: wm_print_fib : void (mso_fib_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5257
=======

SUMS (fk, lo, un, wr, re):	5257	0	0	0	8	

Value :: $SSBOT

>>> PROGRESS 254/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #217
=================================
Summarizing function: wm_read_fib : int (int , mso_fib_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5259
=======

SUMS (fk, lo, un, wr, re):	5259	0	0	8	10	

Value :: $SSTOP

>>> PROGRESS 255/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #205
=================================
Summarizing function: wm_dir_read : vba_project_t *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2044
=======

SUMS (fk, lo, un, wr, re):	2044	0	0	31	36	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 256/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #220
=================================
Summarizing function: ppt_read_atom_header : int (int , atom_header_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5216
=======

SUMS (fk, lo, un, wr, re):	5216	0	0	6	5	

Value :: $SSTOP

>>> PROGRESS 257/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #221
=================================
Summarizing function: ppt_print_atom_header : void (atom_header_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5222
=======

SUMS (fk, lo, un, wr, re):	5222	0	0	0	6	

Value :: $SSBOT

>>> PROGRESS 258/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #222
=================================
Summarizing function: ppt_unlzw : int (char * , int , uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5224
=======

SUMS (fk, lo, un, wr, re):	5224	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 259/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #415
=================================
Summarizing function: lstat__extinline : int (char * , struct stat * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1163
=======

SUMS (fk, lo, un, wr, re):	1163	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 260/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #412
=================================
Summarizing function: cli_rmdirs : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_rmdirs : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1176
=======

SUMS (fk, lo, un, wr, re):	1176	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 261/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #219
=================================
Summarizing function: ppt_stream_iter : char *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5241
=======

SUMS (fk, lo, un, wr, re):	5241	0	1	0	2	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 262/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #218
=================================
Summarizing function: ppt_vba_read : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2043
=======

SUMS (fk, lo, un, wr, re):	2043	0	1	0	2	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 263/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #224
=================================
Summarizing function: byte_array_append : void (byte_array_t * , unsigned char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5190
=======

SUMS (fk, lo, un, wr, re):	5190	0	0	2	3	

Value :: $SSBOT

>>> PROGRESS 264/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #223
=================================
Summarizing function: vba_decompress : u_char *(int , unsigned int , int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2042
=======

SUMS (fk, lo, un, wr, re):	2042	0	0	1	1	

Value :: $SSTOP

>>> PROGRESS 265/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #228
=================================
Summarizing function: vba56_test_middle : void (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5033
=======

SUMS (fk, lo, un, wr, re):	5033	0	0	0	2	

Value :: $SSBOT

>>> PROGRESS 266/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #226
=================================
Summarizing function: vba_read_project_strings : int (int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5041
=======

SUMS (fk, lo, un, wr, re):	5041	0	0	1	4	

Value :: $SSTOP

>>> PROGRESS 267/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #225
=================================
Summarizing function: vba56_dir_read : vba_project_t *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2041
=======

SUMS (fk, lo, un, wr, re):	2041	0	0	5	11	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 268/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #233
=================================
Summarizing function: octal : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7483
=======

SUMS (fk, lo, un, wr, re):	7483	0	0	0	0	

Value :: Vval: 
	-1

>>> PROGRESS 269/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #232
=================================
Summarizing function: cli_untar : int (char * , int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2052
=======

SUMS (fk, lo, un, wr, re):	2052	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 270/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #305
=================================
Summarizing function: messageGetBody : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3371
=======

SUMS (fk, lo, un, wr, re):	3371	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->body_first)) ; isSum = false


>>> PROGRESS 271/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #306
=================================
Summarizing function: binhexBegin : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3375
=======

SUMS (fk, lo, un, wr, re):	3375	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->binhex)) ; isSum = false


>>> PROGRESS 272/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #308
=================================
Summarizing function: blobClose : void (blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3259
=======

SUMS (fk, lo, un, wr, re):	3259	0	0	3	6	

Value :: $SSBOT

>>> PROGRESS 273/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #310
=================================
Summarizing function: addToFileblob : void (line_t * , void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4807
=======

SUMS (fk, lo, un, wr, re):	4807	0	0	6	8	

Value :: $SSBOT

>>> PROGRESS 274/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #311
=================================
Summarizing function: addToBlob : void (line_t * , void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4809
=======

SUMS (fk, lo, un, wr, re):	4809	0	0	5	6	

Value :: $SSBOT

>>> PROGRESS 275/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #312
=================================
Summarizing function: getLength : void (line_t * , void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4808
=======

SUMS (fk, lo, un, wr, re):	4808	0	0	1	1	

Value :: $SSBOT

>>> PROGRESS 276/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #309
=================================
Summarizing function: textIterate : void *(text * , void (*)(char *item , void *arg ) , void * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4810
=======

SUMS (fk, lo, un, wr, re):	4810	0	0	11	15	

Value :: Extptr (6): 
	Cell :: lval = (*arg) ; isSum = false


>>> PROGRESS 277/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #313
=================================
Summarizing function: blobCreate : blob *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3251
=======

SUMS (fk, lo, un, wr, re):	3251	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 278/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #314
=================================
Summarizing function: blobGrow : void (blob * , size_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3261
=======

SUMS (fk, lo, un, wr, re):	3261	0	0	3	4	

Value :: $SSBOT

>>> PROGRESS 279/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #307
=================================
Summarizing function: textToBlob : blob *(text * , blob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4113
=======

SUMS (fk, lo, un, wr, re):	4113	0	0	2	6	

Value :: Extptr (1): 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false
	Cell :: lval = (*b) ; isSum = false


>>> PROGRESS 280/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #315
=================================
Summarizing function: uuencodeBegin : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3376
=======

SUMS (fk, lo, un, wr, re):	3376	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->uuencode)) ; isSum = false


>>> PROGRESS 281/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #316
=================================
Summarizing function: yEncBegin : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4110
=======

SUMS (fk, lo, un, wr, re):	4110	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->yenc)) ; isSum = false


>>> PROGRESS 282/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #515
=================================
Summarizing function: cli_strtok : char *(char * , int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 120
=======

SUMS (fk, lo, un, wr, re):	120	0	0	1	1	

Value :: Mustptr: 
	Cell :: lval = _a15137_520299_freshclam_comb ; isSum = false

>>> PROGRESS 283/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #324
=================================
Summarizing function: messageSetEncoding : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: messageSetEncoding : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: messageSetEncoding : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3367
=======

SUMS (fk, lo, un, wr, re):	3367	0	0	9	14	

Value :: $SSBOT

>>> PROGRESS 284/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #328
=================================
Summarizing function: tableDestroy : void (table_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3350
=======

SUMS (fk, lo, un, wr, re):	3350	0	0	0	3	

Value :: $SSBOT

>>> PROGRESS 285/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #338
=================================
Summarizing function: tableFind : int (table_t * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3352
=======

SUMS (fk, lo, un, wr, re):	3352	0	0	0	6	

Value :: $SSTOP

>>> PROGRESS 286/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #329
=================================
Summarizing function: tableInsert : int (table_t * , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3351
=======

SUMS (fk, lo, un, wr, re):	3351	0	0	6	8	

Value :: $SSTOP

>>> PROGRESS 287/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #330
=================================
Summarizing function: tableCreate : table_t *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3349
=======

SUMS (fk, lo, un, wr, re):	3349	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 288/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #327
=================================
Summarizing function: messageSetMimeType : int (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3358
=======

SUMS (fk, lo, un, wr, re):	3358	0	1	14	19	

Value :: $SSTOP

>>> PROGRESS 289/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #331
=================================
Summarizing function: messageGetMimeType : mime_type (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3359
=======

SUMS (fk, lo, un, wr, re):	3359	0	0	0	1	

Value :: Vval: 
	m->mimeType

>>> PROGRESS 290/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #351
=================================
Summarizing function: hex : unsigned char (char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4118
=======

SUMS (fk, lo, un, wr, re):	4118	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 291/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #332
=================================
Summarizing function: rfc2231 : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4125
=======

SUMS (fk, lo, un, wr, re):	4125	0	0	1	3	

Value :: Mayptr (17): 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false
	Cell :: lval = _a31935_1101612_freshclam_comb ; isSum = false
	Cell :: lval = _a31939_1101744_freshclam_comb ; isSum = false
	Cell :: lval = _a32034_1104156_freshclam_comb ; isSum = false
	Cell :: lval = _a32038_1104288_freshclam_comb ; isSum = false


>>> PROGRESS 292/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #333
=================================
Summarizing function: usefulArg : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4123
=======

SUMS (fk, lo, un, wr, re):	4123	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 293/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #326
=================================
Summarizing function: messageAddArgument : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3364
=======

SUMS (fk, lo, un, wr, re):	3364	0	1	17	21	

Value :: $SSBOT

>>> PROGRESS 294/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #335
=================================
Summarizing function: messageGetArgument : char *(message * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4121
=======

SUMS (fk, lo, un, wr, re):	4121	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 295/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #334
=================================
Summarizing function: messageFindArgument : char *(message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3366
=======

SUMS (fk, lo, un, wr, re):	3366	0	0	0	3	

Value :: Mayptr (2): 
	Cell :: lval = _a28692_987214_freshclam_comb ; isSum = false
	Cell :: lval = _a28697_987395_freshclam_comb ; isSum = false
	Cell :: lval = _a28738_988886_freshclam_comb ; isSum = false
	Cell :: lval = _a28742_989027_freshclam_comb ; isSum = false


>>> PROGRESS 296/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #348
=================================
Summarizing function: uudecode : unsigned char (char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4120
=======

SUMS (fk, lo, un, wr, re):	4120	0	0	0	0	

Value :: Vval: 
	c - 32

>>> PROGRESS 297/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #349
=================================
Summarizing function: base64___0 : unsigned char (char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4119
=======

SUMS (fk, lo, un, wr, re):	4119	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 298/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #347
=================================
Summarizing function: decode : u_char *(message * , char * , u_char * , unsigned char (*)(char ) , enum __anonenum_bool_35 )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4116
=======

SUMS (fk, lo, un, wr, re):	4116	0	0	5	8	

Value :: Extptr (42): 
	Cell :: lval = (*out) ; isSum = false


>>> PROGRESS 299/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #350
=================================
Summarizing function: sanitiseBase64 : void (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4117
=======

SUMS (fk, lo, un, wr, re):	4117	0	0	1	2	

Value :: $SSBOT

>>> PROGRESS 300/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #352
=================================
Summarizing function: strrcpy : char *(char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4114
=======

SUMS (fk, lo, un, wr, re):	4114	0	0	1	2	

Value :: Extptr (4): 
	Cell :: lval = (*dest) ; isSum = false


>>> PROGRESS 301/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #346
=================================
Summarizing function: decodeLine : u_char *(message * , enum __anonenum_encoding_type_32 , char * , u_char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3379
=======

SUMS (fk, lo, un, wr, re):	3379	0	0	7	11	

Value :: Extptr (0): 
	Cell :: lval = (*buf) ; isSum = false


>>> PROGRESS 302/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #404
=================================
Summarizing function: cli_chomp : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1335
=======

SUMS (fk, lo, un, wr, re):	1335	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 303/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #304
=================================
Summarizing function: messageExport : void *(message * , char * , void *(*)(void) , void (*)(void * ) , void (*)(void * , char * , char * ) , void (*)(void * , unsigned char * , size_t ) , void *(*)(text * , void * ) )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4122
=======

SUMS (fk, lo, un, wr, re):	4122	0	1	32	48	

Value :: Extptr (322): 
	Cell :: lval = (*ret) ; isSum = false
	Cell :: lval = (*tmp___11) ; isSum = false
	Cell :: lval = (*newret) ; isSum = false


>>> PROGRESS 304/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #295
=================================
Summarizing function: messageToFileblob : fileblob *(message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3373
=======

SUMS (fk, lo, un, wr, re):	3373	0	1	32	48	

Value :: $SSBOT

>>> PROGRESS 305/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #296
=================================
Summarizing function: fileblobGetFilename : char *(fileblob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3265
=======

SUMS (fk, lo, un, wr, re):	3265	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(fb->b.name)) ; isSum = false


>>> PROGRESS 306/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #302
=================================
Summarizing function: messageCreate : message *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3355
=======

SUMS (fk, lo, un, wr, re):	3355	0	0	1	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 307/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #358
=================================
Summarizing function: lineGetRefCount : unsigned char (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4107
=======

SUMS (fk, lo, un, wr, re):	4107	0	0	0	1	

Value :: Vval: 
	(*line)

>>> PROGRESS 308/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #375
=================================
Summarizing function: lineUnlink : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4106
=======

SUMS (fk, lo, un, wr, re):	4106	0	0	1	1	

Value :: Extptr (0): 
	Cell :: lval = (*line) ; isSum = false


>>> PROGRESS 309/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #357
=================================
Summarizing function: messageDedup : void (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4124
=======

SUMS (fk, lo, un, wr, re):	4124	0	0	4	12	

Value :: $SSBOT

>>> PROGRESS 310/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #356
=================================
Summarizing function: messageAddStr : int (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3370
=======

SUMS (fk, lo, un, wr, re):	3370	0	0	19	28	

Value :: $SSTOP

>>> PROGRESS 311/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #374
=================================
Summarizing function: textDestroy : void (struct text * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3381
=======

SUMS (fk, lo, un, wr, re):	3381	0	0	1	3	

Value :: $SSBOT

>>> PROGRESS 312/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #373
=================================
Summarizing function: messageReset : void (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3357
=======

SUMS (fk, lo, un, wr, re):	3357	0	0	2	8	

Value :: $SSBOT

>>> PROGRESS 313/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #372
=================================
Summarizing function: messageDestroy : void (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3356
=======

SUMS (fk, lo, un, wr, re):	3356	0	0	2	8	

Value :: $SSBOT

>>> PROGRESS 314/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #235
=================================
Summarizing function: cli_binhex : int (char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2056
=======

SUMS (fk, lo, un, wr, re):	2056	0	1	23	42	

Value :: $SSTOP

>>> PROGRESS 315/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #273
=================================
Summarizing function: cli_readline : unsigned char *(FILE * , m_area_t * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6663
=======

SUMS (fk, lo, un, wr, re):	6663	0	0	2	6	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 316/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #280
=================================
Summarizing function: html_output_flush : void (file_buff_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6676
=======

SUMS (fk, lo, un, wr, re):	6676	0	0	1	2	

Value :: $SSBOT

>>> PROGRESS 317/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #278
=================================
Summarizing function: html_output_c : void (file_buff_t * , file_buff_t * , unsigned char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6678
=======

SUMS (fk, lo, un, wr, re):	6678	0	0	4	4	

Value :: $SSBOT

>>> PROGRESS 318/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #237
=================================
Summarizing function: html_screnc_decode : int (int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2051
=======

SUMS (fk, lo, un, wr, re):	2051	0	0	1	6	

Value :: $SSTOP

>>> PROGRESS 319/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #241
=================================
Summarizing function: riff_endian_convert_32 : uint32_t (uint32_t , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7570
=======

SUMS (fk, lo, un, wr, re):	7570	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 320/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #240
=================================
Summarizing function: riff_read_chunk : int (int , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: riff_read_chunk : int (int , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7573
=======

SUMS (fk, lo, un, wr, re):	7573	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 321/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #239
=================================
Summarizing function: cli_check_riff_exploit : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2055
=======

SUMS (fk, lo, un, wr, re):	2055	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 322/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #238
=================================
Summarizing function: cli_scanriff : int (int , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2425
=======

SUMS (fk, lo, un, wr, re):	2425	0	0	1	2	

Value :: $SSTOP

>>> PROGRESS 323/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (3) #243
=================================
Summarizing function: cli_check_jpeg_exploit : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: jpeg_check_photoshop_8bim : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: jpeg_check_photoshop : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_check_jpeg_exploit : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (3)
=================================
Summary for function: 2054
=======

SUMS (fk, lo, un, wr, re):	2054	0	0	0	2	

Value :: $SSTOP

Summary for function: 7543
=======

SUMS (fk, lo, un, wr, re):	7543	0	0	0	2	

Value :: $SSTOP

Summary for function: 7557
=======

SUMS (fk, lo, un, wr, re):	7557	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 324/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #242
=================================
Summarizing function: cli_scanjpeg : int (int , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2430
=======

SUMS (fk, lo, un, wr, re):	2430	0	0	1	2	

Value :: $SSTOP

>>> PROGRESS 325/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #246
=================================
Summarizing function: cli_check_mydoom_log : int (int , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2053
=======

SUMS (fk, lo, un, wr, re):	2053	0	0	1	2	

Value :: $SSTOP

>>> PROGRESS 326/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #274
=================================
Summarizing function: html_tag_arg_add : void (tag_arguments_t * , unsigned char * , unsigned char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6739
=======

SUMS (fk, lo, un, wr, re):	6739	0	0	4	7	

Value :: $SSBOT

>>> PROGRESS 327/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #275
=================================
Summarizing function: html_tag_arg_value : char *(tag_arguments_t * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6688
=======

SUMS (fk, lo, un, wr, re):	6688	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 328/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #276
=================================
Summarizing function: html_tag_arg_set : void (tag_arguments_t * , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6708
=======

SUMS (fk, lo, un, wr, re):	6708	0	0	1	4	

Value :: $SSBOT

>>> PROGRESS 329/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #279
=================================
Summarizing function: html_output_str : void (file_buff_t * , unsigned char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6684
=======

SUMS (fk, lo, un, wr, re):	6684	0	0	1	2	

Value :: $SSBOT

>>> PROGRESS 330/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #277
=================================
Summarizing function: html_output_tag : void (file_buff_t * , char * , tag_arguments_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6763
=======

SUMS (fk, lo, un, wr, re):	6763	0	0	2	4	

Value :: $SSBOT

>>> PROGRESS 331/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #281
=================================
Summarizing function: html_tag_arg_free : void (tag_arguments_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3386
=======

SUMS (fk, lo, un, wr, re):	3386	0	0	3	4	

Value :: $SSBOT

>>> PROGRESS 332/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #272
=================================
Summarizing function: cli_html_normalise : int (int , m_area_t * , char * , tag_arguments_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6779
=======

SUMS (fk, lo, un, wr, re):	6779	0	1	8	14	

Value :: $SSTOP

>>> PROGRESS 333/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #248
=================================
Summarizing function: html_normalise_fd : int (int , char * , tag_arguments_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2050
=======

SUMS (fk, lo, un, wr, re):	2050	0	1	7	11	

Value :: $SSTOP

>>> PROGRESS 334/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #255
=================================
Summarizing function: doubledl___0 : int (char ** , uint8_t * , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7416
=======

SUMS (fk, lo, un, wr, re):	7416	0	0	2	3	

Value :: $SSTOP

>>> PROGRESS 335/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #254
=================================
Summarizing function: unfsg : int (char * , char * , int , int , char ** , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7423
=======

SUMS (fk, lo, un, wr, re):	7423	0	0	3	2	

Value :: $SSTOP

>>> PROGRESS 336/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #252
=================================
Summarizing function: unfsg_200 : int (char * , char * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5439
=======

SUMS (fk, lo, un, wr, re):	5439	0	0	1	2	

Value :: $SSTOP

>>> PROGRESS 337/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #408
=================================
Summarizing function: cli_writeint32 : void (char * , uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1182
=======

SUMS (fk, lo, un, wr, re):	1182	0	0	1	0	

Value :: $SSBOT

>>> PROGRESS 338/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #455
=================================
Summarizing function: EC32 : uint32_t (uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5443
=======

SUMS (fk, lo, un, wr, re):	5443	0	0	0	0	

Value :: Vval: 
	(((v >> 24) | ((v & 16711680U) >> 8)) | ((v & 65280U) << 8)) | (v << 24)

>>> PROGRESS 339/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #456
=================================
Summarizing function: EC16 : uint16_t (uint16_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5441
=======

SUMS (fk, lo, un, wr, re):	5441	0	0	0	0	

Value :: Vval: 
	(v >> 8) + (v << 8)

>>> PROGRESS 340/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #262
=================================
Summarizing function: rebuildpe : char *(char * , struct SECTION * , int , uint32_t , uint32_t , uint32_t , uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7313
=======

SUMS (fk, lo, un, wr, re):	7313	0	0	4	5	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 341/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #253
=================================
Summarizing function: unfsg_133 : int (char * , char * , int , int , struct SECTION * , int , unsigned int , unsigned int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5440
=======

SUMS (fk, lo, un, wr, re):	5440	0	0	9	7	

Value :: $SSTOP

>>> PROGRESS 342/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #259
=================================
Summarizing function: doubleebx : int (char * , int32_t * , int * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6592
=======

SUMS (fk, lo, un, wr, re):	6592	0	0	2	3	

Value :: $SSTOP

>>> PROGRESS 343/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #409
=================================
Summarizing function: cli_readint32 : int32_t (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1181
=======

SUMS (fk, lo, un, wr, re):	1181	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 344/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #260
=================================
Summarizing function: pefromupx : int (char * , char * , int * , uint32_t , uint32_t , uint32_t , uint32_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 6562
=======

SUMS (fk, lo, un, wr, re):	6562	0	0	2	5	

Value :: $SSTOP

>>> PROGRESS 345/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #256
=================================
Summarizing function: upx_inflate2e : int (char * , int , char * , int * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5437
=======

SUMS (fk, lo, un, wr, re):	5437	0	0	2	5	

Value :: $SSTOP

>>> PROGRESS 346/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #257
=================================
Summarizing function: upx_inflate2d : int (char * , int , char * , int * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5436
=======

SUMS (fk, lo, un, wr, re):	5436	0	0	2	5	

Value :: $SSTOP

>>> PROGRESS 347/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #258
=================================
Summarizing function: upx_inflate2b : int (char * , int , char * , int * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5435
=======

SUMS (fk, lo, un, wr, re):	5435	0	0	2	5	

Value :: $SSTOP

>>> PROGRESS 348/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #263
=================================
Summarizing function: doubledl : int (char ** , uint8_t * , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 7327
=======

SUMS (fk, lo, un, wr, re):	7327	0	0	2	3	

Value :: $SSTOP

>>> PROGRESS 349/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #261
=================================
Summarizing function: petite_inflate2x_1to9 : int (char * , unsigned int , int , struct pe_image_section_hdr * , int , unsigned int , unsigned int , int , int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5438
=======

SUMS (fk, lo, un, wr, re):	5438	0	0	9	10	

Value :: $SSTOP

>>> PROGRESS 350/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #266
=================================
Summarizing function: initialiseTables : int (table_t ** , table_t ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3401
=======

SUMS (fk, lo, un, wr, re):	3401	0	0	7	15	

Value :: $SSTOP

>>> PROGRESS 351/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #269
=================================
Summarizing function: messageToText : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4109
=======

SUMS (fk, lo, un, wr, re):	4109	0	0	11	17	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 352/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #282
=================================
Summarizing function: messageGetEncoding : encoding_type (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3368
=======

SUMS (fk, lo, un, wr, re):	3368	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 353/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #290
=================================
Summarizing function: textCopy : text *(text * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4806
=======

SUMS (fk, lo, un, wr, re):	4806	0	0	4	5	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 354/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #289
=================================
Summarizing function: textAdd : struct text *(struct text * , text * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3382
=======

SUMS (fk, lo, un, wr, re):	3382	0	0	4	6	

Value :: Extptr (28): 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = true
	Cell :: lval = (*t_head) ; isSum = false


>>> PROGRESS 355/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #268
=================================
Summarizing function: textAddMessage : struct text *(struct text * , message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3383
=======

SUMS (fk, lo, un, wr, re):	3383	0	0	11	19	

Value :: Extptr (12): 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false
	Cell :: lval = (*aText) ; isSum = false


>>> PROGRESS 356/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #271
=================================
Summarizing function: html_normalise_mem : int (u_char * , long , char * , tag_arguments_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3385
=======

SUMS (fk, lo, un, wr, re):	3385	0	1	7	11	

Value :: $SSTOP

>>> PROGRESS 357/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #303
=================================
Summarizing function: messageToBlob : blob *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3374
=======

SUMS (fk, lo, un, wr, re):	3374	0	1	32	48	

Value :: $SSBOT

>>> PROGRESS 358/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #270
=================================
Summarizing function: checkURLs : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3413
=======

SUMS (fk, lo, un, wr, re):	3413	0	2	34	52	

Value :: $SSBOT

>>> PROGRESS 359/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #283
=================================
Summarizing function: encodingLine : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3378
=======

SUMS (fk, lo, un, wr, re):	3378	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->encoding)) ; isSum = false


>>> PROGRESS 360/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #284
=================================
Summarizing function: endOfMessage : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3400
=======

SUMS (fk, lo, un, wr, re):	3400	0	0	0	1	

Value :: Vval: 
	0

>>> PROGRESS 361/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #286
=================================
Summarizing function: messageGetMimeSubtype : char *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3361
=======

SUMS (fk, lo, un, wr, re):	3361	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->mimeSubtype)) ; isSum = false


>>> PROGRESS 362/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #285
=================================
Summarizing function: getTextPart : int (struct message ** , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3402
=======

SUMS (fk, lo, un, wr, re):	3402	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 363/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #287
=================================
Summarizing function: messageGetDispositionType : char *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3363
=======

SUMS (fk, lo, un, wr, re):	3363	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->mimeDispositionType)) ; isSum = false


>>> PROGRESS 364/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #288
=================================
Summarizing function: saveTextPart : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3406
=======

SUMS (fk, lo, un, wr, re):	3406	0	1	32	48	

Value :: $SSBOT

>>> PROGRESS 365/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #291
=================================
Summarizing function: textToFileblob : fileblob *(text * , fileblob * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3384
=======

SUMS (fk, lo, un, wr, re):	3384	0	0	2	5	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 366/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #301
=================================
Summarizing function: rfc2047 : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3407
=======

SUMS (fk, lo, un, wr, re):	3407	0	1	23	44	

Value :: Mayptr (32): 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false
	Cell :: lval = _a26972_928148_freshclam_comb ; isSum = false
	Cell :: lval = _a26976_928288_freshclam_comb ; isSum = false


>>> PROGRESS 367/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #321
=================================
Summarizing function: messageSetMimeSubtype : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3360
=======

SUMS (fk, lo, un, wr, re):	3360	0	0	1	3	

Value :: $SSBOT

>>> PROGRESS 368/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #322
=================================
Summarizing function: __strtok_r_1c__extinline : char *(char * , char , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3340
=======

SUMS (fk, lo, un, wr, re):	3340	0	0	2	2	

Value :: Extptr (1): 
	Cell :: lval = (*((*__nextp))) ; isSum = false


>>> PROGRESS 369/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #323
=================================
Summarizing function: messageAddArguments : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3365
=======

SUMS (fk, lo, un, wr, re):	3365	0	1	17	23	

Value :: $SSBOT

>>> PROGRESS 370/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #325
=================================
Summarizing function: messageSetDispositionType : void (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3362
=======

SUMS (fk, lo, un, wr, re):	3362	0	0	2	3	

Value :: $SSBOT

>>> PROGRESS 371/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #337
=================================
Summarizing function: rfc822comments : char *(char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3408
=======

SUMS (fk, lo, un, wr, re):	3408	0	0	1	3	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 372/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #320
=================================
Summarizing function: parseMimeHeader : int (message * , char * , table_t * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3405
=======

SUMS (fk, lo, un, wr, re):	3405	0	1	21	32	

Value :: Vval: 
	0

>>> PROGRESS 373/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #300
=================================
Summarizing function: parseEmailHeader : int (message * , char * , table_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3397
=======

SUMS (fk, lo, un, wr, re):	3397	0	1	30	53	

Value :: Vval: 
	-1

>>> PROGRESS 374/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #339
=================================
Summarizing function: usefulHeader : enum __anonenum_bool_35 (int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3410
=======

SUMS (fk, lo, un, wr, re):	3410	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 375/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #377
=================================
Summarizing function: textClean : struct text *(struct text * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 4112
=======

SUMS (fk, lo, un, wr, re):	4112	0	0	0	0	

Value :: Extptr (0): 
	Cell :: lval = (*t_head) ; isSum = false


>>> PROGRESS 376/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #376
=================================
Summarizing function: messageClean : void (message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3372
=======

SUMS (fk, lo, un, wr, re):	3372	0	0	1	1	

Value :: $SSBOT

>>> PROGRESS 377/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #390
=================================
Summarizing function: cli_strtokbuf : char *(char * , int , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1913
=======

SUMS (fk, lo, un, wr, re):	1913	0	0	1	1	

Value :: Extptr (0): 
	Cell :: lval = (*output) ; isSum = false


>>> PROGRESS 378/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #292
=================================
Summarizing function: parseEmailHeaders : message *(message * , table_t * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3396
=======

SUMS (fk, lo, un, wr, re):	3396	0	1	23	48	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 379/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #518
=================================
Summarizing function: strtol__extinline : long (char * , char ** , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 97
=======

SUMS (fk, lo, un, wr, re):	97	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 380/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #517
=================================
Summarizing function: atoi__extinline : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 102
=======

SUMS (fk, lo, un, wr, re):	102	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 381/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #294
=================================
Summarizing function: rfc1341 : int (message * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3409
=======

SUMS (fk, lo, un, wr, re):	3409	0	1	32	49	

Value :: $SSTOP

>>> PROGRESS 382/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #297
=================================
Summarizing function: bounceBegin : text *(message * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3377
=======

SUMS (fk, lo, un, wr, re):	3377	0	0	0	1	

Value :: Extptr (1): 
	Cell :: lval = (*(m->bounce)) ; isSum = false


>>> PROGRESS 383/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #299
=================================
Summarizing function: boundaryStart : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3399
=======

SUMS (fk, lo, un, wr, re):	3399	0	0	1	5	

Value :: $SSTOP

>>> PROGRESS 384/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #336
=================================
Summarizing function: continuationMarker : bool (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3404
=======

SUMS (fk, lo, un, wr, re):	3404	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 385/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #267
=================================
Summarizing function: parseEmailBody : int (message * , struct text * , char * , table_t * , table_t * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: parseEmailBody : int (message * , struct text * , char * , table_t * , table_t * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: parseEmailBody : int (message * , struct text * , char * , table_t * , table_t * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3398
=======

SUMS (fk, lo, un, wr, re):	3398	0	2	57	98	

Value :: $SSTOP

>>> PROGRESS 386/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #340
=================================
Summarizing function: uufasttrack : void (message * , char * , char * , FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3411
=======

SUMS (fk, lo, un, wr, re):	3411	0	0	8	12	

Value :: $SSBOT

>>> PROGRESS 387/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #371
=================================
Summarizing function: getline : char *(char * , unsigned int , FILE * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3412
=======

SUMS (fk, lo, un, wr, re):	3412	0	0	1	2	

Value :: Extptr (0): 
	Cell :: lval = (*buffer) ; isSum = false


>>> PROGRESS 388/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #298
=================================
Summarizing function: parseEmailFile : message *(FILE * , table_t * , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3395
=======

SUMS (fk, lo, un, wr, re):	3395	0	1	23	47	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 389/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #265
=================================
Summarizing function: cli_parse_mbox : int (char * , int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 3394
=======

SUMS (fk, lo, un, wr, re):	3394	0	3	46	84	

Value :: $SSTOP

>>> PROGRESS 390/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #264
=================================
Summarizing function: cli_mbox : int (char * , int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2033
=======

SUMS (fk, lo, un, wr, re):	2033	0	3	46	84	

Value :: $SSTOP

>>> PROGRESS 391/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #378
=================================
Summarizing function: mspack_destroy_cab_decompressor : void (struct mscab_decompressor * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2028
=======

SUMS (fk, lo, un, wr, re):	2028	0	0	1	4	

Value :: $SSBOT

>>> PROGRESS 392/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #388
=================================
Summarizing function: mspack_valid_system : int (struct mspack_system * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5838
=======

SUMS (fk, lo, un, wr, re):	5838	0	0	0	11	

Value :: $SSTOP

>>> PROGRESS 393/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #386
=================================
Summarizing function: mspack_create_cab_decompressor : struct mscab_decompressor *(struct mspack_system * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2027
=======

SUMS (fk, lo, un, wr, re):	2027	0	0	14	13	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 394/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #389
=================================
Summarizing function: cli_memstr : char *(char * , int , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1914
=======

SUMS (fk, lo, un, wr, re):	1914	0	0	0	1	

Value :: Extptr (2): 
	Cell :: lval = (*haystack) ; isSum = false


>>> PROGRESS 395/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #420
=================================
Summarizing function: cli_vermd5 : struct cli_md5_node *(unsigned char * , struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 995
=======

SUMS (fk, lo, un, wr, re):	995	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 396/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #421
=================================
Summarizing function: cli_md5digest : u_char *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 971
=======

SUMS (fk, lo, un, wr, re):	971	0	0	1	1	

Value :: Mustptr: 
	Cell :: lval = _a9197_308741_freshclam_comb ; isSum = false

>>> PROGRESS 397/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #419
=================================
Summarizing function: cli_checkfp : int (int , struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 974
=======

SUMS (fk, lo, un, wr, re):	974	0	0	1	9	

Value :: $SSTOP

>>> PROGRESS 398/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #453
=================================
Summarizing function: cli_rawaddr : uint32_t (uint32_t , struct pe_image_section_hdr * , uint16_t , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 5445
=======

SUMS (fk, lo, un, wr, re):	5445	0	0	1	5	

Value :: $SSTOP

>>> PROGRESS 399/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #452
=================================
Summarizing function: cli_peheader : int (int , struct cli_pe_info * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 978
=======

SUMS (fk, lo, un, wr, re):	978	0	0	7	8	

Value :: $SSTOP

>>> PROGRESS 400/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #451
=================================
Summarizing function: cli_caloff : long (char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1000
=======

SUMS (fk, lo, un, wr, re):	1000	0	0	4	8	

Value :: $SSTOP

>>> PROGRESS 401/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #450
=================================
Summarizing function: cli_validatesig : int (unsigned short , unsigned short , char * , unsigned long , int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 850
=======

SUMS (fk, lo, un, wr, re):	850	0	0	4	9	

Value :: $SSTOP

>>> PROGRESS 402/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #428
=================================
Summarizing function: cli_bm_scanbuff : int (char * , unsigned int , char ** , struct cl_node * , unsigned long , unsigned short , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 939
=======

SUMS (fk, lo, un, wr, re):	939	0	0	5	15	

Value :: $SSTOP

>>> PROGRESS 403/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #448
=================================
Summarizing function: cli_findpos : int (char * , int , int , struct cli_ac_patt * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 888
=======

SUMS (fk, lo, un, wr, re):	888	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 404/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #447
=================================
Summarizing function: cli_ac_scanbuff : int (char * , unsigned int , char ** , struct cl_node * , int * , short , unsigned long , unsigned long * , unsigned short , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 852
=======

SUMS (fk, lo, un, wr, re):	852	0	0	6	25	

Value :: $SSTOP

>>> PROGRESS 405/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #418
=================================
Summarizing function: cli_scandesc : int (int , char ** , long * , struct cl_node * , short , unsigned short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 972
=======

SUMS (fk, lo, un, wr, re):	972	0	0	8	40	

Value :: $SSTOP

>>> PROGRESS 406/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #427
=================================
Summarizing function: cli_scanbuff : int (char * , unsigned int , char ** , struct cl_node * , unsigned short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 973
=======

SUMS (fk, lo, un, wr, re):	973	0	0	6	32	

Value :: $SSTOP

>>> PROGRESS 407/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #490
=================================
Summarizing function: cl_strerror : char *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 527
=======

SUMS (fk, lo, un, wr, re):	527	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 408/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (19) #64
=================================
Summarizing function: cli_magic_scandesc : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanpe : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanfile : int (char * , char ** , unsigned long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanrar : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scangzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanbzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanszdd : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmscab : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_vba_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanhtml : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanole2 : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scantar : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanbinhex : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmschm : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanscrenc : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scantnef : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmail : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_magic_scandesc : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_vba_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanszdd : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanbzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scangzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanrar : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanfile : int (char * , char ** , unsigned long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanpe : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanole2 : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_vba_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_magic_scandesc : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmscab : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanszdd : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanbzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scangzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanzip : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanrar : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanfile : int (char * , char ** , unsigned long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanpe : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmail : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scantnef : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanscrenc : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmschm : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanbinhex : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scantar : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanole2 : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanhtml : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_vba_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_magic_scandesc : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmscab : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanole2 : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_vba_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmail : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scantnef : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanscrenc : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanmschm : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanbinhex : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scantar : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanhtml : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_magic_scandesc : int (int , char ** , time_t * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_scanole2 : int (int , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_vba_scandir : int (char * , char ** , long * , struct cl_node * , struct cl_limits * , unsigned int , unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (19)
=================================
Summary for function: 2036
=======

SUMS (fk, lo, un, wr, re):	2036	0	4	425	424	

Value :: $SSTOP

Summary for function: 2048
=======

SUMS (fk, lo, un, wr, re):	2048	0	4	425	424	

Value :: $SSTOP

Summary for function: 2066
=======

SUMS (fk, lo, un, wr, re):	2066	0	4	425	424	

Value :: $SSTOP

Summary for function: 2069
=======

SUMS (fk, lo, un, wr, re):	2069	0	4	425	424	

Value :: $SSTOP

Summary for function: 2111
=======

SUMS (fk, lo, un, wr, re):	2111	0	4	425	424	

Value :: $SSTOP

Summary for function: 2159
=======

SUMS (fk, lo, un, wr, re):	2159	0	4	425	424	

Value :: $SSTOP

Summary for function: 2179
=======

SUMS (fk, lo, un, wr, re):	2179	0	4	425	424	

Value :: $SSTOP

Summary for function: 2201
=======

SUMS (fk, lo, un, wr, re):	2201	0	4	425	424	

Value :: $SSTOP

Summary for function: 2217
=======

SUMS (fk, lo, un, wr, re):	2217	0	4	425	424	

Value :: $SSTOP

Summary for function: 2235
=======

SUMS (fk, lo, un, wr, re):	2235	0	4	425	424	

Value :: $SSTOP

Summary for function: 2281
=======

SUMS (fk, lo, un, wr, re):	2281	0	4	425	425	

Value :: $SSTOP

Summary for function: 2344
=======

SUMS (fk, lo, un, wr, re):	2344	0	4	425	424	

Value :: $SSTOP

Summary for function: 2358
=======

SUMS (fk, lo, un, wr, re):	2358	0	4	425	424	

Value :: $SSTOP

Summary for function: 2372
=======

SUMS (fk, lo, un, wr, re):	2372	0	4	425	424	

Value :: $SSTOP

Summary for function: 2386
=======

SUMS (fk, lo, un, wr, re):	2386	0	4	425	424	

Value :: $SSTOP

Summary for function: 2399
=======

SUMS (fk, lo, un, wr, re):	2399	0	4	425	424	

Value :: $SSTOP

Summary for function: 2412
=======

SUMS (fk, lo, un, wr, re):	2412	0	4	425	424	

Value :: $SSTOP

Summary for function: 2436
=======

SUMS (fk, lo, un, wr, re):	2436	0	4	425	424	

Value :: $SSTOP

Summary for function: 2449
=======

SUMS (fk, lo, un, wr, re):	2449	0	4	425	424	

Value :: $SSTOP

>>> PROGRESS 409/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #63
=================================
Summarizing function: cl_scandesc : int (int , char ** , unsigned long * , struct cl_node * , struct cl_limits * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2034
=======

SUMS (fk, lo, un, wr, re):	2034	0	4	425	424	

Value :: $SSTOP

>>> PROGRESS 410/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #62
=================================
Summarizing function: cl_scanfile : int (char * , char ** , unsigned long * , struct cl_node * , struct cl_limits * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 2035
=======

SUMS (fk, lo, un, wr, re):	2035	0	4	425	424	

Value :: $SSTOP

>>> PROGRESS 411/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #391
=================================
Summarizing function: cli_str2hex : char *(char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1912
=======

SUMS (fk, lo, un, wr, re):	1912	0	0	1	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 412/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #392
=================================
Summarizing function: cl_statfree : int (struct cl_stat * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1332
=======

SUMS (fk, lo, un, wr, re):	1332	0	0	3	3	

Value :: $SSTOP

>>> PROGRESS 413/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #405
=================================
Summarizing function: cli_strbcasestr : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1334
=======

SUMS (fk, lo, un, wr, re):	1334	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 414/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #393
=================================
Summarizing function: cl_statchkdir : int (struct cl_stat * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1331
=======

SUMS (fk, lo, un, wr, re):	1331	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 415/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #394
=================================
Summarizing function: cl_statinidir : int (char * , struct cl_stat * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1330
=======

SUMS (fk, lo, un, wr, re):	1330	0	0	4	5	

Value :: $SSTOP

>>> PROGRESS 416/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #445
=================================
Summarizing function: cli_hex2int : int (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1917
=======

SUMS (fk, lo, un, wr, re):	1917	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 417/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #397
=================================
Summarizing function: cli_hex2num : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1338
=======

SUMS (fk, lo, un, wr, re):	1338	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 418/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #429
=================================
Summarizing function: cli_bm_free : void (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 933
=======

SUMS (fk, lo, un, wr, re):	933	0	0	0	7	

Value :: $SSBOT

>>> PROGRESS 419/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #433
=================================
Summarizing function: cli_freepatt : void (struct cli_ac_patt * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 881
=======

SUMS (fk, lo, un, wr, re):	881	0	0	0	10	

Value :: $SSBOT

>>> PROGRESS 420/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #432
=================================
Summarizing function: cli_ac_free : void (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 854
=======

SUMS (fk, lo, un, wr, re):	854	0	0	0	14	

Value :: $SSBOT

>>> PROGRESS 421/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #423
=================================
Summarizing function: cl_free : void (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 968
=======

SUMS (fk, lo, un, wr, re):	968	0	1	1	32	

Value :: $SSBOT

>>> PROGRESS 422/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #396
=================================
Summarizing function: cli_loadmd : int (FILE * , struct cl_node ** , unsigned int * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1528
=======

SUMS (fk, lo, un, wr, re):	1528	0	1	16	39	

Value :: $SSTOP

>>> PROGRESS 423/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #430
=================================
Summarizing function: cli_bm_init : int (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 929
=======

SUMS (fk, lo, un, wr, re):	929	0	0	3	4	

Value :: $SSTOP

>>> PROGRESS 424/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #441
=================================
Summarizing function: cli_hex2si : short *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1336
=======

SUMS (fk, lo, un, wr, re):	1336	0	0	1	2	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 425/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #444
=================================
Summarizing function: cli_hex2str : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1337
=======

SUMS (fk, lo, un, wr, re):	1337	0	0	1	2	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 426/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #449
=================================
Summarizing function: cli_ac_addpatt : int (struct cl_node * , struct cli_ac_patt * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 851
=======

SUMS (fk, lo, un, wr, re):	851	0	0	7	8	

Value :: $SSTOP

>>> PROGRESS 427/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #440
=================================
Summarizing function: cli_ac_addsig : int (struct cl_node * , char * , char * , int , int , int , unsigned short , unsigned int , unsigned int , char * , unsigned short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1343
=======

SUMS (fk, lo, un, wr, re):	1343	0	0	22	17	

Value :: $SSTOP

>>> PROGRESS 428/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #442
=================================
Summarizing function: __strpbrk_c2__extinline : char *(char * , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1317
=======

SUMS (fk, lo, un, wr, re):	1317	0	0	0	1	

Value :: Extptr (2): 
	Cell :: lval = (*__s) ; isSum = false


>>> PROGRESS 429/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #443
=================================
Summarizing function: __strpbrk_c3__extinline : char *(char * , int , int , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1322
=======

SUMS (fk, lo, un, wr, re):	1322	0	0	0	1	

Value :: Extptr (2): 
	Cell :: lval = (*__s) ; isSum = false


>>> PROGRESS 430/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #446
=================================
Summarizing function: cli_bm_addpatt : int (struct cl_node * , struct cli_bm_patt * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 921
=======

SUMS (fk, lo, un, wr, re):	921	0	0	3	7	

Value :: $SSTOP

>>> PROGRESS 431/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #439
=================================
Summarizing function: cli_parse_add : int (struct cl_node * , char * , char * , unsigned short , char * , unsigned short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1392
=======

SUMS (fk, lo, un, wr, re):	1392	0	0	30	24	

Value :: $SSTOP

>>> PROGRESS 432/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #474
=================================
Summarizing function: cl_retflevel : int ()
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 523
=======

SUMS (fk, lo, un, wr, re):	523	0	0	0	0	

Value :: Vval: 
	5

>>> PROGRESS 433/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #398
=================================
Summarizing function: cli_loadndb : int (FILE * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1466
=======

SUMS (fk, lo, un, wr, re):	1466	0	1	36	50	

Value :: $SSTOP

>>> PROGRESS 434/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #399
=================================
Summarizing function: cli_loadhdb : int (FILE * , struct cl_node ** , unsigned int * , unsigned short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1517
=======

SUMS (fk, lo, un, wr, re):	1517	0	1	12	37	

Value :: $SSTOP

>>> PROGRESS 435/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #401
=================================
Summarizing function: cli_untgz : int (int , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1820
=======

SUMS (fk, lo, un, wr, re):	1820	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 436/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #403
=================================
Summarizing function: cli_loaddb : int (FILE * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1452
=======

SUMS (fk, lo, un, wr, re):	1452	0	1	36	50	

Value :: $SSTOP

>>> PROGRESS 437/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #485
=================================
Summarizing function: cli_md5stream : char *(FILE * , unsigned char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1177
=======

SUMS (fk, lo, un, wr, re):	1177	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 438/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #502
=================================
Summarizing function: cl_cvdfree : void (struct cl_cvd * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 238
=======

SUMS (fk, lo, un, wr, re):	238	0	0	0	4	

Value :: $SSBOT

>>> PROGRESS 439/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #504
=================================
Summarizing function: cl_cvdparse : struct cl_cvd *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 525
=======

SUMS (fk, lo, un, wr, re):	525	0	0	9	8	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 440/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #484
=================================
Summarizing function: cli_cvdverify : int (FILE * , struct cl_cvd * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1866
=======

SUMS (fk, lo, un, wr, re):	1866	0	0	9	8	

Value :: $SSTOP

>>> PROGRESS 441/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (3) #395
=================================
Summarizing function: cl_loaddb : int (char * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cl_loaddbdir : int (char * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_cvdload : int (FILE * , struct cl_node ** , unsigned int * , short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cl_loaddb : int (char * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cl_loaddbdir : int (char * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cli_cvdload : int (FILE * , struct cl_node ** , unsigned int * , short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cl_loaddb : int (char * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
Summarizing function: cl_loaddbdir : int (char * , struct cl_node ** , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (3)
=================================
Summary for function: 1328
=======

SUMS (fk, lo, un, wr, re):	1328	0	2	63	60	

Value :: $SSTOP

Summary for function: 1329
=======

SUMS (fk, lo, un, wr, re):	1329	0	2	63	59	

Value :: $SSTOP

Summary for function: 1333
=======

SUMS (fk, lo, un, wr, re):	1333	0	2	63	59	

Value :: $SSTOP

>>> PROGRESS 442/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #407
=================================
Summarizing function: cli_filecopy : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1184
=======

SUMS (fk, lo, un, wr, re):	1184	0	0	0	1	

Value :: Vval: 
	-1

>>> PROGRESS 443/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #411
=================================
Summarizing function: cli_md5file : char *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1178
=======

SUMS (fk, lo, un, wr, re):	1178	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 444/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #413
=================================
Summarizing function: cl_perror : char *(int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1175
=======

SUMS (fk, lo, un, wr, re):	1175	0	0	0	0	

Value :: $SSTOP

>>> PROGRESS 445/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #414
=================================
Summarizing function: cl_settempdir : void (char * , short )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1174
=======

SUMS (fk, lo, un, wr, re):	1174	0	0	1	2	

Value :: $SSBOT

>>> PROGRESS 446/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #416
=================================
Summarizing function: cl_freetrie : void (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1127
=======

SUMS (fk, lo, un, wr, re):	1127	0	1	1	32	

Value :: $SSBOT

>>> PROGRESS 447/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #436
=================================
Summarizing function: cli_enqueue : int (struct nodelist ** , struct cli_ac_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 861
=======

SUMS (fk, lo, un, wr, re):	861	0	0	3	3	

Value :: $SSTOP

>>> PROGRESS 448/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #437
=================================
Summarizing function: cli_dequeue : struct cli_ac_node *(struct nodelist ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 865
=======

SUMS (fk, lo, un, wr, re):	865	0	0	2	3	

Value :: $SSTOP

>>> PROGRESS 449/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #435
=================================
Summarizing function: cli_maketrans : int (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 870
=======

SUMS (fk, lo, un, wr, re):	870	0	0	6	8	

Value :: $SSTOP

>>> PROGRESS 450/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #438
=================================
Summarizing function: cli_addtypesigs : int (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 855
=======

SUMS (fk, lo, un, wr, re):	855	0	0	30	27	

Value :: $SSTOP

>>> PROGRESS 451/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #434
=================================
Summarizing function: cli_ac_buildtrie : int (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 853
=======

SUMS (fk, lo, un, wr, re):	853	0	0	35	31	

Value :: $SSTOP

>>> PROGRESS 452/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #424
=================================
Summarizing function: cl_build : int (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 967
=======

SUMS (fk, lo, un, wr, re):	967	0	0	35	31	

Value :: $SSTOP

>>> PROGRESS 453/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #417
=================================
Summarizing function: cl_buildtrie : int (struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 1124
=======

SUMS (fk, lo, un, wr, re):	1124	0	0	35	31	

Value :: $SSTOP

>>> PROGRESS 454/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #425
=================================
Summarizing function: cl_dup : struct cl_node *(struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 966
=======

SUMS (fk, lo, un, wr, re):	966	0	1	1	2	

Value :: Extptr (0): 
	Cell :: lval = (*root) ; isSum = false


>>> PROGRESS 455/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #426
=================================
Summarizing function: cl_scanbuff : int (char * , unsigned int , char ** , struct cl_node * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 965
=======

SUMS (fk, lo, un, wr, re):	965	0	0	6	32	

Value :: $SSTOP

>>> PROGRESS 456/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #461
=================================
Summarizing function: find_long_opt : struct option *(char * , struct option * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 437
=======

SUMS (fk, lo, un, wr, re):	437	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 457/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #513
=================================
Summarizing function: mmalloc : void *(unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 121
=======

SUMS (fk, lo, un, wr, re):	121	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a3262_103980_freshclam_comb ; isSum = false

>>> PROGRESS 458/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #523
=================================
Summarizing function: mcalloc : void *(unsigned int , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 40
=======

SUMS (fk, lo, un, wr, re):	40	0	0	0	1	

Value :: Mustptr: 
	Cell :: lval = _a3277_104306_freshclam_comb ; isSum = false

>>> PROGRESS 459/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #460
=================================
Summarizing function: register_long_opt : void (struct optstruct * , char * , struct option * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 399
=======

SUMS (fk, lo, un, wr, re):	399	0	0	5	9	

Value :: $SSBOT

>>> PROGRESS 460/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #463
=================================
Summarizing function: find_char_opt : struct option *(char , struct option * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 419
=======

SUMS (fk, lo, un, wr, re):	419	0	0	0	2	

Value :: $SSTOP

>>> PROGRESS 461/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #462
=================================
Summarizing function: register_char_opt : void (struct optstruct * , char , struct option * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 398
=======

SUMS (fk, lo, un, wr, re):	398	0	0	5	7	

Value :: $SSBOT

>>> PROGRESS 462/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #522
=================================
Summarizing function: logg : int (char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 26
=======

SUMS (fk, lo, un, wr, re):	26	0	1	2	9	

Value :: $SSTOP

>>> PROGRESS 463/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #465
=================================
Summarizing function: writepid : void (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 325
=======

SUMS (fk, lo, un, wr, re):	325	0	1	2	8	

Value :: $SSBOT

>>> PROGRESS 464/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #519
=================================
Summarizing function: mprintf : void (char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 35
=======

SUMS (fk, lo, un, wr, re):	35	0	1	2	14	

Value :: $SSBOT

>>> PROGRESS 465/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #471
=================================
Summarizing function: execute : void (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 320
=======

SUMS (fk, lo, un, wr, re):	320	0	1	3	14	

Value :: $SSBOT

>>> PROGRESS 466/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #511
=================================
Summarizing function: isnumb : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 122
=======

SUMS (fk, lo, un, wr, re):	122	0	0	0	1	

Value :: $SSTOP

>>> PROGRESS 467/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #514
=================================
Summarizing function: cfgopt : struct cfgstruct *(struct cfgstruct * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 118
=======

SUMS (fk, lo, un, wr, re):	118	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 468/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #512
=================================
Summarizing function: regcfg : struct cfgstruct *(struct cfgstruct * , char * , char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 117
=======

SUMS (fk, lo, un, wr, re):	117	0	0	6	6	

Value :: Extptr (4): 
	Cell :: lval = _a3262_103980_freshclam_comb ; isSum = false
	Cell :: lval = (*copt) ; isSum = false


>>> PROGRESS 469/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #510
=================================
Summarizing function: parsecfg : struct cfgstruct *(char * , int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 116
=======

SUMS (fk, lo, un, wr, re):	116	0	0	7	9	

Value :: Mustptr: 
	Cell :: lval = _a3262_103980_freshclam_comb ; isSum = false

>>> PROGRESS 470/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #472
=================================
Summarizing function: notify : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 533
=======

SUMS (fk, lo, un, wr, re):	533	0	1	9	23	

Value :: $SSTOP

>>> PROGRESS 471/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #475
=================================
Summarizing function: wwwconnect : int (char * , char * , int , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 529
=======

SUMS (fk, lo, un, wr, re):	529	0	1	2	13	

Value :: $SSTOP

>>> PROGRESS 472/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #477
=================================
Summarizing function: Rfc2822DateTime : int (char * , time_t )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 700
=======

SUMS (fk, lo, un, wr, re):	700	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 473/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #482
=================================
Summarizing function: fmt_base64 : unsigned int (char * , char * , unsigned int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 532
=======

SUMS (fk, lo, un, wr, re):	532	0	0	1	2	

Value :: $SSTOP

>>> PROGRESS 474/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #476
=================================
Summarizing function: remote_cvdhead : struct cl_cvd *(char * , int , char * , char * , char * , char * , int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 530
=======

SUMS (fk, lo, un, wr, re):	530	0	1	12	21	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 475/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #481
=================================
Summarizing function: get_database : int (char * , int , char * , char * , char * , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 531
=======

SUMS (fk, lo, un, wr, re):	531	0	1	3	15	

Value :: $SSTOP

>>> PROGRESS 476/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #483
=================================
Summarizing function: cl_cvdverify : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 526
=======

SUMS (fk, lo, un, wr, re):	526	0	0	9	8	

Value :: $SSTOP

>>> PROGRESS 477/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #503
=================================
Summarizing function: cl_cvdhead : struct cl_cvd *(char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 237
=======

SUMS (fk, lo, un, wr, re):	237	0	0	9	7	

Value :: Mustptr: 
	Cell :: lval = _a9216_309178_freshclam_comb ; isSum = false

>>> PROGRESS 478/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #473
=================================
Summarizing function: downloaddb : int (char * , char * , char * , char * , int * , struct cfgstruct * , char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 528
=======

SUMS (fk, lo, un, wr, re):	528	0	2	12	33	

Value :: $SSTOP

>>> PROGRESS 479/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #491
=================================
Summarizing function: cl_retver : char *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 524
=======

SUMS (fk, lo, un, wr, re):	524	0	0	0	0	

Value :: Vval: 
	"0.85.1"

>>> PROGRESS 480/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #492
=================================
Summarizing function: txtquery : char *(char * , unsigned int * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 535
=======

SUMS (fk, lo, un, wr, re):	535	0	1	3	13	

Value :: Mustptr: 
	Cell :: lval = _a3262_103980_freshclam_comb ; isSum = false

>>> PROGRESS 481/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #495
=================================
Summarizing function: getargl : char *(struct optstruct * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 313
=======

SUMS (fk, lo, un, wr, re):	313	0	0	0	6	

Value :: $SSTOP

>>> PROGRESS 482/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #497
=================================
Summarizing function: optl : int (struct optstruct * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 311
=======

SUMS (fk, lo, un, wr, re):	311	0	0	0	5	

Value :: $SSTOP

>>> PROGRESS 483/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #498
=================================
Summarizing function: optc : int (struct optstruct * , char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 310
=======

SUMS (fk, lo, un, wr, re):	310	0	0	0	3	

Value :: $SSTOP

>>> PROGRESS 484/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #470
=================================
Summarizing function: downloadmanager : int (struct cfgstruct * , struct optstruct * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 316
=======

SUMS (fk, lo, un, wr, re):	316	0	2	18	40	

Value :: $SSTOP

>>> PROGRESS 485/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #467
=================================
Summarizing function: download : int (struct cfgstruct * , struct optstruct * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 319
=======

SUMS (fk, lo, un, wr, re):	319	0	2	18	40	

Value :: $SSTOP

>>> PROGRESS 486/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #468
=================================
Summarizing function: daemonize : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 318
=======

SUMS (fk, lo, un, wr, re):	318	0	0	1	0	

Value :: $SSBOT

>>> PROGRESS 487/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #469
=================================
Summarizing function: help : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 317
=======

SUMS (fk, lo, un, wr, re):	317	0	0	3	13	

Value :: $SSBOT

>>> PROGRESS 488/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #493
=================================
Summarizing function: cl_debug : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 315
=======

SUMS (fk, lo, un, wr, re):	315	0	0	1	0	

Value :: $SSBOT

>>> PROGRESS 489/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #494
=================================
Summarizing function: free_opt : void (struct optstruct * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 314
=======

SUMS (fk, lo, un, wr, re):	314	0	1	3	18	

Value :: $SSBOT

>>> PROGRESS 490/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #496
=================================
Summarizing function: getargc : char *(struct optstruct * , char )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 312
=======

SUMS (fk, lo, un, wr, re):	312	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 491/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #508
=================================
Summarizing function: cl_retdbdir : char *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 236
=======

SUMS (fk, lo, un, wr, re):	236	0	0	0	0	

Value :: Vval: 
	"/usr/local/share/clamav"

>>> PROGRESS 492/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #509
=================================
Summarizing function: freecfg : void (struct cfgstruct * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 119
=======

SUMS (fk, lo, un, wr, re):	119	0	0	0	4	

Value :: $SSBOT

>>> PROGRESS 493/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #501
=================================
Summarizing function: freshdbdir : char *(void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 241
=======

SUMS (fk, lo, un, wr, re):	241	0	0	15	16	

Value :: Mayptr (0): 
	Cell :: lval = _a3515_113715_freshclam_comb ; isSum = false
	Cell :: lval = _a3519_113840_freshclam_comb ; isSum = false


>>> PROGRESS 494/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #500
=================================
Summarizing function: print_version : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 271
=======

SUMS (fk, lo, un, wr, re):	271	0	0	15	17	

Value :: $SSBOT

>>> PROGRESS 495/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #520
=================================
Summarizing function: logg_facility : int (char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 34
=======

SUMS (fk, lo, un, wr, re):	34	0	0	0	4	

Value :: $SSTOP

>>> PROGRESS 496/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #521
=================================
Summarizing function: logg_close : void (void)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 27
=======

SUMS (fk, lo, un, wr, re):	27	0	1	1	2	

Value :: $SSBOT

>>> PROGRESS 497/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #464
=================================
Summarizing function: freshclam : int (struct optstruct * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 332
=======

SUMS (fk, lo, un, wr, re):	332	0	2	27	46	

Value :: $SSTOP

>>> PROGRESS 498/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #459
=================================
Summarizing function: main : int (int , char ** )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 400
=======

SUMS (fk, lo, un, wr, re):	400	0	2	33	53	

Value :: $SSTOP

>>> PROGRESS 499/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #466
=================================
Summarizing function: daemon_sighandler : void (int )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 323
=======

SUMS (fk, lo, un, wr, re):	323	0	0	2	1	

Value :: $SSBOT

>>> PROGRESS 500/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #499
=================================
Summarizing function: filecopy : int (char * , char * )
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 278
=======

SUMS (fk, lo, un, wr, re):	278	0	0	0	0	

Value :: Vval: 
	-1

>>> PROGRESS 501/502 SCCs DONE!

=================================
getting next SCC from server
Acquiring needed summaries
=================================
Starting an SCC (1) #524
=================================
Summarizing function: mdprintf : int (int , char * , ...)
-----
race_a: doing symstate analysis
race_a: doing lockset analysis
=================================
Finished an SCC (1)
=================================
Summary for function: 25
=======

SUMS (fk, lo, un, wr, re):	25	0	0	0	0	

Value :: $SSBOT

>>> PROGRESS 502/502 SCCs DONE!

=================================
getting next SCC from server
Bottomup analysis complete
-----



Beginning Thread Analysis:
-----
Expected # thread-creation site pairs: 1
checking a thread-creation pair
now checking thread roots: getURL, getURL
w/ wr1, wr2, rd1, rd2 sets: 1, 1, 5, 5
done with pair, sending notification
completed all thread pairs


$$$$$$
Total Warnings: 0
Elapsed time (secs): 47.21095
Top heap size (words): 19046400
Current heap size (words): 11919360
Lifetime allocated bytes: 10445895088.
Collections -- minor: 6024 major: 69 compactions: 5
return value is 0
ran 1 times
cleared status file: /tmp/temp.qJtvEX
Thu Jul  5 17:42:20 PDT 2007
