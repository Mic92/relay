Tue Jan 19 22:00:58 PST 2010
incrementing generation number
incrementing value in gen_num.txt

running server on /home/jan/research/relay-race/racetests/aget/ciltrees
Registered summary type: rs_scc
Registered summary type: rs
Server ip is: 127.0.1.1
Loading Cil Varinfo ID ranges for lookup tables
Loading ranges from .vids_ckeys_fixed
Setting Cil Varinfo ID ranges
Finished parsing config group: DISTRIBUTED
Finished parsing config group: SERVER
Done reading config file
Finished parsing config group: SUMMARY_DB
Finished parsing config group: REQUEST
Finished parsing config group: DISTRIBUTED
Finished parsing config group: FILE_SERVER
Finished parsing config group: LOCK_FUNCS
Finished parsing config group: THREAD_FUNCS
Finished parsing config group: EXIT_FUNCS
Finished parsing config group: ALIAS_ANALYSIS
Finished parsing config group: ENTRY_POINTS
Finished parsing config group: SYM_EX
Done reading config file
Initializing Steensgaard AA info
Loading function info
Loading tempVar info
Using old PTA results
Old PTA results loaded
Initializing Andersen's AA info
Using old PTA results: /home/jan/research/relay-race/racetests/aget/ciltrees/.pta_results.anders
Old PTA results loaded
Entry points use roots: true
trying to clear logs
Starting server
-----
Reading callgraph, initializing work
-----
Reached end of /home/jan/research/relay-race/racetests/aget/ciltrees/calls.anders call graph file
Num funcs: 77
Scc_cg: Pruned 59 funcs w/out bodies for scc DAG
>>> PROGRESS 1/18 SCCs DONE!

>>> PROGRESS 2/18 SCCs DONE!

>>> PROGRESS 3/18 SCCs DONE!

>>> PROGRESS 4/18 SCCs DONE!

>>> PROGRESS 5/18 SCCs DONE!

>>> PROGRESS 6/18 SCCs DONE!

>>> PROGRESS 7/18 SCCs DONE!

>>> PROGRESS 8/18 SCCs DONE!

>>> PROGRESS 9/18 SCCs DONE!

>>> PROGRESS 10/18 SCCs DONE!

>>> PROGRESS 11/18 SCCs DONE!

>>> PROGRESS 12/18 SCCs DONE!

>>> PROGRESS 13/18 SCCs DONE!

>>> PROGRESS 14/18 SCCs DONE!

>>> PROGRESS 15/18 SCCs DONE!

>>> PROGRESS 16/18 SCCs DONE!

>>> PROGRESS 17/18 SCCs DONE!

>>> PROGRESS 18/18 SCCs DONE!

Finished all SCCs
Received warnings from worker. Status: 1/1
Sorting races

Printing races

****
Possible race between access to:

nthreads @ aget_comb.c:172 and
nthreads @ aget_comb.c:172
	Cluster ID: 10
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:970:(198.f), aget_comb.c:1137:(200.f), aget_comb.c:1139:(200.f)] and
	[aget_comb.c:330:(25.f), aget_comb.c:332:(25.f), aget_comb.c:433:(26.f), aget_comb.c:222:(38.f), aget_comb.c:225:(38.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

req @ aget_comb.c:174 and
req @ aget_comb.c:174
	Cluster ID: 16
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1136:(200.f)] and
	[aget_comb.c:188:(38.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

wthread @ aget_comb.c:176 and
wthread @ aget_comb.c:176
	Cluster ID: 18
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1137:(200.f)] and
	[aget_comb.c:335:(25.f), aget_comb.c:435:(26.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

prev @ aget_comb.c:779 and
prev @ aget_comb.c:779
	Cluster ID: 17
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:788:(113.f)] and
	[aget_comb.c:804:(113.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(3)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
****
Possible race between access to:

prev @ aget_comb.c:779 and
prev @ aget_comb.c:779
	Cluster ID: 4
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:804:(113.f)] and
	[aget_comb.c:804:(113.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
(3)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 9
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:984:(199.f), aget_comb.c:1140:(200.f)] and
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 13
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:984:(199.f), aget_comb.c:1140:(200.f)] and
	[aget_comb.c:1186:(24.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 0
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f)] and
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f), aget_comb.c:1094:(67.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
LS for 2nd access:
L+ = empty;
	made empty at: aget_comb.c:1094
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = empty;
	made empty at: aget_comb.c:1094
LS for 2nd access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 8
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f), aget_comb.c:1094:(67.f)] and
	[aget_comb.c:1186:(24.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = empty;
	made empty at: aget_comb.c:1094
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
(2)
LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

bwritten @ aget_comb.c:995 and
bwritten @ aget_comb.c:995
	Cluster ID: 12
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1079:(67.f), aget_comb.c:1092:(67.f)] and
	[aget_comb.c:1188:(24.f)]

	Confidence: Syntactic

LS for 1st access:
L+ = {bwritten_mutex#g:213} (1)
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 23].clength and
[REP: 23].clength
	Cluster ID: 14
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:984:(199.f)] and
	[aget_comb.c:929:(64.f)]

	Confidence: used PTA nodes lblSet(1, 1)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

[REP: 20].clength and
[REP: 20].clength
	Cluster ID: 5
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1094:(67.f)] and
	[aget_comb.c:386:(25.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].fd and
[REP: 20].fd
	Cluster ID: 19
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1073:(67.f), aget_comb.c:1075:(67.f), aget_comb.c:1085:(67.f), aget_comb.c:1088:(67.f)] and
	[aget_comb.c:385:(25.f), aget_comb.c:463:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].foffset and
[REP: 20].foffset
	Cluster ID: 6
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1021:(67.f), aget_comb.c:1096:(67.f)] and
	[aget_comb.c:378:(25.f), aget_comb.c:380:(25.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].offset and
[REP: 20].offset
	Cluster ID: 15
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)] and
	[aget_comb.c:462:(26.f), aget_comb.c:464:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].offset and
[REP: 20].offset
	Cluster ID: 2
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)] and
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

[REP: 20].offset and
[REP: 20].offset
	Cluster ID: 20
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1077:(67.f), aget_comb.c:1090:(67.f)] and
	[aget_comb.c:1081:(67.f), aget_comb.c:1084:(67.f), aget_comb.c:1085:(67.f), aget_comb.c:1088:(67.f), aget_comb.c:1090:(67.f), aget_comb.c:1096:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(2)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

[REP: 20].soffset and
[REP: 20].soffset
	Cluster ID: 11
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1071:(67.f), aget_comb.c:1073:(67.f), aget_comb.c:1075:(67.f), aget_comb.c:1077:(67.f)] and
	[aget_comb.c:376:(25.f), aget_comb.c:462:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 22
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:972:(198.f)] and
	[aget_comb.c:399:(25.f), aget_comb.c:480:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 3
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:972:(198.f)] and
	[aget_comb.c:972:(198.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:193 5478 w/ func: signal_waiter

Different possible paths & LS (first 4):

****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 7
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:972:(198.f)] and
	[aget_comb.c:1097:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:193 5478 w/ func: signal_waiter
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get
****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 21
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1097:(67.f)] and
	[aget_comb.c:399:(25.f), aget_comb.c:480:(26.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: #entry_point:0 0 w/ func: main
****
Possible race between access to:

[REP: 20].status and
[REP: 20].status
	Cluster ID: 1
	Escapes? true / true 
	Accessed at locs:
	[aget_comb.c:1097:(67.f)] and
	[aget_comb.c:1097:(67.f)]

	Confidence: used PTA nodes lblSet(2, 2)

LS for 1st access:
L+ = empty;
LS for 2nd access:
L+ = empty;
	Th. 1 spawned: aget_comb.c:391 11794 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get

Different possible paths & LS (first 4):

(0)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:391 11794 w/ func: http_get
(1)
	Th. 1 spawned: aget_comb.c:468 14482 w/ func: http_get
	Th. 2 spawned: aget_comb.c:468 14482 w/ func: http_get


$$$$$$
Total Warnings: 23
Elapsed time (secs): 0.020001
Top heap size (MB): 1
Current heap size (MB): 1
Lifetime allocated bytes (MB): 3
Collections -- minor: 9 major: 2 compactions: 0
Bytes per word: 4
Elapsed time (secs): 0.024001
Top heap size (MB): 1
Current heap size (MB): 1
Lifetime allocated bytes (MB): 3
Collections -- minor: 9 major: 2 compactions: 0
Bytes per word: 4
Tue Jan 19 22:00:58 PST 2010
